//
// File generated by rootcint at Fri Apr 23 11:57:53 2004.
// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h"
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

#include "BaseDict.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;

#include "RtypesImp.h"

#include "TVectorProxy.h"

namespace ROOT {
   namespace Shadow {
   } // Of namespace ROOT::Shadow
} // Of namespace ROOT

namespace ROOT {
   void TDSPData_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPData_IsA(const void*);
   static void *new_TDSPData(void *p = 0);
   static void *newArray_TDSPData(Long_t size);
   static void delete_TDSPData(void *p);
   static void deleteArray_TDSPData(void *p);
   static void destruct_TDSPData(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPData*)
   {
      TDSPData *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPData", TDSPData::Class_Version(), "TDSPData.h", 28,
                  typeid(TDSPData), DefineBehavior(ptr, ptr),
                  &::TDSPData::Dictionary, &TDSPData_IsA, 0,
                  sizeof(TDSPData) );
      instance.SetNew(&new_TDSPData);
      instance.SetNewArray(&newArray_TDSPData);
      instance.SetDelete(&delete_TDSPData);
      instance.SetDeleteArray(&deleteArray_TDSPData);
      instance.SetDestructor(&destruct_TDSPData);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPSignal_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPSignal_IsA(const void*);
   static void *new_TDSPSignal(void *p = 0);
   static void *newArray_TDSPSignal(Long_t size);
   static void delete_TDSPSignal(void *p);
   static void deleteArray_TDSPSignal(void *p);
   static void destruct_TDSPSignal(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPSignal*)
   {
      TDSPSignal *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPSignal", TDSPSignal::Class_Version(), "TDSPSignal.h", 31,
                  typeid(TDSPSignal), DefineBehavior(ptr, ptr),
                  &::TDSPSignal::Dictionary, &TDSPSignal_IsA, 0,
                  sizeof(TDSPSignal) );
      instance.SetNew(&new_TDSPSignal);
      instance.SetNewArray(&newArray_TDSPSignal);
      instance.SetDelete(&delete_TDSPSignal);
      instance.SetDeleteArray(&deleteArray_TDSPSignal);
      instance.SetDestructor(&destruct_TDSPSignal);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPSignal*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPFifo_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPFifo_IsA(const void*);
   static void *new_TDSPFifo(void *p = 0);
   static void *newArray_TDSPFifo(Long_t size);
   static void delete_TDSPFifo(void *p);
   static void deleteArray_TDSPFifo(void *p);
   static void destruct_TDSPFifo(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPFifo*)
   {
      TDSPFifo *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPFifo", TDSPFifo::Class_Version(), "TDSPFifo.h", 57,
                  typeid(TDSPFifo), DefineBehavior(ptr, ptr),
                  &::TDSPFifo::Dictionary, &TDSPFifo_IsA, 0,
                  sizeof(TDSPFifo) );
      instance.SetNew(&new_TDSPFifo);
      instance.SetNewArray(&newArray_TDSPFifo);
      instance.SetDelete(&delete_TDSPFifo);
      instance.SetDeleteArray(&deleteArray_TDSPFifo);
      instance.SetDestructor(&destruct_TDSPFifo);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPFifo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPOperator_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPOperator_IsA(const void*);
   static void *new_TDSPOperator(void *p = 0);
   static void *newArray_TDSPOperator(Long_t size);
   static void delete_TDSPOperator(void *p);
   static void deleteArray_TDSPOperator(void *p);
   static void destruct_TDSPOperator(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPOperator*)
   {
      TDSPOperator *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPOperator", TDSPOperator::Class_Version(), "TDSPOperator.h", 31,
                  typeid(TDSPOperator), DefineBehavior(ptr, ptr),
                  &::TDSPOperator::Dictionary, &TDSPOperator_IsA, 0,
                  sizeof(TDSPOperator) );
      instance.SetNew(&new_TDSPOperator);
      instance.SetNewArray(&newArray_TDSPOperator);
      instance.SetDelete(&delete_TDSPOperator);
      instance.SetDeleteArray(&deleteArray_TDSPOperator);
      instance.SetDestructor(&destruct_TDSPOperator);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPOperator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPGenerator_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPGenerator_IsA(const void*);
   static void *new_TDSPGenerator(void *p = 0);
   static void *newArray_TDSPGenerator(Long_t size);
   static void delete_TDSPGenerator(void *p);
   static void deleteArray_TDSPGenerator(void *p);
   static void destruct_TDSPGenerator(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPGenerator*)
   {
      TDSPGenerator *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPGenerator", TDSPGenerator::Class_Version(), "TDSPGenerator.h", 27,
                  typeid(TDSPGenerator), DefineBehavior(ptr, ptr),
                  &::TDSPGenerator::Dictionary, &TDSPGenerator_IsA, 0,
                  sizeof(TDSPGenerator) );
      instance.SetNew(&new_TDSPGenerator);
      instance.SetNewArray(&newArray_TDSPGenerator);
      instance.SetDelete(&delete_TDSPGenerator);
      instance.SetDeleteArray(&deleteArray_TDSPGenerator);
      instance.SetDestructor(&destruct_TDSPGenerator);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPGenerator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPSpectrum_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPSpectrum_IsA(const void*);
   static void *new_TDSPSpectrum(void *p = 0);
   static void *newArray_TDSPSpectrum(Long_t size);
   static void delete_TDSPSpectrum(void *p);
   static void deleteArray_TDSPSpectrum(void *p);
   static void destruct_TDSPSpectrum(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPSpectrum*)
   {
      TDSPSpectrum *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPSpectrum", TDSPSpectrum::Class_Version(), "TDSPSpectrum.h", 27,
                  typeid(TDSPSpectrum), DefineBehavior(ptr, ptr),
                  &::TDSPSpectrum::Dictionary, &TDSPSpectrum_IsA, 0,
                  sizeof(TDSPSpectrum) );
      instance.SetNew(&new_TDSPSpectrum);
      instance.SetNewArray(&newArray_TDSPSpectrum);
      instance.SetDelete(&delete_TDSPSpectrum);
      instance.SetDeleteArray(&deleteArray_TDSPSpectrum);
      instance.SetDestructor(&destruct_TDSPSpectrum);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPSpectrum*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPOutput1_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPOutput1_IsA(const void*);
   static void *new_TDSPOutput1(void *p = 0);
   static void *newArray_TDSPOutput1(Long_t size);
   static void delete_TDSPOutput1(void *p);
   static void deleteArray_TDSPOutput1(void *p);
   static void destruct_TDSPOutput1(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPOutput1*)
   {
      TDSPOutput1 *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPOutput1", TDSPOutput1::Class_Version(), "TDSPOutput1.h", 35,
                  typeid(TDSPOutput1), DefineBehavior(ptr, ptr),
                  &::TDSPOutput1::Dictionary, &TDSPOutput1_IsA, 0,
                  sizeof(TDSPOutput1) );
      instance.SetNew(&new_TDSPOutput1);
      instance.SetNewArray(&newArray_TDSPOutput1);
      instance.SetDelete(&delete_TDSPOutput1);
      instance.SetDeleteArray(&deleteArray_TDSPOutput1);
      instance.SetDestructor(&destruct_TDSPOutput1);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPOutput1*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPHarmonicGenerator_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPHarmonicGenerator_IsA(const void*);
   static void delete_TDSPHarmonicGenerator(void *p);
   static void deleteArray_TDSPHarmonicGenerator(void *p);
   static void destruct_TDSPHarmonicGenerator(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPHarmonicGenerator*)
   {
      TDSPHarmonicGenerator *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPHarmonicGenerator", TDSPHarmonicGenerator::Class_Version(), "TDSPHarmonicGenerator.h", 30,
                  typeid(TDSPHarmonicGenerator), DefineBehavior(ptr, ptr),
                  &::TDSPHarmonicGenerator::Dictionary, &TDSPHarmonicGenerator_IsA, 0,
                  sizeof(TDSPHarmonicGenerator) );
      instance.SetDelete(&delete_TDSPHarmonicGenerator);
      instance.SetDeleteArray(&deleteArray_TDSPHarmonicGenerator);
      instance.SetDestructor(&destruct_TDSPHarmonicGenerator);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPHarmonicGenerator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPRating_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPRating_IsA(const void*);
   static void *new_TDSPRating(void *p = 0);
   static void *newArray_TDSPRating(Long_t size);
   static void delete_TDSPRating(void *p);
   static void deleteArray_TDSPRating(void *p);
   static void destruct_TDSPRating(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPRating*)
   {
      TDSPRating *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPRating", TDSPRating::Class_Version(), "TDSPRating.h", 32,
                  typeid(TDSPRating), DefineBehavior(ptr, ptr),
                  &::TDSPRating::Dictionary, &TDSPRating_IsA, 0,
                  sizeof(TDSPRating) );
      instance.SetNew(&new_TDSPRating);
      instance.SetNewArray(&newArray_TDSPRating);
      instance.SetDelete(&delete_TDSPRating);
      instance.SetDeleteArray(&deleteArray_TDSPRating);
      instance.SetDestructor(&destruct_TDSPRating);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPRating*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPFilter_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPFilter_IsA(const void*);
   static void *new_TDSPFilter(void *p = 0);
   static void *newArray_TDSPFilter(Long_t size);
   static void delete_TDSPFilter(void *p);
   static void deleteArray_TDSPFilter(void *p);
   static void destruct_TDSPFilter(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPFilter*)
   {
      TDSPFilter *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPFilter", TDSPFilter::Class_Version(), "TDSPFilter.h", 28,
                  typeid(TDSPFilter), DefineBehavior(ptr, ptr),
                  &::TDSPFilter::Dictionary, &TDSPFilter_IsA, 0,
                  sizeof(TDSPFilter) );
      instance.SetNew(&new_TDSPFilter);
      instance.SetNewArray(&newArray_TDSPFilter);
      instance.SetDelete(&delete_TDSPFilter);
      instance.SetDeleteArray(&deleteArray_TDSPFilter);
      instance.SetDestructor(&destruct_TDSPFilter);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPFilter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPFifoFilter_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPFifoFilter_IsA(const void*);
   static void *new_TDSPFifoFilter(void *p = 0);
   static void *newArray_TDSPFifoFilter(Long_t size);
   static void delete_TDSPFifoFilter(void *p);
   static void deleteArray_TDSPFifoFilter(void *p);
   static void destruct_TDSPFifoFilter(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPFifoFilter*)
   {
      TDSPFifoFilter *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPFifoFilter", TDSPFifoFilter::Class_Version(), "TDSPFifoFilter.h", 29,
                  typeid(TDSPFifoFilter), DefineBehavior(ptr, ptr),
                  &::TDSPFifoFilter::Dictionary, &TDSPFifoFilter_IsA, 0,
                  sizeof(TDSPFifoFilter) );
      instance.SetNew(&new_TDSPFifoFilter);
      instance.SetNewArray(&newArray_TDSPFifoFilter);
      instance.SetDelete(&delete_TDSPFifoFilter);
      instance.SetDeleteArray(&deleteArray_TDSPFifoFilter);
      instance.SetDestructor(&destruct_TDSPFifoFilter);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPFifoFilter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPSymbolGenerator_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPSymbolGenerator_IsA(const void*);
   static void delete_TDSPSymbolGenerator(void *p);
   static void deleteArray_TDSPSymbolGenerator(void *p);
   static void destruct_TDSPSymbolGenerator(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPSymbolGenerator*)
   {
      TDSPSymbolGenerator *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPSymbolGenerator", TDSPSymbolGenerator::Class_Version(), "TDSPSymbolGenerator.h", 40,
                  typeid(TDSPSymbolGenerator), DefineBehavior(ptr, ptr),
                  &::TDSPSymbolGenerator::Dictionary, &TDSPSymbolGenerator_IsA, 0,
                  sizeof(TDSPSymbolGenerator) );
      instance.SetDelete(&delete_TDSPSymbolGenerator);
      instance.SetDeleteArray(&deleteArray_TDSPSymbolGenerator);
      instance.SetDestructor(&destruct_TDSPSymbolGenerator);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPSymbolGenerator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPStochasticProcess_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPStochasticProcess_IsA(const void*);
   static void delete_TDSPStochasticProcess(void *p);
   static void deleteArray_TDSPStochasticProcess(void *p);
   static void destruct_TDSPStochasticProcess(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPStochasticProcess*)
   {
      TDSPStochasticProcess *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPStochasticProcess", TDSPStochasticProcess::Class_Version(), "TDSPStatistics.h", 51,
                  typeid(TDSPStochasticProcess), DefineBehavior(ptr, ptr),
                  &::TDSPStochasticProcess::Dictionary, &TDSPStochasticProcess_IsA, 0,
                  sizeof(TDSPStochasticProcess) );
      instance.SetDelete(&delete_TDSPStochasticProcess);
      instance.SetDeleteArray(&deleteArray_TDSPStochasticProcess);
      instance.SetDestructor(&destruct_TDSPStochasticProcess);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPStochasticProcess*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPStochasticScalar_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPStochasticScalar_IsA(const void*);
   static void *new_TDSPStochasticScalar(void *p = 0);
   static void *newArray_TDSPStochasticScalar(Long_t size);
   static void delete_TDSPStochasticScalar(void *p);
   static void deleteArray_TDSPStochasticScalar(void *p);
   static void destruct_TDSPStochasticScalar(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPStochasticScalar*)
   {
      TDSPStochasticScalar *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPStochasticScalar", TDSPStochasticScalar::Class_Version(), "TDSPStatistics.h", 100,
                  typeid(TDSPStochasticScalar), DefineBehavior(ptr, ptr),
                  &::TDSPStochasticScalar::Dictionary, &TDSPStochasticScalar_IsA, 0,
                  sizeof(TDSPStochasticScalar) );
      instance.SetNew(&new_TDSPStochasticScalar);
      instance.SetNewArray(&newArray_TDSPStochasticScalar);
      instance.SetDelete(&delete_TDSPStochasticScalar);
      instance.SetDeleteArray(&deleteArray_TDSPStochasticScalar);
      instance.SetDestructor(&destruct_TDSPStochasticScalar);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPStochasticScalar*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPStatistics_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPStatistics_IsA(const void*);
   static void *new_TDSPStatistics(void *p = 0);
   static void *newArray_TDSPStatistics(Long_t size);
   static void delete_TDSPStatistics(void *p);
   static void deleteArray_TDSPStatistics(void *p);
   static void destruct_TDSPStatistics(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPStatistics*)
   {
      TDSPStatistics *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPStatistics", TDSPStatistics::Class_Version(), "TDSPStatistics.h", 129,
                  typeid(TDSPStatistics), DefineBehavior(ptr, ptr),
                  &::TDSPStatistics::Dictionary, &TDSPStatistics_IsA, 0,
                  sizeof(TDSPStatistics) );
      instance.SetNew(&new_TDSPStatistics);
      instance.SetNewArray(&newArray_TDSPStatistics);
      instance.SetDelete(&delete_TDSPStatistics);
      instance.SetDeleteArray(&deleteArray_TDSPStatistics);
      instance.SetDestructor(&destruct_TDSPStatistics);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPStatistics*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPBlockFifo_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPBlockFifo_IsA(const void*);
   static void *new_TDSPBlockFifo(void *p = 0);
   static void *newArray_TDSPBlockFifo(Long_t size);
   static void delete_TDSPBlockFifo(void *p);
   static void deleteArray_TDSPBlockFifo(void *p);
   static void destruct_TDSPBlockFifo(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPBlockFifo*)
   {
      TDSPBlockFifo *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPBlockFifo", TDSPBlockFifo::Class_Version(), "TDSPBlockFifo.h", 32,
                  typeid(TDSPBlockFifo), DefineBehavior(ptr, ptr),
                  &::TDSPBlockFifo::Dictionary, &TDSPBlockFifo_IsA, 0,
                  sizeof(TDSPBlockFifo) );
      instance.SetNew(&new_TDSPBlockFifo);
      instance.SetNewArray(&newArray_TDSPBlockFifo);
      instance.SetDelete(&delete_TDSPBlockFifo);
      instance.SetDeleteArray(&deleteArray_TDSPBlockFifo);
      instance.SetDestructor(&destruct_TDSPBlockFifo);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPBlockFifo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPBlockFifoFilter_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPBlockFifoFilter_IsA(const void*);
   static void *new_TDSPBlockFifoFilter(void *p = 0);
   static void *newArray_TDSPBlockFifoFilter(Long_t size);
   static void delete_TDSPBlockFifoFilter(void *p);
   static void deleteArray_TDSPBlockFifoFilter(void *p);
   static void destruct_TDSPBlockFifoFilter(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPBlockFifoFilter*)
   {
      TDSPBlockFifoFilter *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPBlockFifoFilter", TDSPBlockFifoFilter::Class_Version(), "TDSPBlockFifoFilter.h", 29,
                  typeid(TDSPBlockFifoFilter), DefineBehavior(ptr, ptr),
                  &::TDSPBlockFifoFilter::Dictionary, &TDSPBlockFifoFilter_IsA, 0,
                  sizeof(TDSPBlockFifoFilter) );
      instance.SetNew(&new_TDSPBlockFifoFilter);
      instance.SetNewArray(&newArray_TDSPBlockFifoFilter);
      instance.SetDelete(&delete_TDSPBlockFifoFilter);
      instance.SetDeleteArray(&deleteArray_TDSPBlockFifoFilter);
      instance.SetDestructor(&destruct_TDSPBlockFifoFilter);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPBlockFifoFilter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPStochasticSignal_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPStochasticSignal_IsA(const void*);
   static void *new_TDSPStochasticSignal(void *p = 0);
   static void *newArray_TDSPStochasticSignal(Long_t size);
   static void delete_TDSPStochasticSignal(void *p);
   static void deleteArray_TDSPStochasticSignal(void *p);
   static void destruct_TDSPStochasticSignal(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPStochasticSignal*)
   {
      TDSPStochasticSignal *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPStochasticSignal", TDSPStochasticSignal::Class_Version(), "TDSPStochasticSignal.h", 31,
                  typeid(TDSPStochasticSignal), DefineBehavior(ptr, ptr),
                  &::TDSPStochasticSignal::Dictionary, &TDSPStochasticSignal_IsA, 0,
                  sizeof(TDSPStochasticSignal) );
      instance.SetNew(&new_TDSPStochasticSignal);
      instance.SetNewArray(&newArray_TDSPStochasticSignal);
      instance.SetDelete(&delete_TDSPStochasticSignal);
      instance.SetDeleteArray(&deleteArray_TDSPStochasticSignal);
      instance.SetDestructor(&destruct_TDSPStochasticSignal);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPStochasticSignal*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPfft_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPfft_IsA(const void*);
   static void *new_TDSPfft(void *p = 0);
   static void *newArray_TDSPfft(Long_t size);
   static void delete_TDSPfft(void *p);
   static void deleteArray_TDSPfft(void *p);
   static void destruct_TDSPfft(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPfft*)
   {
      TDSPfft *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPfft", TDSPfft::Class_Version(), "TDSPfft.h", 33,
                  typeid(TDSPfft), DefineBehavior(ptr, ptr),
                  &::TDSPfft::Dictionary, &TDSPfft_IsA, 0,
                  sizeof(TDSPfft) );
      instance.SetNew(&new_TDSPfft);
      instance.SetNewArray(&newArray_TDSPfft);
      instance.SetDelete(&delete_TDSPfft);
      instance.SetDeleteArray(&deleteArray_TDSPfft);
      instance.SetDestructor(&destruct_TDSPfft);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPfft*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPGroup_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPGroup_IsA(const void*);
   static void *new_TDSPGroup(void *p = 0);
   static void *newArray_TDSPGroup(Long_t size);
   static void delete_TDSPGroup(void *p);
   static void deleteArray_TDSPGroup(void *p);
   static void destruct_TDSPGroup(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPGroup*)
   {
      TDSPGroup *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPGroup", TDSPGroup::Class_Version(), "TDSPGroup.h", 29,
                  typeid(TDSPGroup), DefineBehavior(ptr, ptr),
                  &::TDSPGroup::Dictionary, &TDSPGroup_IsA, 0,
                  sizeof(TDSPGroup) );
      instance.SetNew(&new_TDSPGroup);
      instance.SetNewArray(&newArray_TDSPGroup);
      instance.SetDelete(&delete_TDSPGroup);
      instance.SetDeleteArray(&deleteArray_TDSPGroup);
      instance.SetDestructor(&destruct_TDSPGroup);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPGroup*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPConvolution_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPConvolution_IsA(const void*);
   static void *new_TDSPConvolution(void *p = 0);
   static void *newArray_TDSPConvolution(Long_t size);
   static void delete_TDSPConvolution(void *p);
   static void deleteArray_TDSPConvolution(void *p);
   static void destruct_TDSPConvolution(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPConvolution*)
   {
      TDSPConvolution *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPConvolution", TDSPConvolution::Class_Version(), "TDSPConvolution.h", 30,
                  typeid(TDSPConvolution), DefineBehavior(ptr, ptr),
                  &::TDSPConvolution::Dictionary, &TDSPConvolution_IsA, 0,
                  sizeof(TDSPConvolution) );
      instance.SetNew(&new_TDSPConvolution);
      instance.SetNewArray(&newArray_TDSPConvolution);
      instance.SetDelete(&delete_TDSPConvolution);
      instance.SetDeleteArray(&deleteArray_TDSPConvolution);
      instance.SetDestructor(&destruct_TDSPConvolution);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPConvolution*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPChop_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPChop_IsA(const void*);
   static void delete_TDSPChop(void *p);
   static void deleteArray_TDSPChop(void *p);
   static void destruct_TDSPChop(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPChop*)
   {
      TDSPChop *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPChop", TDSPChop::Class_Version(), "TDSPChop.h", 28,
                  typeid(TDSPChop), DefineBehavior(ptr, ptr),
                  &::TDSPChop::Dictionary, &TDSPChop_IsA, 0,
                  sizeof(TDSPChop) );
      instance.SetDelete(&delete_TDSPChop);
      instance.SetDeleteArray(&deleteArray_TDSPChop);
      instance.SetDestructor(&destruct_TDSPChop);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPChop*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPBlockfft_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPBlockfft_IsA(const void*);
   static void *new_TDSPBlockfft(void *p = 0);
   static void *newArray_TDSPBlockfft(Long_t size);
   static void delete_TDSPBlockfft(void *p);
   static void deleteArray_TDSPBlockfft(void *p);
   static void destruct_TDSPBlockfft(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPBlockfft*)
   {
      TDSPBlockfft *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPBlockfft", TDSPBlockfft::Class_Version(), "TDSPBlockfft.h", 36,
                  typeid(TDSPBlockfft), DefineBehavior(ptr, ptr),
                  &::TDSPBlockfft::Dictionary, &TDSPBlockfft_IsA, 0,
                  sizeof(TDSPBlockfft) );
      instance.SetNew(&new_TDSPBlockfft);
      instance.SetNewArray(&newArray_TDSPBlockfft);
      instance.SetDelete(&delete_TDSPBlockfft);
      instance.SetDeleteArray(&deleteArray_TDSPBlockfft);
      instance.SetDestructor(&destruct_TDSPBlockfft);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPBlockfft*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPBlockMap_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPBlockMap_IsA(const void*);
   static void *new_TDSPBlockMap(void *p = 0);
   static void *newArray_TDSPBlockMap(Long_t size);
   static void delete_TDSPBlockMap(void *p);
   static void deleteArray_TDSPBlockMap(void *p);
   static void destruct_TDSPBlockMap(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPBlockMap*)
   {
      TDSPBlockMap *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPBlockMap", TDSPBlockMap::Class_Version(), "TDSPBlockMap.h", 32,
                  typeid(TDSPBlockMap), DefineBehavior(ptr, ptr),
                  &::TDSPBlockMap::Dictionary, &TDSPBlockMap_IsA, 0,
                  sizeof(TDSPBlockMap) );
      instance.SetNew(&new_TDSPBlockMap);
      instance.SetNewArray(&newArray_TDSPBlockMap);
      instance.SetDelete(&delete_TDSPBlockMap);
      instance.SetDeleteArray(&deleteArray_TDSPBlockMap);
      instance.SetDestructor(&destruct_TDSPBlockMap);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPBlockMap*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPSignalDump_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPSignalDump_IsA(const void*);
   static void *new_TDSPSignalDump(void *p = 0);
   static void *newArray_TDSPSignalDump(Long_t size);
   static void delete_TDSPSignalDump(void *p);
   static void deleteArray_TDSPSignalDump(void *p);
   static void destruct_TDSPSignalDump(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPSignalDump*)
   {
      TDSPSignalDump *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPSignalDump", TDSPSignalDump::Class_Version(), "TDSPSignalDump.h", 35,
                  typeid(TDSPSignalDump), DefineBehavior(ptr, ptr),
                  &::TDSPSignalDump::Dictionary, &TDSPSignalDump_IsA, 0,
                  sizeof(TDSPSignalDump) );
      instance.SetNew(&new_TDSPSignalDump);
      instance.SetNewArray(&newArray_TDSPSignalDump);
      instance.SetDelete(&delete_TDSPSignalDump);
      instance.SetDeleteArray(&deleteArray_TDSPSignalDump);
      instance.SetDestructor(&destruct_TDSPSignalDump);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPSignalDump*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPReadSignal_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPReadSignal_IsA(const void*);
   static void delete_TDSPReadSignal(void *p);
   static void deleteArray_TDSPReadSignal(void *p);
   static void destruct_TDSPReadSignal(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPReadSignal*)
   {
      TDSPReadSignal *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPReadSignal", TDSPReadSignal::Class_Version(), "TDSPReadSignal.h", 30,
                  typeid(TDSPReadSignal), DefineBehavior(ptr, ptr),
                  &::TDSPReadSignal::Dictionary, &TDSPReadSignal_IsA, 0,
                  sizeof(TDSPReadSignal) );
      instance.SetDelete(&delete_TDSPReadSignal);
      instance.SetDeleteArray(&deleteArray_TDSPReadSignal);
      instance.SetDestructor(&destruct_TDSPReadSignal);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPReadSignal*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPPsk_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPPsk_IsA(const void*);
   static void delete_TDSPPsk(void *p);
   static void deleteArray_TDSPPsk(void *p);
   static void destruct_TDSPPsk(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPPsk*)
   {
      TDSPPsk *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPPsk", TDSPPsk::Class_Version(), "TDSPPsk.h", 29,
                  typeid(TDSPPsk), DefineBehavior(ptr, ptr),
                  &::TDSPPsk::Dictionary, &TDSPPsk_IsA, 0,
                  sizeof(TDSPPsk) );
      instance.SetDelete(&delete_TDSPPsk);
      instance.SetDeleteArray(&deleteArray_TDSPPsk);
      instance.SetDestructor(&destruct_TDSPPsk);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPPsk*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPSignalStudy_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPSignalStudy_IsA(const void*);
   static void *new_TDSPSignalStudy(void *p = 0);
   static void *newArray_TDSPSignalStudy(Long_t size);
   static void delete_TDSPSignalStudy(void *p);
   static void deleteArray_TDSPSignalStudy(void *p);
   static void destruct_TDSPSignalStudy(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPSignalStudy*)
   {
      TDSPSignalStudy *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPSignalStudy", TDSPSignalStudy::Class_Version(), "TDSPSignalStudy.h", 29,
                  typeid(TDSPSignalStudy), DefineBehavior(ptr, ptr),
                  &::TDSPSignalStudy::Dictionary, &TDSPSignalStudy_IsA, 0,
                  sizeof(TDSPSignalStudy) );
      instance.SetNew(&new_TDSPSignalStudy);
      instance.SetNewArray(&newArray_TDSPSignalStudy);
      instance.SetDelete(&delete_TDSPSignalStudy);
      instance.SetDeleteArray(&deleteArray_TDSPSignalStudy);
      instance.SetDestructor(&destruct_TDSPSignalStudy);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPSignalStudy*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPQam_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPQam_IsA(const void*);
   static void delete_TDSPQam(void *p);
   static void deleteArray_TDSPQam(void *p);
   static void destruct_TDSPQam(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPQam*)
   {
      TDSPQam *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPQam", TDSPQam::Class_Version(), "TDSPQam.h", 29,
                  typeid(TDSPQam), DefineBehavior(ptr, ptr),
                  &::TDSPQam::Dictionary, &TDSPQam_IsA, 0,
                  sizeof(TDSPQam) );
      instance.SetDelete(&delete_TDSPQam);
      instance.SetDeleteArray(&deleteArray_TDSPQam);
      instance.SetDestructor(&destruct_TDSPQam);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPQam*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPPam_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPPam_IsA(const void*);
   static void delete_TDSPPam(void *p);
   static void deleteArray_TDSPPam(void *p);
   static void destruct_TDSPPam(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPPam*)
   {
      TDSPPam *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPPam", TDSPPam::Class_Version(), "TDSPPam.h", 29,
                  typeid(TDSPPam), DefineBehavior(ptr, ptr),
                  &::TDSPPam::Dictionary, &TDSPPam_IsA, 0,
                  sizeof(TDSPPam) );
      instance.SetDelete(&delete_TDSPPam);
      instance.SetDeleteArray(&deleteArray_TDSPPam);
      instance.SetDestructor(&destruct_TDSPPam);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPPam*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPOfdm_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPOfdm_IsA(const void*);
   static void *new_TDSPOfdm(void *p = 0);
   static void *newArray_TDSPOfdm(Long_t size);
   static void delete_TDSPOfdm(void *p);
   static void deleteArray_TDSPOfdm(void *p);
   static void destruct_TDSPOfdm(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPOfdm*)
   {
      TDSPOfdm *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPOfdm", TDSPOfdm::Class_Version(), "TDSPOfdm.h", 28,
                  typeid(TDSPOfdm), DefineBehavior(ptr, ptr),
                  &::TDSPOfdm::Dictionary, &TDSPOfdm_IsA, 0,
                  sizeof(TDSPOfdm) );
      instance.SetNew(&new_TDSPOfdm);
      instance.SetNewArray(&newArray_TDSPOfdm);
      instance.SetDelete(&delete_TDSPOfdm);
      instance.SetDeleteArray(&deleteArray_TDSPOfdm);
      instance.SetDestructor(&destruct_TDSPOfdm);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPOfdm*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPStft_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPStft_IsA(const void*);
   static void delete_TDSPStft(void *p);
   static void deleteArray_TDSPStft(void *p);
   static void destruct_TDSPStft(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPStft*)
   {
      TDSPStft *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPStft", TDSPStft::Class_Version(), "TDSPStft.h", 35,
                  typeid(TDSPStft), DefineBehavior(ptr, ptr),
                  &::TDSPStft::Dictionary, &TDSPStft_IsA, 0,
                  sizeof(TDSPStft) );
      instance.SetDelete(&delete_TDSPStft);
      instance.SetDeleteArray(&deleteArray_TDSPStft);
      instance.SetDestructor(&destruct_TDSPStft);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPStft*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPNofdm_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPNofdm_IsA(const void*);
   static void *new_TDSPNofdm(void *p = 0);
   static void *newArray_TDSPNofdm(Long_t size);
   static void delete_TDSPNofdm(void *p);
   static void deleteArray_TDSPNofdm(void *p);
   static void destruct_TDSPNofdm(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPNofdm*)
   {
      TDSPNofdm *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPNofdm", TDSPNofdm::Class_Version(), "TDSPNofdm.h", 31,
                  typeid(TDSPNofdm), DefineBehavior(ptr, ptr),
                  &::TDSPNofdm::Dictionary, &TDSPNofdm_IsA, 0,
                  sizeof(TDSPNofdm) );
      instance.SetNew(&new_TDSPNofdm);
      instance.SetNewArray(&newArray_TDSPNofdm);
      instance.SetDelete(&delete_TDSPNofdm);
      instance.SetDeleteArray(&deleteArray_TDSPNofdm);
      instance.SetDestructor(&destruct_TDSPNofdm);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPNofdm*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPInt_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPInt_IsA(const void*);
   static void delete_TDSPInt(void *p);
   static void deleteArray_TDSPInt(void *p);
   static void destruct_TDSPInt(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPInt*)
   {
      TDSPInt *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPInt", TDSPInt::Class_Version(), "TDSPInt.h", 29,
                  typeid(TDSPInt), DefineBehavior(ptr, ptr),
                  &::TDSPInt::Dictionary, &TDSPInt_IsA, 0,
                  sizeof(TDSPInt) );
      instance.SetDelete(&delete_TDSPInt);
      instance.SetDeleteArray(&deleteArray_TDSPInt);
      instance.SetDestructor(&destruct_TDSPInt);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPInt*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPFilterBank_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPFilterBank_IsA(const void*);
   static void *new_TDSPFilterBank(void *p = 0);
   static void *newArray_TDSPFilterBank(Long_t size);
   static void delete_TDSPFilterBank(void *p);
   static void deleteArray_TDSPFilterBank(void *p);
   static void destruct_TDSPFilterBank(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPFilterBank*)
   {
      TDSPFilterBank *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPFilterBank", TDSPFilterBank::Class_Version(), "TDSPFilterBank.h", 34,
                  typeid(TDSPFilterBank), DefineBehavior(ptr, ptr),
                  &::TDSPFilterBank::Dictionary, &TDSPFilterBank_IsA, 0,
                  sizeof(TDSPFilterBank) );
      instance.SetNew(&new_TDSPFilterBank);
      instance.SetNewArray(&newArray_TDSPFilterBank);
      instance.SetDelete(&delete_TDSPFilterBank);
      instance.SetDeleteArray(&deleteArray_TDSPFilterBank);
      instance.SetDestructor(&destruct_TDSPFilterBank);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPFilterBank*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPCorrelationFilter_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPCorrelationFilter_IsA(const void*);
   static void *new_TDSPCorrelationFilter(void *p = 0);
   static void *newArray_TDSPCorrelationFilter(Long_t size);
   static void delete_TDSPCorrelationFilter(void *p);
   static void deleteArray_TDSPCorrelationFilter(void *p);
   static void destruct_TDSPCorrelationFilter(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPCorrelationFilter*)
   {
      TDSPCorrelationFilter *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPCorrelationFilter", TDSPCorrelationFilter::Class_Version(), "TDSPCorrelationFilter.h", 38,
                  typeid(TDSPCorrelationFilter), DefineBehavior(ptr, ptr),
                  &::TDSPCorrelationFilter::Dictionary, &TDSPCorrelationFilter_IsA, 0,
                  sizeof(TDSPCorrelationFilter) );
      instance.SetNew(&new_TDSPCorrelationFilter);
      instance.SetNewArray(&newArray_TDSPCorrelationFilter);
      instance.SetDelete(&delete_TDSPCorrelationFilter);
      instance.SetDeleteArray(&deleteArray_TDSPCorrelationFilter);
      instance.SetDestructor(&destruct_TDSPCorrelationFilter);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPCorrelationFilter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPMath_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPMath_IsA(const void*);
   static void *new_TDSPMath(void *p = 0);
   static void *newArray_TDSPMath(Long_t size);
   static void delete_TDSPMath(void *p);
   static void deleteArray_TDSPMath(void *p);
   static void destruct_TDSPMath(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPMath*)
   {
      TDSPMath *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPMath", TDSPMath::Class_Version(), "TDSPMath.h", 29,
                  typeid(TDSPMath), DefineBehavior(ptr, ptr),
                  &::TDSPMath::Dictionary, &TDSPMath_IsA, 0,
                  sizeof(TDSPMath) );
      instance.SetNew(&new_TDSPMath);
      instance.SetNewArray(&newArray_TDSPMath);
      instance.SetDelete(&delete_TDSPMath);
      instance.SetDeleteArray(&deleteArray_TDSPMath);
      instance.SetDestructor(&destruct_TDSPMath);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPMath*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPJakes_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPJakes_IsA(const void*);
   static void *new_TDSPJakes(void *p = 0);
   static void *newArray_TDSPJakes(Long_t size);
   static void delete_TDSPJakes(void *p);
   static void deleteArray_TDSPJakes(void *p);
   static void destruct_TDSPJakes(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPJakes*)
   {
      TDSPJakes *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPJakes", TDSPJakes::Class_Version(), "TDSPJakes.h", 32,
                  typeid(TDSPJakes), DefineBehavior(ptr, ptr),
                  &::TDSPJakes::Dictionary, &TDSPJakes_IsA, 0,
                  sizeof(TDSPJakes) );
      instance.SetNew(&new_TDSPJakes);
      instance.SetNewArray(&newArray_TDSPJakes);
      instance.SetDelete(&delete_TDSPJakes);
      instance.SetDeleteArray(&deleteArray_TDSPJakes);
      instance.SetDestructor(&destruct_TDSPJakes);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPJakes*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPFunction_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPFunction_IsA(const void*);
   static void *new_TDSPFunction(void *p = 0);
   static void *newArray_TDSPFunction(Long_t size);
   static void delete_TDSPFunction(void *p);
   static void deleteArray_TDSPFunction(void *p);
   static void destruct_TDSPFunction(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPFunction*)
   {
      TDSPFunction *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPFunction", TDSPFunction::Class_Version(), "TDSPFunction.h", 28,
                  typeid(TDSPFunction), DefineBehavior(ptr, ptr),
                  &::TDSPFunction::Dictionary, &TDSPFunction_IsA, 0,
                  sizeof(TDSPFunction) );
      instance.SetNew(&new_TDSPFunction);
      instance.SetNewArray(&newArray_TDSPFunction);
      instance.SetDelete(&delete_TDSPFunction);
      instance.SetDeleteArray(&deleteArray_TDSPFunction);
      instance.SetDestructor(&destruct_TDSPFunction);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPFunction*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPClip_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPClip_IsA(const void*);
   static void *new_TDSPClip(void *p = 0);
   static void *newArray_TDSPClip(Long_t size);
   static void delete_TDSPClip(void *p);
   static void deleteArray_TDSPClip(void *p);
   static void destruct_TDSPClip(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPClip*)
   {
      TDSPClip *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPClip", TDSPClip::Class_Version(), "TDSPClip.h", 29,
                  typeid(TDSPClip), DefineBehavior(ptr, ptr),
                  &::TDSPClip::Dictionary, &TDSPClip_IsA, 0,
                  sizeof(TDSPClip) );
      instance.SetNew(&new_TDSPClip);
      instance.SetNewArray(&newArray_TDSPClip);
      instance.SetDelete(&delete_TDSPClip);
      instance.SetDeleteArray(&deleteArray_TDSPClip);
      instance.SetDestructor(&destruct_TDSPClip);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPClip*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPBlockSolve_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPBlockSolve_IsA(const void*);
   static void *new_TDSPBlockSolve(void *p = 0);
   static void *newArray_TDSPBlockSolve(Long_t size);
   static void delete_TDSPBlockSolve(void *p);
   static void deleteArray_TDSPBlockSolve(void *p);
   static void destruct_TDSPBlockSolve(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPBlockSolve*)
   {
      TDSPBlockSolve *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPBlockSolve", TDSPBlockSolve::Class_Version(), "TDSPBlockSolve.h", 30,
                  typeid(TDSPBlockSolve), DefineBehavior(ptr, ptr),
                  &::TDSPBlockSolve::Dictionary, &TDSPBlockSolve_IsA, 0,
                  sizeof(TDSPBlockSolve) );
      instance.SetNew(&new_TDSPBlockSolve);
      instance.SetNewArray(&newArray_TDSPBlockSolve);
      instance.SetDelete(&delete_TDSPBlockSolve);
      instance.SetDeleteArray(&deleteArray_TDSPBlockSolve);
      instance.SetDestructor(&destruct_TDSPBlockSolve);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPBlockSolve*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPEstimator_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPEstimator_IsA(const void*);
   static void delete_TDSPEstimator(void *p);
   static void deleteArray_TDSPEstimator(void *p);
   static void destruct_TDSPEstimator(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPEstimator*)
   {
      TDSPEstimator *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPEstimator", TDSPEstimator::Class_Version(), "TDSPEstimator.h", 30,
                  typeid(TDSPEstimator), DefineBehavior(ptr, ptr),
                  &::TDSPEstimator::Dictionary, &TDSPEstimator_IsA, 0,
                  sizeof(TDSPEstimator) );
      instance.SetDelete(&delete_TDSPEstimator);
      instance.SetDeleteArray(&deleteArray_TDSPEstimator);
      instance.SetDestructor(&destruct_TDSPEstimator);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPEstimator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPLmmse_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPLmmse_IsA(const void*);
   static void *new_TDSPLmmse(void *p = 0);
   static void *newArray_TDSPLmmse(Long_t size);
   static void delete_TDSPLmmse(void *p);
   static void deleteArray_TDSPLmmse(void *p);
   static void destruct_TDSPLmmse(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPLmmse*)
   {
      TDSPLmmse *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPLmmse", TDSPLmmse::Class_Version(), "TDSPLmmse.h", 34,
                  typeid(TDSPLmmse), DefineBehavior(ptr, ptr),
                  &::TDSPLmmse::Dictionary, &TDSPLmmse_IsA, 0,
                  sizeof(TDSPLmmse) );
      instance.SetNew(&new_TDSPLmmse);
      instance.SetNewArray(&newArray_TDSPLmmse);
      instance.SetDelete(&delete_TDSPLmmse);
      instance.SetDeleteArray(&deleteArray_TDSPLmmse);
      instance.SetDestructor(&destruct_TDSPLmmse);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPLmmse*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPFastBpsk_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPFastBpsk_IsA(const void*);
   static void *new_TDSPFastBpsk(void *p = 0);
   static void *newArray_TDSPFastBpsk(Long_t size);
   static void delete_TDSPFastBpsk(void *p);
   static void deleteArray_TDSPFastBpsk(void *p);
   static void destruct_TDSPFastBpsk(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPFastBpsk*)
   {
      TDSPFastBpsk *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPFastBpsk", TDSPFastBpsk::Class_Version(), "TDSPFastBpsk.h", 27,
                  typeid(TDSPFastBpsk), DefineBehavior(ptr, ptr),
                  &::TDSPFastBpsk::Dictionary, &TDSPFastBpsk_IsA, 0,
                  sizeof(TDSPFastBpsk) );
      instance.SetNew(&new_TDSPFastBpsk);
      instance.SetNewArray(&newArray_TDSPFastBpsk);
      instance.SetDelete(&delete_TDSPFastBpsk);
      instance.SetDeleteArray(&deleteArray_TDSPFastBpsk);
      instance.SetDestructor(&destruct_TDSPFastBpsk);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPFastBpsk*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPFastQpsk_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPFastQpsk_IsA(const void*);
   static void *new_TDSPFastQpsk(void *p = 0);
   static void *newArray_TDSPFastQpsk(Long_t size);
   static void delete_TDSPFastQpsk(void *p);
   static void deleteArray_TDSPFastQpsk(void *p);
   static void destruct_TDSPFastQpsk(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPFastQpsk*)
   {
      TDSPFastQpsk *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPFastQpsk", TDSPFastQpsk::Class_Version(), "TDSPFastQpsk.h", 27,
                  typeid(TDSPFastQpsk), DefineBehavior(ptr, ptr),
                  &::TDSPFastQpsk::Dictionary, &TDSPFastQpsk_IsA, 0,
                  sizeof(TDSPFastQpsk) );
      instance.SetNew(&new_TDSPFastQpsk);
      instance.SetNewArray(&newArray_TDSPFastQpsk);
      instance.SetDelete(&delete_TDSPFastQpsk);
      instance.SetDeleteArray(&deleteArray_TDSPFastQpsk);
      instance.SetDestructor(&destruct_TDSPFastQpsk);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPFastQpsk*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPModulation_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPModulation_IsA(const void*);
   static void *new_TDSPModulation(void *p = 0);
   static void *newArray_TDSPModulation(Long_t size);
   static void delete_TDSPModulation(void *p);
   static void deleteArray_TDSPModulation(void *p);
   static void destruct_TDSPModulation(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPModulation*)
   {
      TDSPModulation *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPModulation", TDSPModulation::Class_Version(), "TDSPModulation.h", 28,
                  typeid(TDSPModulation), DefineBehavior(ptr, ptr),
                  &::TDSPModulation::Dictionary, &TDSPModulation_IsA, 0,
                  sizeof(TDSPModulation) );
      instance.SetNew(&new_TDSPModulation);
      instance.SetNewArray(&newArray_TDSPModulation);
      instance.SetDelete(&delete_TDSPModulation);
      instance.SetDeleteArray(&deleteArray_TDSPModulation);
      instance.SetDestructor(&destruct_TDSPModulation);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPModulation*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPWienerProcess_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPWienerProcess_IsA(const void*);
   static void *new_TDSPWienerProcess(void *p = 0);
   static void *newArray_TDSPWienerProcess(Long_t size);
   static void delete_TDSPWienerProcess(void *p);
   static void deleteArray_TDSPWienerProcess(void *p);
   static void destruct_TDSPWienerProcess(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPWienerProcess*)
   {
      TDSPWienerProcess *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPWienerProcess", TDSPWienerProcess::Class_Version(), "TDSPWienerProcess.h", 27,
                  typeid(TDSPWienerProcess), DefineBehavior(ptr, ptr),
                  &::TDSPWienerProcess::Dictionary, &TDSPWienerProcess_IsA, 0,
                  sizeof(TDSPWienerProcess) );
      instance.SetNew(&new_TDSPWienerProcess);
      instance.SetNewArray(&newArray_TDSPWienerProcess);
      instance.SetDelete(&delete_TDSPWienerProcess);
      instance.SetDeleteArray(&deleteArray_TDSPWienerProcess);
      instance.SetDestructor(&destruct_TDSPWienerProcess);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPWienerProcess*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPMonitor_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPMonitor_IsA(const void*);
   static void *new_TDSPMonitor(void *p = 0);
   static void *newArray_TDSPMonitor(Long_t size);
   static void delete_TDSPMonitor(void *p);
   static void deleteArray_TDSPMonitor(void *p);
   static void destruct_TDSPMonitor(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPMonitor*)
   {
      TDSPMonitor *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPMonitor", TDSPMonitor::Class_Version(), "TDSPMonitor.h", 29,
                  typeid(TDSPMonitor), DefineBehavior(ptr, ptr),
                  &::TDSPMonitor::Dictionary, &TDSPMonitor_IsA, 0,
                  sizeof(TDSPMonitor) );
      instance.SetNew(&new_TDSPMonitor);
      instance.SetNewArray(&newArray_TDSPMonitor);
      instance.SetDelete(&delete_TDSPMonitor);
      instance.SetDeleteArray(&deleteArray_TDSPMonitor);
      instance.SetDestructor(&destruct_TDSPMonitor);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPMonitor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPSource_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPSource_IsA(const void*);
   static void *new_TDSPSource(void *p = 0);
   static void *newArray_TDSPSource(Long_t size);
   static void delete_TDSPSource(void *p);
   static void deleteArray_TDSPSource(void *p);
   static void destruct_TDSPSource(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPSource*)
   {
      TDSPSource *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPSource", TDSPSource::Class_Version(), "TDSPSource.h", 29,
                  typeid(TDSPSource), DefineBehavior(ptr, ptr),
                  &::TDSPSource::Dictionary, &TDSPSource_IsA, 0,
                  sizeof(TDSPSource) );
      instance.SetNew(&new_TDSPSource);
      instance.SetNewArray(&newArray_TDSPSource);
      instance.SetDelete(&delete_TDSPSource);
      instance.SetDeleteArray(&deleteArray_TDSPSource);
      instance.SetDestructor(&destruct_TDSPSource);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPSource*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPFilterMap_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPFilterMap_IsA(const void*);
   static void *new_TDSPFilterMap(void *p = 0);
   static void *newArray_TDSPFilterMap(Long_t size);
   static void delete_TDSPFilterMap(void *p);
   static void deleteArray_TDSPFilterMap(void *p);
   static void destruct_TDSPFilterMap(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPFilterMap*)
   {
      TDSPFilterMap *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPFilterMap", TDSPFilterMap::Class_Version(), "TDSPFilterMap.h", 34,
                  typeid(TDSPFilterMap), DefineBehavior(ptr, ptr),
                  &::TDSPFilterMap::Dictionary, &TDSPFilterMap_IsA, 0,
                  sizeof(TDSPFilterMap) );
      instance.SetNew(&new_TDSPFilterMap);
      instance.SetNewArray(&newArray_TDSPFilterMap);
      instance.SetDelete(&delete_TDSPFilterMap);
      instance.SetDeleteArray(&deleteArray_TDSPFilterMap);
      instance.SetDestructor(&destruct_TDSPFilterMap);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPFilterMap*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPFMT_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPFMT_IsA(const void*);
   static void *new_TDSPFMT(void *p = 0);
   static void *newArray_TDSPFMT(Long_t size);
   static void delete_TDSPFMT(void *p);
   static void deleteArray_TDSPFMT(void *p);
   static void destruct_TDSPFMT(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPFMT*)
   {
      TDSPFMT *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPFMT", TDSPFMT::Class_Version(), "TDSPFMT.h", 30,
                  typeid(TDSPFMT), DefineBehavior(ptr, ptr),
                  &::TDSPFMT::Dictionary, &TDSPFMT_IsA, 0,
                  sizeof(TDSPFMT) );
      instance.SetNew(&new_TDSPFMT);
      instance.SetNewArray(&newArray_TDSPFMT);
      instance.SetDelete(&delete_TDSPFMT);
      instance.SetDeleteArray(&deleteArray_TDSPFMT);
      instance.SetDestructor(&destruct_TDSPFMT);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPFMT*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMaple_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMaple_IsA(const void*);
   static void *new_TMaple(void *p = 0);
   static void *newArray_TMaple(Long_t size);
   static void delete_TMaple(void *p);
   static void deleteArray_TMaple(void *p);
   static void destruct_TMaple(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TMaple*)
   {
      TMaple *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TMaple", TMaple::Class_Version(), "TMaple.h", 27,
                  typeid(TMaple), DefineBehavior(ptr, ptr),
                  &::TMaple::Dictionary, &TMaple_IsA, 0,
                  sizeof(TMaple) );
      instance.SetNew(&new_TMaple);
      instance.SetNewArray(&newArray_TMaple);
      instance.SetDelete(&delete_TMaple);
      instance.SetDeleteArray(&deleteArray_TMaple);
      instance.SetDestructor(&destruct_TMaple);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TMaple*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

//______________________________________________________________________________
TClass *TDSPData::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPData::Class_Name()
{
   return "TDSPData";
}

//______________________________________________________________________________
const char *TDSPData::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPData::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPData::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPData::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPData*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPSignal::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPSignal::Class_Name()
{
   return "TDSPSignal";
}

//______________________________________________________________________________
const char *TDSPSignal::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPSignal*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPSignal::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPSignal*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPSignal::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPSignal*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPSignal::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPSignal*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPFifo::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPFifo::Class_Name()
{
   return "TDSPFifo";
}

//______________________________________________________________________________
const char *TDSPFifo::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPFifo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPFifo::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPFifo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPFifo::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPFifo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPFifo::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPFifo*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPOperator::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPOperator::Class_Name()
{
   return "TDSPOperator";
}

//______________________________________________________________________________
const char *TDSPOperator::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPOperator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPOperator::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPOperator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPOperator::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPOperator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPOperator::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPOperator*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPGenerator::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPGenerator::Class_Name()
{
   return "TDSPGenerator";
}

//______________________________________________________________________________
const char *TDSPGenerator::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPGenerator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPGenerator::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPGenerator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPGenerator::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPGenerator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPGenerator::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPGenerator*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPSpectrum::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPSpectrum::Class_Name()
{
   return "TDSPSpectrum";
}

//______________________________________________________________________________
const char *TDSPSpectrum::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPSpectrum*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPSpectrum::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPSpectrum*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPSpectrum::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPSpectrum*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPSpectrum::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPSpectrum*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPOutput1::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPOutput1::Class_Name()
{
   return "TDSPOutput1";
}

//______________________________________________________________________________
const char *TDSPOutput1::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPOutput1*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPOutput1::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPOutput1*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPOutput1::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPOutput1*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPOutput1::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPOutput1*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPHarmonicGenerator::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPHarmonicGenerator::Class_Name()
{
   return "TDSPHarmonicGenerator";
}

//______________________________________________________________________________
const char *TDSPHarmonicGenerator::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPHarmonicGenerator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPHarmonicGenerator::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPHarmonicGenerator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPHarmonicGenerator::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPHarmonicGenerator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPHarmonicGenerator::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPHarmonicGenerator*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPRating::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPRating::Class_Name()
{
   return "TDSPRating";
}

//______________________________________________________________________________
const char *TDSPRating::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPRating*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPRating::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPRating*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPRating::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPRating*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPRating::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPRating*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPFilter::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPFilter::Class_Name()
{
   return "TDSPFilter";
}

//______________________________________________________________________________
const char *TDSPFilter::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPFilter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPFilter::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPFilter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPFilter::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPFilter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPFilter::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPFilter*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPFifoFilter::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPFifoFilter::Class_Name()
{
   return "TDSPFifoFilter";
}

//______________________________________________________________________________
const char *TDSPFifoFilter::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPFifoFilter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPFifoFilter::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPFifoFilter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPFifoFilter::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPFifoFilter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPFifoFilter::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPFifoFilter*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPSymbolGenerator::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPSymbolGenerator::Class_Name()
{
   return "TDSPSymbolGenerator";
}

//______________________________________________________________________________
const char *TDSPSymbolGenerator::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPSymbolGenerator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPSymbolGenerator::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPSymbolGenerator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPSymbolGenerator::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPSymbolGenerator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPSymbolGenerator::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPSymbolGenerator*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPStochasticProcess::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPStochasticProcess::Class_Name()
{
   return "TDSPStochasticProcess";
}

//______________________________________________________________________________
const char *TDSPStochasticProcess::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPStochasticProcess*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPStochasticProcess::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPStochasticProcess*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPStochasticProcess::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPStochasticProcess*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPStochasticProcess::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPStochasticProcess*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPStochasticScalar::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPStochasticScalar::Class_Name()
{
   return "TDSPStochasticScalar";
}

//______________________________________________________________________________
const char *TDSPStochasticScalar::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPStochasticScalar*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPStochasticScalar::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPStochasticScalar*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPStochasticScalar::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPStochasticScalar*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPStochasticScalar::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPStochasticScalar*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPStatistics::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPStatistics::Class_Name()
{
   return "TDSPStatistics";
}

//______________________________________________________________________________
const char *TDSPStatistics::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPStatistics*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPStatistics::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPStatistics*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPStatistics::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPStatistics*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPStatistics::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPStatistics*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPBlockFifo::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPBlockFifo::Class_Name()
{
   return "TDSPBlockFifo";
}

//______________________________________________________________________________
const char *TDSPBlockFifo::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPBlockFifo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPBlockFifo::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPBlockFifo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPBlockFifo::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPBlockFifo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPBlockFifo::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPBlockFifo*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPBlockFifoFilter::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPBlockFifoFilter::Class_Name()
{
   return "TDSPBlockFifoFilter";
}

//______________________________________________________________________________
const char *TDSPBlockFifoFilter::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPBlockFifoFilter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPBlockFifoFilter::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPBlockFifoFilter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPBlockFifoFilter::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPBlockFifoFilter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPBlockFifoFilter::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPBlockFifoFilter*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPStochasticSignal::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPStochasticSignal::Class_Name()
{
   return "TDSPStochasticSignal";
}

//______________________________________________________________________________
const char *TDSPStochasticSignal::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPStochasticSignal*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPStochasticSignal::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPStochasticSignal*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPStochasticSignal::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPStochasticSignal*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPStochasticSignal::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPStochasticSignal*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPfft::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPfft::Class_Name()
{
   return "TDSPfft";
}

//______________________________________________________________________________
const char *TDSPfft::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPfft*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPfft::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPfft*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPfft::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPfft*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPfft::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPfft*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPGroup::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPGroup::Class_Name()
{
   return "TDSPGroup";
}

//______________________________________________________________________________
const char *TDSPGroup::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPGroup*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPGroup::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPGroup*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPGroup::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPGroup*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPGroup::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPGroup*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPConvolution::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPConvolution::Class_Name()
{
   return "TDSPConvolution";
}

//______________________________________________________________________________
const char *TDSPConvolution::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPConvolution*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPConvolution::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPConvolution*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPConvolution::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPConvolution*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPConvolution::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPConvolution*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPChop::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPChop::Class_Name()
{
   return "TDSPChop";
}

//______________________________________________________________________________
const char *TDSPChop::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPChop*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPChop::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPChop*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPChop::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPChop*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPChop::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPChop*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPBlockfft::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPBlockfft::Class_Name()
{
   return "TDSPBlockfft";
}

//______________________________________________________________________________
const char *TDSPBlockfft::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPBlockfft*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPBlockfft::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPBlockfft*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPBlockfft::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPBlockfft*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPBlockfft::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPBlockfft*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPBlockMap::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPBlockMap::Class_Name()
{
   return "TDSPBlockMap";
}

//______________________________________________________________________________
const char *TDSPBlockMap::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPBlockMap*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPBlockMap::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPBlockMap*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPBlockMap::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPBlockMap*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPBlockMap::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPBlockMap*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPSignalDump::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPSignalDump::Class_Name()
{
   return "TDSPSignalDump";
}

//______________________________________________________________________________
const char *TDSPSignalDump::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPSignalDump*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPSignalDump::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPSignalDump*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPSignalDump::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPSignalDump*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPSignalDump::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPSignalDump*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPReadSignal::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPReadSignal::Class_Name()
{
   return "TDSPReadSignal";
}

//______________________________________________________________________________
const char *TDSPReadSignal::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPReadSignal*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPReadSignal::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPReadSignal*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPReadSignal::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPReadSignal*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPReadSignal::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPReadSignal*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPPsk::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPPsk::Class_Name()
{
   return "TDSPPsk";
}

//______________________________________________________________________________
const char *TDSPPsk::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPPsk*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPPsk::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPPsk*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPPsk::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPPsk*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPPsk::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPPsk*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPSignalStudy::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPSignalStudy::Class_Name()
{
   return "TDSPSignalStudy";
}

//______________________________________________________________________________
const char *TDSPSignalStudy::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPSignalStudy*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPSignalStudy::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPSignalStudy*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPSignalStudy::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPSignalStudy*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPSignalStudy::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPSignalStudy*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPQam::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPQam::Class_Name()
{
   return "TDSPQam";
}

//______________________________________________________________________________
const char *TDSPQam::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPQam*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPQam::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPQam*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPQam::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPQam*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPQam::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPQam*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPPam::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPPam::Class_Name()
{
   return "TDSPPam";
}

//______________________________________________________________________________
const char *TDSPPam::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPPam*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPPam::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPPam*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPPam::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPPam*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPPam::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPPam*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPOfdm::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPOfdm::Class_Name()
{
   return "TDSPOfdm";
}

//______________________________________________________________________________
const char *TDSPOfdm::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPOfdm*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPOfdm::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPOfdm*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPOfdm::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPOfdm*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPOfdm::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPOfdm*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPStft::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPStft::Class_Name()
{
   return "TDSPStft";
}

//______________________________________________________________________________
const char *TDSPStft::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPStft*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPStft::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPStft*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPStft::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPStft*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPStft::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPStft*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPNofdm::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPNofdm::Class_Name()
{
   return "TDSPNofdm";
}

//______________________________________________________________________________
const char *TDSPNofdm::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPNofdm*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPNofdm::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPNofdm*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPNofdm::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPNofdm*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPNofdm::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPNofdm*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPInt::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPInt::Class_Name()
{
   return "TDSPInt";
}

//______________________________________________________________________________
const char *TDSPInt::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPInt*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPInt::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPInt*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPInt::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPInt*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPInt::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPInt*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPFilterBank::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPFilterBank::Class_Name()
{
   return "TDSPFilterBank";
}

//______________________________________________________________________________
const char *TDSPFilterBank::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPFilterBank*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPFilterBank::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPFilterBank*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPFilterBank::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPFilterBank*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPFilterBank::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPFilterBank*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPCorrelationFilter::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPCorrelationFilter::Class_Name()
{
   return "TDSPCorrelationFilter";
}

//______________________________________________________________________________
const char *TDSPCorrelationFilter::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPCorrelationFilter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPCorrelationFilter::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPCorrelationFilter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPCorrelationFilter::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPCorrelationFilter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPCorrelationFilter::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPCorrelationFilter*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPMath::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPMath::Class_Name()
{
   return "TDSPMath";
}

//______________________________________________________________________________
const char *TDSPMath::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPMath*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPMath::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPMath*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPMath::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPMath*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPMath::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPMath*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPJakes::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPJakes::Class_Name()
{
   return "TDSPJakes";
}

//______________________________________________________________________________
const char *TDSPJakes::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPJakes*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPJakes::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPJakes*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPJakes::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPJakes*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPJakes::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPJakes*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPFunction::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPFunction::Class_Name()
{
   return "TDSPFunction";
}

//______________________________________________________________________________
const char *TDSPFunction::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPFunction*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPFunction::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPFunction*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPFunction::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPFunction*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPFunction::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPFunction*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPClip::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPClip::Class_Name()
{
   return "TDSPClip";
}

//______________________________________________________________________________
const char *TDSPClip::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPClip*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPClip::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPClip*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPClip::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPClip*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPClip::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPClip*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPBlockSolve::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPBlockSolve::Class_Name()
{
   return "TDSPBlockSolve";
}

//______________________________________________________________________________
const char *TDSPBlockSolve::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPBlockSolve*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPBlockSolve::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPBlockSolve*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPBlockSolve::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPBlockSolve*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPBlockSolve::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPBlockSolve*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPEstimator::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPEstimator::Class_Name()
{
   return "TDSPEstimator";
}

//______________________________________________________________________________
const char *TDSPEstimator::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPEstimator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPEstimator::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPEstimator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPEstimator::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPEstimator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPEstimator::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPEstimator*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPLmmse::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPLmmse::Class_Name()
{
   return "TDSPLmmse";
}

//______________________________________________________________________________
const char *TDSPLmmse::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPLmmse*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPLmmse::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPLmmse*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPLmmse::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPLmmse*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPLmmse::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPLmmse*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPFastBpsk::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPFastBpsk::Class_Name()
{
   return "TDSPFastBpsk";
}

//______________________________________________________________________________
const char *TDSPFastBpsk::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPFastBpsk*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPFastBpsk::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPFastBpsk*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPFastBpsk::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPFastBpsk*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPFastBpsk::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPFastBpsk*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPFastQpsk::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPFastQpsk::Class_Name()
{
   return "TDSPFastQpsk";
}

//______________________________________________________________________________
const char *TDSPFastQpsk::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPFastQpsk*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPFastQpsk::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPFastQpsk*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPFastQpsk::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPFastQpsk*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPFastQpsk::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPFastQpsk*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPModulation::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPModulation::Class_Name()
{
   return "TDSPModulation";
}

//______________________________________________________________________________
const char *TDSPModulation::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPModulation*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPModulation::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPModulation*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPModulation::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPModulation*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPModulation::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPModulation*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPWienerProcess::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPWienerProcess::Class_Name()
{
   return "TDSPWienerProcess";
}

//______________________________________________________________________________
const char *TDSPWienerProcess::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPWienerProcess*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPWienerProcess::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPWienerProcess*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPWienerProcess::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPWienerProcess*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPWienerProcess::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPWienerProcess*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPMonitor::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPMonitor::Class_Name()
{
   return "TDSPMonitor";
}

//______________________________________________________________________________
const char *TDSPMonitor::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPMonitor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPMonitor::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPMonitor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPMonitor::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPMonitor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPMonitor::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPMonitor*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPSource::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPSource::Class_Name()
{
   return "TDSPSource";
}

//______________________________________________________________________________
const char *TDSPSource::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPSource*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPSource::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPSource*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPSource::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPSource*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPSource::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPSource*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPFilterMap::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPFilterMap::Class_Name()
{
   return "TDSPFilterMap";
}

//______________________________________________________________________________
const char *TDSPFilterMap::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPFilterMap*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPFilterMap::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPFilterMap*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPFilterMap::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPFilterMap*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPFilterMap::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPFilterMap*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPFMT::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPFMT::Class_Name()
{
   return "TDSPFMT";
}

//______________________________________________________________________________
const char *TDSPFMT::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPFMT*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPFMT::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPFMT*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPFMT::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPFMT*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPFMT::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPFMT*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMaple::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMaple::Class_Name()
{
   return "TMaple";
}

//______________________________________________________________________________
const char *TMaple::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TMaple*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMaple::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TMaple*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMaple::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TMaple*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMaple::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TMaple*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TMaple::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMaple.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TQQObject::Streamer(R__b);
      R__b >> fd_in;
      R__b >> fd_out;
      R__b >> fPid;
      R__b.CheckByteCount(R__s, R__c, TMaple::IsA());
   } else {
      R__c = R__b.WriteVersion(TMaple::IsA(), kTRUE);
      TQQObject::Streamer(R__b);
      R__b << fd_in;
      R__b << fd_out;
      R__b << fPid;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TMaple::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMaple.

      TClass *R__cl = TMaple::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fd_in", &fd_in);
      R__insp.Inspect(R__cl, R__parent, "fd_out", &fd_out);
      R__insp.Inspect(R__cl, R__parent, "fPid", &fPid);
      R__insp.Inspect(R__cl, R__parent, "*fBuffer", &fBuffer);
      TQQObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMaple_IsA(const void *obj) {
      return ((::TMaple*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TMaple(void *p) {
      return  p ? new(p) ::TMaple : new ::TMaple;
   }
   static void *newArray_TMaple(Long_t size) {
      return new ::TMaple[size];
   }
   // Wrapper around operator delete
   static void delete_TMaple(void *p) {
      delete ((::TMaple*)p);
   }
   static void deleteArray_TMaple(void *p) {
      delete [] ((::TMaple*)p);
   }
   static void destruct_TMaple(void *p) {
      typedef ::TMaple current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMaple

//______________________________________________________________________________
void TDSPRating::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPRating.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> fRate;
      R__b >> fRelativeRate;
      R__b >> fRelativeRateMean;
      R__b >> fRelativeRateSigma;
      R__b >> fRateIndex;
      R__b.CheckByteCount(R__s, R__c, TDSPRating::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPRating::IsA(), kTRUE);
      R__b << fRate;
      R__b << fRelativeRate;
      R__b << fRelativeRateMean;
      R__b << fRelativeRateSigma;
      R__b << fRateIndex;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPRating::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPRating.

      TClass *R__cl = TDSPRating::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRate", &fRate);
      R__insp.Inspect(R__cl, R__parent, "fRelativeRate", &fRelativeRate);
      R__insp.Inspect(R__cl, R__parent, "fRelativeRateMean", &fRelativeRateMean);
      R__insp.Inspect(R__cl, R__parent, "fRelativeRateSigma", &fRelativeRateSigma);
      R__insp.Inspect(R__cl, R__parent, "fRateIndex", &fRateIndex);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPRating_IsA(const void *obj) {
      return ((::TDSPRating*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPRating(void *p) {
      return  p ? ::new((ROOT::TOperatorNewHelper*)p) ::TDSPRating : new ::TDSPRating;
   }
   static void *newArray_TDSPRating(Long_t size) {
      return new ::TDSPRating[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPRating(void *p) {
      delete ((::TDSPRating*)p);
   }
   static void deleteArray_TDSPRating(void *p) {
      delete [] ((::TDSPRating*)p);
   }
   static void destruct_TDSPRating(void *p) {
      typedef ::TDSPRating current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPRating

//______________________________________________________________________________
void TDSPStochasticProcess::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPStochasticProcess.

   TDSPRating::Streamer(R__b);
}

//______________________________________________________________________________
void TDSPStochasticProcess::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPStochasticProcess.

      TClass *R__cl = TDSPStochasticProcess::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fMode", &fMode);
      R__insp.Inspect(R__cl, R__parent, "*fSigmas", &fSigmas);
      R__insp.Inspect(R__cl, R__parent, "*fMeans", &fMeans);
      TDSPRating::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPStochasticProcess_IsA(const void *obj) {
      return ((::TDSPStochasticProcess*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TDSPStochasticProcess(void *p) {
      delete ((::TDSPStochasticProcess*)p);
   }
   static void deleteArray_TDSPStochasticProcess(void *p) {
      delete [] ((::TDSPStochasticProcess*)p);
   }
   static void destruct_TDSPStochasticProcess(void *p) {
      typedef ::TDSPStochasticProcess current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPStochasticProcess

//______________________________________________________________________________
void TDSPStochasticScalar::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPStochasticScalar.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TDSPStochasticProcess::Streamer(R__b);
      fValue.Streamer(R__b);
      R__b >> fFifoFilter;
      R__b.CheckByteCount(R__s, R__c, TDSPStochasticScalar::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPStochasticScalar::IsA(), kTRUE);
      TDSPStochasticProcess::Streamer(R__b);
      fValue.Streamer(R__b);
      R__b << fFifoFilter;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPStochasticScalar::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPStochasticScalar.

      TClass *R__cl = TDSPStochasticScalar::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fValue", &fValue);
      fValue.ShowMembers(R__insp, strcat(R__parent,"fValue.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fFifoFilter", &fFifoFilter);
      TDSPStochasticProcess::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPStochasticScalar_IsA(const void *obj) {
      return ((::TDSPStochasticScalar*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPStochasticScalar(void *p) {
      return  p ? ::new((ROOT::TOperatorNewHelper*)p) ::TDSPStochasticScalar : new ::TDSPStochasticScalar;
   }
   static void *newArray_TDSPStochasticScalar(Long_t size) {
      return new ::TDSPStochasticScalar[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPStochasticScalar(void *p) {
      delete ((::TDSPStochasticScalar*)p);
   }
   static void deleteArray_TDSPStochasticScalar(void *p) {
      delete [] ((::TDSPStochasticScalar*)p);
   }
   static void destruct_TDSPStochasticScalar(void *p) {
      typedef ::TDSPStochasticScalar current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPStochasticScalar

//______________________________________________________________________________
void TDSPStatistics::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPStatistics.

   ::Error("TDSPStatistics::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void TDSPStatistics::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPStatistics.

      TClass *R__cl = TDSPStatistics::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPStatistics_IsA(const void *obj) {
      return ((::TDSPStatistics*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPStatistics(void *p) {
      return  p ? ::new((ROOT::TOperatorNewHelper*)p) ::TDSPStatistics : new ::TDSPStatistics;
   }
   static void *newArray_TDSPStatistics(Long_t size) {
      return new ::TDSPStatistics[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPStatistics(void *p) {
      delete ((::TDSPStatistics*)p);
   }
   static void deleteArray_TDSPStatistics(void *p) {
      delete [] ((::TDSPStatistics*)p);
   }
   static void destruct_TDSPStatistics(void *p) {
      typedef ::TDSPStatistics current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPStatistics

//______________________________________________________________________________
void TDSPBlockfft::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPBlockfft.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TDSPfft::Streamer(R__b);
      TDSPBlockOperation::Streamer(R__b);
      R__b >> fBlockLen;
      R__b.CheckByteCount(R__s, R__c, TDSPBlockfft::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPBlockfft::IsA(), kTRUE);
      TDSPfft::Streamer(R__b);
      TDSPBlockOperation::Streamer(R__b);
      R__b << fBlockLen;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPBlockfft::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPBlockfft.

      TClass *R__cl = TDSPBlockfft::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fBlockLen", &fBlockLen);
      TDSPfft::ShowMembers(R__insp, R__parent);
      TDSPBlockOperation::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPBlockfft_IsA(const void *obj) {
      return ((::TDSPBlockfft*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPBlockfft(void *p) {
      return  p ? new(p) ::TDSPBlockfft : new ::TDSPBlockfft;
   }
   static void *newArray_TDSPBlockfft(Long_t size) {
      return new ::TDSPBlockfft[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPBlockfft(void *p) {
      delete ((::TDSPBlockfft*)p);
   }
   static void deleteArray_TDSPBlockfft(void *p) {
      delete [] ((::TDSPBlockfft*)p);
   }
   static void destruct_TDSPBlockfft(void *p) {
      typedef ::TDSPBlockfft current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPBlockfft

//______________________________________________________________________________
void TDSPBlockMap::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPBlockMap.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TDSPOperator::Streamer(R__b);
      TDSPBlockOperation::Streamer(R__b);
      R__b >> (Int_t&)fMAMode;
      R__b >> (Int_t&)fMAModeInverse;
      Signal_Update.Streamer(R__b);
      Signal_InverseUpdate.Streamer(R__b);
      Slot_Update.Streamer(R__b);
      Slot_InverseUpdate.Streamer(R__b);
      R__b >> fSignal;
      R__b >> fInverseSignal;
      R__b >> fMatrix;
      R__b >> fPseudoInverseMatrix;
      R__b.CheckByteCount(R__s, R__c, TDSPBlockMap::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPBlockMap::IsA(), kTRUE);
      TDSPOperator::Streamer(R__b);
      TDSPBlockOperation::Streamer(R__b);
      R__b << (Int_t)fMAMode;
      R__b << (Int_t)fMAModeInverse;
      Signal_Update.Streamer(R__b);
      Signal_InverseUpdate.Streamer(R__b);
      Slot_Update.Streamer(R__b);
      Slot_InverseUpdate.Streamer(R__b);
      R__b << fSignal;
      R__b << fInverseSignal;
      R__b << fMatrix;
      R__b << fPseudoInverseMatrix;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPBlockMap::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPBlockMap.

      TClass *R__cl = TDSPBlockMap::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fMAMode", &fMAMode);
      R__insp.Inspect(R__cl, R__parent, "fMAModeInverse", &fMAModeInverse);
      R__insp.Inspect(R__cl, R__parent, "Signal_Update", &Signal_Update);
      Signal_Update.ShowMembers(R__insp, strcat(R__parent,"Signal_Update.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "Signal_InverseUpdate", &Signal_InverseUpdate);
      Signal_InverseUpdate.ShowMembers(R__insp, strcat(R__parent,"Signal_InverseUpdate.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "Slot_Update", &Slot_Update);
      Slot_Update.ShowMembers(R__insp, strcat(R__parent,"Slot_Update.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "Slot_InverseUpdate", &Slot_InverseUpdate);
      Slot_InverseUpdate.ShowMembers(R__insp, strcat(R__parent,"Slot_InverseUpdate.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fSignal", &fSignal);
      R__insp.Inspect(R__cl, R__parent, "*fInverseSignal", &fInverseSignal);
      R__insp.Inspect(R__cl, R__parent, "*fMatrix", &fMatrix);
      R__insp.Inspect(R__cl, R__parent, "*fPseudoInverseMatrix", &fPseudoInverseMatrix);
      TDSPOperator::ShowMembers(R__insp, R__parent);
      TDSPBlockOperation::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPBlockMap_IsA(const void *obj) {
      return ((::TDSPBlockMap*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPBlockMap(void *p) {
      return  p ? new(p) ::TDSPBlockMap : new ::TDSPBlockMap;
   }
   static void *newArray_TDSPBlockMap(Long_t size) {
      return new ::TDSPBlockMap[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPBlockMap(void *p) {
      delete ((::TDSPBlockMap*)p);
   }
   static void deleteArray_TDSPBlockMap(void *p) {
      delete [] ((::TDSPBlockMap*)p);
   }
   static void destruct_TDSPBlockMap(void *p) {
      typedef ::TDSPBlockMap current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPBlockMap

//______________________________________________________________________________
void TDSPFilterMap::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPFilterMap.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TDSPOperator::Streamer(R__b);
      TDSPBlockOperation::Streamer(R__b);
      R__b >> fOpt;
      Signal_Update.Streamer(R__b);
      Signal_InverseUpdate.Streamer(R__b);
      Slot_Update.Streamer(R__b);
      Slot_InverseUpdate.Streamer(R__b);
      R__b >> fSignal;
      R__b >> fInverseSignal;
      R__b.CheckByteCount(R__s, R__c, TDSPFilterMap::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPFilterMap::IsA(), kTRUE);
      TDSPOperator::Streamer(R__b);
      TDSPBlockOperation::Streamer(R__b);
      R__b << fOpt;
      Signal_Update.Streamer(R__b);
      Signal_InverseUpdate.Streamer(R__b);
      Slot_Update.Streamer(R__b);
      Slot_InverseUpdate.Streamer(R__b);
      R__b << fSignal;
      R__b << fInverseSignal;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPFilterMap::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPFilterMap.

      TClass *R__cl = TDSPFilterMap::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fOpt", &fOpt);
      R__insp.Inspect(R__cl, R__parent, "*fSynthesisBank", &fSynthesisBank);
      R__insp.Inspect(R__cl, R__parent, "*fAnalysisBank", &fAnalysisBank);
      R__insp.Inspect(R__cl, R__parent, "Signal_Update", &Signal_Update);
      Signal_Update.ShowMembers(R__insp, strcat(R__parent,"Signal_Update.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "Signal_InverseUpdate", &Signal_InverseUpdate);
      Signal_InverseUpdate.ShowMembers(R__insp, strcat(R__parent,"Signal_InverseUpdate.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "Slot_Update", &Slot_Update);
      Slot_Update.ShowMembers(R__insp, strcat(R__parent,"Slot_Update.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "Slot_InverseUpdate", &Slot_InverseUpdate);
      Slot_InverseUpdate.ShowMembers(R__insp, strcat(R__parent,"Slot_InverseUpdate.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fSignal", &fSignal);
      R__insp.Inspect(R__cl, R__parent, "*fInverseSignal", &fInverseSignal);
      TDSPOperator::ShowMembers(R__insp, R__parent);
      TDSPBlockOperation::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPFilterMap_IsA(const void *obj) {
      return ((::TDSPFilterMap*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPFilterMap(void *p) {
      return  p ? new(p) ::TDSPFilterMap : new ::TDSPFilterMap;
   }
   static void *newArray_TDSPFilterMap(Long_t size) {
      return new ::TDSPFilterMap[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPFilterMap(void *p) {
      delete ((::TDSPFilterMap*)p);
   }
   static void deleteArray_TDSPFilterMap(void *p) {
      delete [] ((::TDSPFilterMap*)p);
   }
   static void destruct_TDSPFilterMap(void *p) {
      typedef ::TDSPFilterMap current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPFilterMap

//______________________________________________________________________________
void TDSPBlockSolve::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPBlockSolve.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TDSPOutput1::Streamer(R__b);
      TDSPBlockOperation::Streamer(R__b);
      R__b >> fSolver;
      R__b.CheckByteCount(R__s, R__c, TDSPBlockSolve::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPBlockSolve::IsA(), kTRUE);
      TDSPOutput1::Streamer(R__b);
      TDSPBlockOperation::Streamer(R__b);
      R__b << fSolver;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPBlockSolve::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPBlockSolve.

      TClass *R__cl = TDSPBlockSolve::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fSolver", &fSolver);
      TDSPOutput1::ShowMembers(R__insp, R__parent);
      TDSPBlockOperation::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPBlockSolve_IsA(const void *obj) {
      return ((::TDSPBlockSolve*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPBlockSolve(void *p) {
      return  p ? new(p) ::TDSPBlockSolve : new ::TDSPBlockSolve;
   }
   static void *newArray_TDSPBlockSolve(Long_t size) {
      return new ::TDSPBlockSolve[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPBlockSolve(void *p) {
      delete ((::TDSPBlockSolve*)p);
   }
   static void deleteArray_TDSPBlockSolve(void *p) {
      delete [] ((::TDSPBlockSolve*)p);
   }
   static void destruct_TDSPBlockSolve(void *p) {
      typedef ::TDSPBlockSolve current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPBlockSolve

//______________________________________________________________________________
void TDSPChop::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPChop.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TDSPOutput1::Streamer(R__b);
      R__b >> fSignalLength;
      R__b >> fFilled;
      R__b.CheckByteCount(R__s, R__c, TDSPChop::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPChop::IsA(), kTRUE);
      TDSPOutput1::Streamer(R__b);
      R__b << fSignalLength;
      R__b << fFilled;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPChop::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPChop.

      TClass *R__cl = TDSPChop::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fSignalLength", &fSignalLength);
      R__insp.Inspect(R__cl, R__parent, "fFilled", &fFilled);
      TDSPOutput1::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPChop_IsA(const void *obj) {
      return ((::TDSPChop*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TDSPChop(void *p) {
      delete ((::TDSPChop*)p);
   }
   static void deleteArray_TDSPChop(void *p) {
      delete [] ((::TDSPChop*)p);
   }
   static void destruct_TDSPChop(void *p) {
      typedef ::TDSPChop current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPChop

//______________________________________________________________________________
void TDSPConvolution::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPConvolution.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TDSPOutput1::Streamer(R__b);
      TDSPBlockOperation::Streamer(R__b);
      R__b >> fBlockLen;
      R__b >> fConvOptions;
      Slot_Response.Streamer(R__b);
      Slot_StochasticResponse.Streamer(R__b);
      R__b >> ResponseFunction;
      R__b >> StochasticResponseFunction;
      R__b.CheckByteCount(R__s, R__c, TDSPConvolution::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPConvolution::IsA(), kTRUE);
      TDSPOutput1::Streamer(R__b);
      TDSPBlockOperation::Streamer(R__b);
      R__b << fBlockLen;
      R__b << fConvOptions;
      Slot_Response.Streamer(R__b);
      Slot_StochasticResponse.Streamer(R__b);
      R__b << ResponseFunction;
      R__b << StochasticResponseFunction;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPConvolution::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPConvolution.

      TClass *R__cl = TDSPConvolution::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fBlockLen", &fBlockLen);
      R__insp.Inspect(R__cl, R__parent, "fConvOptions", &fConvOptions);
      R__insp.Inspect(R__cl, R__parent, "Slot_Response", &Slot_Response);
      Slot_Response.ShowMembers(R__insp, strcat(R__parent,"Slot_Response.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "Slot_StochasticResponse", &Slot_StochasticResponse);
      Slot_StochasticResponse.ShowMembers(R__insp, strcat(R__parent,"Slot_StochasticResponse.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*ResponseFunction", &ResponseFunction);
      R__insp.Inspect(R__cl, R__parent, "*StochasticResponseFunction", &StochasticResponseFunction);
      TDSPOutput1::ShowMembers(R__insp, R__parent);
      TDSPBlockOperation::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPConvolution_IsA(const void *obj) {
      return ((::TDSPConvolution*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPConvolution(void *p) {
      return  p ? new(p) ::TDSPConvolution : new ::TDSPConvolution;
   }
   static void *newArray_TDSPConvolution(Long_t size) {
      return new ::TDSPConvolution[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPConvolution(void *p) {
      delete ((::TDSPConvolution*)p);
   }
   static void deleteArray_TDSPConvolution(void *p) {
      delete [] ((::TDSPConvolution*)p);
   }
   static void destruct_TDSPConvolution(void *p) {
      typedef ::TDSPConvolution current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPConvolution

//______________________________________________________________________________
void TDSPData::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPData.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, TDSPData::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPData::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPData::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPData.

      TClass *R__cl = TDSPData::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPData_IsA(const void *obj) {
      return ((::TDSPData*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPData(void *p) {
      return  p ? new(p) ::TDSPData : new ::TDSPData;
   }
   static void *newArray_TDSPData(Long_t size) {
      return new ::TDSPData[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPData(void *p) {
      delete ((::TDSPData*)p);
   }
   static void deleteArray_TDSPData(void *p) {
      delete [] ((::TDSPData*)p);
   }
   static void destruct_TDSPData(void *p) {
      typedef ::TDSPData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPData

//______________________________________________________________________________
void TDSPGenerator::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPGenerator.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b.CheckByteCount(R__s, R__c, TDSPGenerator::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPGenerator::IsA(), kTRUE);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPGenerator::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPGenerator.

      TClass *R__cl = TDSPGenerator::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPGenerator_IsA(const void *obj) {
      return ((::TDSPGenerator*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPGenerator(void *p) {
      return  p ? ::new((ROOT::TOperatorNewHelper*)p) ::TDSPGenerator : new ::TDSPGenerator;
   }
   static void *newArray_TDSPGenerator(Long_t size) {
      return new ::TDSPGenerator[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPGenerator(void *p) {
      delete ((::TDSPGenerator*)p);
   }
   static void deleteArray_TDSPGenerator(void *p) {
      delete [] ((::TDSPGenerator*)p);
   }
   static void destruct_TDSPGenerator(void *p) {
      typedef ::TDSPGenerator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPGenerator

//______________________________________________________________________________
void TDSPGroup::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPGroup.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TDSPOperator::Streamer(R__b);
      R__b >> fListOfOperators;
      R__b.CheckByteCount(R__s, R__c, TDSPGroup::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPGroup::IsA(), kTRUE);
      TDSPOperator::Streamer(R__b);
      R__b << fListOfOperators;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPGroup::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPGroup.

      TClass *R__cl = TDSPGroup::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fListOfOperators", &fListOfOperators);
      TDSPOperator::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPGroup_IsA(const void *obj) {
      return ((::TDSPGroup*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPGroup(void *p) {
      return  p ? new(p) ::TDSPGroup : new ::TDSPGroup;
   }
   static void *newArray_TDSPGroup(Long_t size) {
      return new ::TDSPGroup[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPGroup(void *p) {
      delete ((::TDSPGroup*)p);
   }
   static void deleteArray_TDSPGroup(void *p) {
      delete [] ((::TDSPGroup*)p);
   }
   static void destruct_TDSPGroup(void *p) {
      typedef ::TDSPGroup current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPGroup

//______________________________________________________________________________
void TDSPHarmonicGenerator::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPHarmonicGenerator.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TDSPGenerator::Streamer(R__b);
      TDSPOutput1::Streamer(R__b);
      R__b >> Spectrum;
      Slot_Generate.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, TDSPHarmonicGenerator::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPHarmonicGenerator::IsA(), kTRUE);
      TDSPGenerator::Streamer(R__b);
      TDSPOutput1::Streamer(R__b);
      R__b << Spectrum;
      Slot_Generate.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPHarmonicGenerator::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPHarmonicGenerator.

      TClass *R__cl = TDSPHarmonicGenerator::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*Spectrum", &Spectrum);
      R__insp.Inspect(R__cl, R__parent, "Slot_Generate", &Slot_Generate);
      Slot_Generate.ShowMembers(R__insp, strcat(R__parent,"Slot_Generate.")); R__parent[R__ncp] = 0;
      TDSPGenerator::ShowMembers(R__insp, R__parent);
      TDSPOutput1::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPHarmonicGenerator_IsA(const void *obj) {
      return ((::TDSPHarmonicGenerator*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TDSPHarmonicGenerator(void *p) {
      delete ((::TDSPHarmonicGenerator*)p);
   }
   static void deleteArray_TDSPHarmonicGenerator(void *p) {
      delete [] ((::TDSPHarmonicGenerator*)p);
   }
   static void destruct_TDSPHarmonicGenerator(void *p) {
      typedef ::TDSPHarmonicGenerator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPHarmonicGenerator

//______________________________________________________________________________
void TDSPInt::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPInt.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TRint::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, TDSPInt::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPInt::IsA(), kTRUE);
      TRint::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPInt::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPInt.

      TClass *R__cl = TDSPInt::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TRint::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPInt_IsA(const void *obj) {
      return ((::TDSPInt*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TDSPInt(void *p) {
      delete ((::TDSPInt*)p);
   }
   static void deleteArray_TDSPInt(void *p) {
      delete [] ((::TDSPInt*)p);
   }
   static void destruct_TDSPInt(void *p) {
      typedef ::TDSPInt current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPInt

//______________________________________________________________________________
void TDSPNofdm::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPNofdm.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TDSPBlockMap::Streamer(R__b);
      Delegation_Transmit.Streamer(R__b);
      Delegation_Receive.Streamer(R__b);
      Delegation_Transmitted.Streamer(R__b);
      Delegation_Received.Streamer(R__b);
      R__b >> fMode;
      R__b >> fDual;
      R__b >> fTight;
      R__b >> fOptions;
      R__b >> fNumCarriers;
      R__b >> fNumTime;
      R__b >> fTimePad;
      R__b >> fFreqPad;
      R__b >> fLength;
      fPulseName.Streamer(R__b);
      R__b >> fPulseNumParams;
      R__b.ReadStaticArray((double*)fPulseParams);
      fPulseFile.Streamer(R__b);
      R__b >> fMapping;
      R__b >> fMappingPart1;
      R__b >> fCorrelation;
      R__b >> fNoiseCorrelation;
      R__b >> fTransmitMatrix;
      R__b >> fReceiverMatrix;
      R__b >> fChannel;
      R__b >> f_PseudoInverseMatrix;
      R__b >> _recalc_correlations;
      R__b >> _recalc_mapping;
      R__b >> fHistogram_all;
      R__b >> fHistogram_diag;
      R__b >> fHistogram_nondiag;
      R__b >> fHistogram_corr_all;
      R__b >> fHistogram_corr_diag;
      R__b >> fHistogram_corr_nondiag;
      R__b.CheckByteCount(R__s, R__c, TDSPNofdm::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPNofdm::IsA(), kTRUE);
      TDSPBlockMap::Streamer(R__b);
      Delegation_Transmit.Streamer(R__b);
      Delegation_Receive.Streamer(R__b);
      Delegation_Transmitted.Streamer(R__b);
      Delegation_Received.Streamer(R__b);
      R__b << fMode;
      R__b << fDual;
      R__b << fTight;
      R__b << fOptions;
      R__b << fNumCarriers;
      R__b << fNumTime;
      R__b << fTimePad;
      R__b << fFreqPad;
      R__b << fLength;
      fPulseName.Streamer(R__b);
      R__b << fPulseNumParams;
      R__b.WriteArray(fPulseParams, 4);
      fPulseFile.Streamer(R__b);
      R__b << fMapping;
      R__b << fMappingPart1;
      R__b << fCorrelation;
      R__b << fNoiseCorrelation;
      R__b << fTransmitMatrix;
      R__b << fReceiverMatrix;
      R__b << fChannel;
      R__b << f_PseudoInverseMatrix;
      R__b << _recalc_correlations;
      R__b << _recalc_mapping;
      R__b << (TObject*)fHistogram_all;
      R__b << (TObject*)fHistogram_diag;
      R__b << (TObject*)fHistogram_nondiag;
      R__b << (TObject*)fHistogram_corr_all;
      R__b << (TObject*)fHistogram_corr_diag;
      R__b << (TObject*)fHistogram_corr_nondiag;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPNofdm::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPNofdm.

      TClass *R__cl = TDSPNofdm::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "Delegation_Transmit", &Delegation_Transmit);
      Delegation_Transmit.ShowMembers(R__insp, strcat(R__parent,"Delegation_Transmit.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "Delegation_Receive", &Delegation_Receive);
      Delegation_Receive.ShowMembers(R__insp, strcat(R__parent,"Delegation_Receive.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "Delegation_Transmitted", &Delegation_Transmitted);
      Delegation_Transmitted.ShowMembers(R__insp, strcat(R__parent,"Delegation_Transmitted.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "Delegation_Received", &Delegation_Received);
      Delegation_Received.ShowMembers(R__insp, strcat(R__parent,"Delegation_Received.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fMode", &fMode);
      R__insp.Inspect(R__cl, R__parent, "fDual", &fDual);
      R__insp.Inspect(R__cl, R__parent, "fTight", &fTight);
      R__insp.Inspect(R__cl, R__parent, "fOptions", &fOptions);
      R__insp.Inspect(R__cl, R__parent, "fNumCarriers", &fNumCarriers);
      R__insp.Inspect(R__cl, R__parent, "fNumTime", &fNumTime);
      R__insp.Inspect(R__cl, R__parent, "fTimePad", &fTimePad);
      R__insp.Inspect(R__cl, R__parent, "fFreqPad", &fFreqPad);
      R__insp.Inspect(R__cl, R__parent, "fLength", &fLength);
      R__insp.Inspect(R__cl, R__parent, "fPulseName", &fPulseName);
      fPulseName.ShowMembers(R__insp, strcat(R__parent,"fPulseName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fPulseNumParams", &fPulseNumParams);
      R__insp.Inspect(R__cl, R__parent, "fPulseParams[4]", fPulseParams);
      R__insp.Inspect(R__cl, R__parent, "fPulseFile", &fPulseFile);
      fPulseFile.ShowMembers(R__insp, strcat(R__parent,"fPulseFile.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fMapping", &fMapping);
      R__insp.Inspect(R__cl, R__parent, "*fMappingPart1", &fMappingPart1);
      R__insp.Inspect(R__cl, R__parent, "*fCorrelation", &fCorrelation);
      R__insp.Inspect(R__cl, R__parent, "*fNoiseCorrelation", &fNoiseCorrelation);
      R__insp.Inspect(R__cl, R__parent, "*fTransmitMatrix", &fTransmitMatrix);
      R__insp.Inspect(R__cl, R__parent, "*fReceiverMatrix", &fReceiverMatrix);
      R__insp.Inspect(R__cl, R__parent, "*fChannel", &fChannel);
      R__insp.Inspect(R__cl, R__parent, "*f_PseudoInverseMatrix", &f_PseudoInverseMatrix);
      R__insp.Inspect(R__cl, R__parent, "_recalc_correlations", &_recalc_correlations);
      R__insp.Inspect(R__cl, R__parent, "_recalc_mapping", &_recalc_mapping);
      R__insp.Inspect(R__cl, R__parent, "*fHistogram_all", &fHistogram_all);
      R__insp.Inspect(R__cl, R__parent, "*fHistogram_diag", &fHistogram_diag);
      R__insp.Inspect(R__cl, R__parent, "*fHistogram_nondiag", &fHistogram_nondiag);
      R__insp.Inspect(R__cl, R__parent, "*fHistogram_corr_all", &fHistogram_corr_all);
      R__insp.Inspect(R__cl, R__parent, "*fHistogram_corr_diag", &fHistogram_corr_diag);
      R__insp.Inspect(R__cl, R__parent, "*fHistogram_corr_nondiag", &fHistogram_corr_nondiag);
      TDSPBlockMap::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPNofdm_IsA(const void *obj) {
      return ((::TDSPNofdm*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPNofdm(void *p) {
      return  p ? new(p) ::TDSPNofdm : new ::TDSPNofdm;
   }
   static void *newArray_TDSPNofdm(Long_t size) {
      return new ::TDSPNofdm[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPNofdm(void *p) {
      delete ((::TDSPNofdm*)p);
   }
   static void deleteArray_TDSPNofdm(void *p) {
      delete [] ((::TDSPNofdm*)p);
   }
   static void destruct_TDSPNofdm(void *p) {
      typedef ::TDSPNofdm current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPNofdm

//______________________________________________________________________________
void TDSPFMT::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPFMT.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TDSPFilterMap::Streamer(R__b);
      Delegation_Transmit.Streamer(R__b);
      Delegation_Receive.Streamer(R__b);
      Delegation_Transmitted.Streamer(R__b);
      Delegation_Received.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, TDSPFMT::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPFMT::IsA(), kTRUE);
      TDSPFilterMap::Streamer(R__b);
      Delegation_Transmit.Streamer(R__b);
      Delegation_Receive.Streamer(R__b);
      Delegation_Transmitted.Streamer(R__b);
      Delegation_Received.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPFMT::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPFMT.

      TClass *R__cl = TDSPFMT::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "Delegation_Transmit", &Delegation_Transmit);
      Delegation_Transmit.ShowMembers(R__insp, strcat(R__parent,"Delegation_Transmit.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "Delegation_Receive", &Delegation_Receive);
      Delegation_Receive.ShowMembers(R__insp, strcat(R__parent,"Delegation_Receive.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "Delegation_Transmitted", &Delegation_Transmitted);
      Delegation_Transmitted.ShowMembers(R__insp, strcat(R__parent,"Delegation_Transmitted.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "Delegation_Received", &Delegation_Received);
      Delegation_Received.ShowMembers(R__insp, strcat(R__parent,"Delegation_Received.")); R__parent[R__ncp] = 0;
      TDSPFilterMap::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPFMT_IsA(const void *obj) {
      return ((::TDSPFMT*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPFMT(void *p) {
      return  p ? new(p) ::TDSPFMT : new ::TDSPFMT;
   }
   static void *newArray_TDSPFMT(Long_t size) {
      return new ::TDSPFMT[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPFMT(void *p) {
      delete ((::TDSPFMT*)p);
   }
   static void deleteArray_TDSPFMT(void *p) {
      delete [] ((::TDSPFMT*)p);
   }
   static void destruct_TDSPFMT(void *p) {
      typedef ::TDSPFMT current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPFMT

//______________________________________________________________________________
void TDSPOfdm::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPOfdm.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TDSPBlockfft::Streamer(R__b);
      R__b >> fAutoEqualization;
      R__b >> fEqualization;
      R__b.CheckByteCount(R__s, R__c, TDSPOfdm::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPOfdm::IsA(), kTRUE);
      TDSPBlockfft::Streamer(R__b);
      R__b << fAutoEqualization;
      R__b << fEqualization;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPOfdm::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPOfdm.

      TClass *R__cl = TDSPOfdm::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fAutoEqualization", &fAutoEqualization);
      R__insp.Inspect(R__cl, R__parent, "*fEqualization", &fEqualization);
      TDSPBlockfft::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPOfdm_IsA(const void *obj) {
      return ((::TDSPOfdm*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPOfdm(void *p) {
      return  p ? new(p) ::TDSPOfdm : new ::TDSPOfdm;
   }
   static void *newArray_TDSPOfdm(Long_t size) {
      return new ::TDSPOfdm[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPOfdm(void *p) {
      delete ((::TDSPOfdm*)p);
   }
   static void deleteArray_TDSPOfdm(void *p) {
      delete [] ((::TDSPOfdm*)p);
   }
   static void destruct_TDSPOfdm(void *p) {
      typedef ::TDSPOfdm current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPOfdm

//______________________________________________________________________________
void TDSPOperator::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPOperator.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TQQObject::Streamer(R__b);
      R__b >> fInitialized;
      R__b >> fDebugWindow;
      R__b.CheckByteCount(R__s, R__c, TDSPOperator::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPOperator::IsA(), kTRUE);
      TQQObject::Streamer(R__b);
      R__b << fInitialized;
      R__b << fDebugWindow;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPOperator::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPOperator.

      TClass *R__cl = TDSPOperator::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fInitialized", &fInitialized);
      R__insp.Inspect(R__cl, R__parent, "*fDebugWindow", &fDebugWindow);
      TQQObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPOperator_IsA(const void *obj) {
      return ((::TDSPOperator*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPOperator(void *p) {
      return  p ? new(p) ::TDSPOperator : new ::TDSPOperator;
   }
   static void *newArray_TDSPOperator(Long_t size) {
      return new ::TDSPOperator[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPOperator(void *p) {
      delete ((::TDSPOperator*)p);
   }
   static void deleteArray_TDSPOperator(void *p) {
      delete [] ((::TDSPOperator*)p);
   }
   static void destruct_TDSPOperator(void *p) {
      typedef ::TDSPOperator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPOperator

//______________________________________________________________________________
void TDSPOutput1::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPOutput1.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TDSPOperator::Streamer(R__b);
      R__b >> fIsActive;
      R__b >> fBits;
      R__b >> fSignal;
      Signal_NewData.Streamer(R__b);
      Slot_Update.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, TDSPOutput1::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPOutput1::IsA(), kTRUE);
      TDSPOperator::Streamer(R__b);
      R__b << fIsActive;
      R__b << fBits;
      R__b << fSignal;
      Signal_NewData.Streamer(R__b);
      Slot_Update.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPOutput1::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPOutput1.

      TClass *R__cl = TDSPOutput1::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fIsActive", &fIsActive);
      R__insp.Inspect(R__cl, R__parent, "fBits", &fBits);
      R__insp.Inspect(R__cl, R__parent, "*fSignal", &fSignal);
      R__insp.Inspect(R__cl, R__parent, "Signal_NewData", &Signal_NewData);
      Signal_NewData.ShowMembers(R__insp, strcat(R__parent,"Signal_NewData.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "Slot_Update", &Slot_Update);
      Slot_Update.ShowMembers(R__insp, strcat(R__parent,"Slot_Update.")); R__parent[R__ncp] = 0;
      TDSPOperator::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPOutput1_IsA(const void *obj) {
      return ((::TDSPOutput1*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPOutput1(void *p) {
      return  p ? new(p) ::TDSPOutput1 : new ::TDSPOutput1;
   }
   static void *newArray_TDSPOutput1(Long_t size) {
      return new ::TDSPOutput1[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPOutput1(void *p) {
      delete ((::TDSPOutput1*)p);
   }
   static void deleteArray_TDSPOutput1(void *p) {
      delete [] ((::TDSPOutput1*)p);
   }
   static void destruct_TDSPOutput1(void *p) {
      typedef ::TDSPOutput1 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPOutput1

//______________________________________________________________________________
void TDSPSignalStudy::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPSignalStudy.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TDSPOutput1::Streamer(R__b);
      TDSPBlockOperation::Streamer(R__b);
      R__b >> fWhat;
      R__b >> fBlockLen;
      R__b.CheckByteCount(R__s, R__c, TDSPSignalStudy::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPSignalStudy::IsA(), kTRUE);
      TDSPOutput1::Streamer(R__b);
      TDSPBlockOperation::Streamer(R__b);
      R__b << fWhat;
      R__b << fBlockLen;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPSignalStudy::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPSignalStudy.

      TClass *R__cl = TDSPSignalStudy::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fWhat", &fWhat);
      R__insp.Inspect(R__cl, R__parent, "fBlockLen", &fBlockLen);
      R__insp.Inspect(R__cl, R__parent, "*fMean", &fMean);
      R__insp.Inspect(R__cl, R__parent, "*fMaxAbs", &fMaxAbs);
      R__insp.Inspect(R__cl, R__parent, "*fCrest", &fCrest);
      TDSPOutput1::ShowMembers(R__insp, R__parent);
      TDSPBlockOperation::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPSignalStudy_IsA(const void *obj) {
      return ((::TDSPSignalStudy*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPSignalStudy(void *p) {
      return  p ? new(p) ::TDSPSignalStudy : new ::TDSPSignalStudy;
   }
   static void *newArray_TDSPSignalStudy(Long_t size) {
      return new ::TDSPSignalStudy[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPSignalStudy(void *p) {
      delete ((::TDSPSignalStudy*)p);
   }
   static void deleteArray_TDSPSignalStudy(void *p) {
      delete [] ((::TDSPSignalStudy*)p);
   }
   static void destruct_TDSPSignalStudy(void *p) {
      typedef ::TDSPSignalStudy current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPSignalStudy

//______________________________________________________________________________
void TDSPPsk::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPPsk.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TDSPSymbolGenerator::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, TDSPPsk::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPPsk::IsA(), kTRUE);
      TDSPSymbolGenerator::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPPsk::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPPsk.

      TClass *R__cl = TDSPPsk::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TDSPSymbolGenerator::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPPsk_IsA(const void *obj) {
      return ((::TDSPPsk*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TDSPPsk(void *p) {
      delete ((::TDSPPsk*)p);
   }
   static void deleteArray_TDSPPsk(void *p) {
      delete [] ((::TDSPPsk*)p);
   }
   static void destruct_TDSPPsk(void *p) {
      typedef ::TDSPPsk current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPPsk

//______________________________________________________________________________
void TDSPQam::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPQam.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TDSPSymbolGenerator::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, TDSPQam::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPQam::IsA(), kTRUE);
      TDSPSymbolGenerator::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPQam::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPQam.

      TClass *R__cl = TDSPQam::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TDSPSymbolGenerator::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPQam_IsA(const void *obj) {
      return ((::TDSPQam*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TDSPQam(void *p) {
      delete ((::TDSPQam*)p);
   }
   static void deleteArray_TDSPQam(void *p) {
      delete [] ((::TDSPQam*)p);
   }
   static void destruct_TDSPQam(void *p) {
      typedef ::TDSPQam current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPQam

//______________________________________________________________________________
void TDSPPam::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPPam.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TDSPSymbolGenerator::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, TDSPPam::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPPam::IsA(), kTRUE);
      TDSPSymbolGenerator::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPPam::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPPam.

      TClass *R__cl = TDSPPam::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TDSPSymbolGenerator::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPPam_IsA(const void *obj) {
      return ((::TDSPPam*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TDSPPam(void *p) {
      delete ((::TDSPPam*)p);
   }
   static void deleteArray_TDSPPam(void *p) {
      delete [] ((::TDSPPam*)p);
   }
   static void destruct_TDSPPam(void *p) {
      typedef ::TDSPPam current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPPam

//______________________________________________________________________________
void TDSPFastBpsk::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPFastBpsk.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TDSPPsk::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, TDSPFastBpsk::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPFastBpsk::IsA(), kTRUE);
      TDSPPsk::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPFastBpsk::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPFastBpsk.

      TClass *R__cl = TDSPFastBpsk::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TDSPPsk::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPFastBpsk_IsA(const void *obj) {
      return ((::TDSPFastBpsk*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPFastBpsk(void *p) {
      return  p ? new(p) ::TDSPFastBpsk : new ::TDSPFastBpsk;
   }
   static void *newArray_TDSPFastBpsk(Long_t size) {
      return new ::TDSPFastBpsk[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPFastBpsk(void *p) {
      delete ((::TDSPFastBpsk*)p);
   }
   static void deleteArray_TDSPFastBpsk(void *p) {
      delete [] ((::TDSPFastBpsk*)p);
   }
   static void destruct_TDSPFastBpsk(void *p) {
      typedef ::TDSPFastBpsk current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPFastBpsk

//______________________________________________________________________________
void TDSPFastQpsk::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPFastQpsk.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TDSPPsk::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, TDSPFastQpsk::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPFastQpsk::IsA(), kTRUE);
      TDSPPsk::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPFastQpsk::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPFastQpsk.

      TClass *R__cl = TDSPFastQpsk::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TDSPPsk::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPFastQpsk_IsA(const void *obj) {
      return ((::TDSPFastQpsk*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPFastQpsk(void *p) {
      return  p ? new(p) ::TDSPFastQpsk : new ::TDSPFastQpsk;
   }
   static void *newArray_TDSPFastQpsk(Long_t size) {
      return new ::TDSPFastQpsk[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPFastQpsk(void *p) {
      delete ((::TDSPFastQpsk*)p);
   }
   static void deleteArray_TDSPFastQpsk(void *p) {
      delete [] ((::TDSPFastQpsk*)p);
   }
   static void destruct_TDSPFastQpsk(void *p) {
      typedef ::TDSPFastQpsk current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPFastQpsk

//______________________________________________________________________________
void TDSPReadSignal::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPReadSignal.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TDSPOutput1::Streamer(R__b);
      TDSPGenerator::Streamer(R__b);
      Slot_Generate.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, TDSPReadSignal::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPReadSignal::IsA(), kTRUE);
      TDSPOutput1::Streamer(R__b);
      TDSPGenerator::Streamer(R__b);
      Slot_Generate.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPReadSignal::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPReadSignal.

      TClass *R__cl = TDSPReadSignal::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*is", &is);
      R__insp.Inspect(R__cl, R__parent, "Slot_Generate", &Slot_Generate);
      Slot_Generate.ShowMembers(R__insp, strcat(R__parent,"Slot_Generate.")); R__parent[R__ncp] = 0;
      TDSPOutput1::ShowMembers(R__insp, R__parent);
      TDSPGenerator::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPReadSignal_IsA(const void *obj) {
      return ((::TDSPReadSignal*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TDSPReadSignal(void *p) {
      delete ((::TDSPReadSignal*)p);
   }
   static void deleteArray_TDSPReadSignal(void *p) {
      delete [] ((::TDSPReadSignal*)p);
   }
   static void destruct_TDSPReadSignal(void *p) {
      typedef ::TDSPReadSignal current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPReadSignal

//______________________________________________________________________________
void TDSPSignal::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPSignal.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TDSPMatrix::Streamer(R__b);
      fName.Streamer(R__b);
      fTitle.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, TDSPSignal::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPSignal::IsA(), kTRUE);
      TDSPMatrix::Streamer(R__b);
      fName.Streamer(R__b);
      fTitle.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPSignal::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPSignal.

      TClass *R__cl = TDSPSignal::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fName", &fName);
      fName.ShowMembers(R__insp, strcat(R__parent,"fName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fTitle", &fTitle);
      fTitle.ShowMembers(R__insp, strcat(R__parent,"fTitle.")); R__parent[R__ncp] = 0;
      TDSPMatrix::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPSignal_IsA(const void *obj) {
      return ((::TDSPSignal*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPSignal(void *p) {
      return  p ? new(p) ::TDSPSignal : new ::TDSPSignal;
   }
   static void *newArray_TDSPSignal(Long_t size) {
      return new ::TDSPSignal[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPSignal(void *p) {
      delete ((::TDSPSignal*)p);
   }
   static void deleteArray_TDSPSignal(void *p) {
      delete [] ((::TDSPSignal*)p);
   }
   static void destruct_TDSPSignal(void *p) {
      typedef ::TDSPSignal current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPSignal

//______________________________________________________________________________
void TDSPSignalDump::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPSignalDump.

   TDSPOperator::Streamer(R__b);
}

//______________________________________________________________________________
void TDSPSignalDump::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPSignalDump.

      TClass *R__cl = TDSPSignalDump::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*os", &os);
      R__insp.Inspect(R__cl, R__parent, "fMode", &fMode);
      R__insp.Inspect(R__cl, R__parent, "fPause", &fPause);
      R__insp.Inspect(R__cl, R__parent, "Slot_Update", &Slot_Update);
      Slot_Update.ShowMembers(R__insp, strcat(R__parent,"Slot_Update.")); R__parent[R__ncp] = 0;
      TDSPOperator::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPSignalDump_IsA(const void *obj) {
      return ((::TDSPSignalDump*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPSignalDump(void *p) {
      return  p ? new(p) ::TDSPSignalDump : new ::TDSPSignalDump;
   }
   static void *newArray_TDSPSignalDump(Long_t size) {
      return new ::TDSPSignalDump[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPSignalDump(void *p) {
      delete ((::TDSPSignalDump*)p);
   }
   static void deleteArray_TDSPSignalDump(void *p) {
      delete [] ((::TDSPSignalDump*)p);
   }
   static void destruct_TDSPSignalDump(void *p) {
      typedef ::TDSPSignalDump current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPSignalDump

//______________________________________________________________________________
void TDSPSpectrum::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPSpectrum.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TDSPData::Streamer(R__b);
      R__b >> fMinAlloc;
      R__b >> fAllocHighScale;
      R__b >> fAllocLowScale;
      R__b.CheckByteCount(R__s, R__c, TDSPSpectrum::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPSpectrum::IsA(), kTRUE);
      TDSPData::Streamer(R__b);
      R__b << fMinAlloc;
      R__b << fAllocHighScale;
      R__b << fAllocLowScale;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPSpectrum::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPSpectrum.

      TClass *R__cl = TDSPSpectrum::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "Num", &Num);
      R__insp.Inspect(R__cl, R__parent, "*Frequencies", &Frequencies);
      R__insp.Inspect(R__cl, R__parent, "*Amplitudes", &Amplitudes);
      R__insp.Inspect(R__cl, R__parent, "fMinAlloc", &fMinAlloc);
      R__insp.Inspect(R__cl, R__parent, "fAllocHighScale", &fAllocHighScale);
      R__insp.Inspect(R__cl, R__parent, "fAllocLowScale", &fAllocLowScale);
      R__insp.Inspect(R__cl, R__parent, "fAllocedNum", &fAllocedNum);
      R__insp.Inspect(R__cl, R__parent, "*fAllocedFrequencies", &fAllocedFrequencies);
      R__insp.Inspect(R__cl, R__parent, "*fAllocedAmplitudes", &fAllocedAmplitudes);
      TDSPData::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPSpectrum_IsA(const void *obj) {
      return ((::TDSPSpectrum*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPSpectrum(void *p) {
      return  p ? new(p) ::TDSPSpectrum : new ::TDSPSpectrum;
   }
   static void *newArray_TDSPSpectrum(Long_t size) {
      return new ::TDSPSpectrum[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPSpectrum(void *p) {
      delete ((::TDSPSpectrum*)p);
   }
   static void deleteArray_TDSPSpectrum(void *p) {
      delete [] ((::TDSPSpectrum*)p);
   }
   static void destruct_TDSPSpectrum(void *p) {
      typedef ::TDSPSpectrum current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPSpectrum

//______________________________________________________________________________
void TDSPStft::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPStft.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TDSPfft::Streamer(R__b);
      R__b >> fSTFT_Signal;
      R__b >> fISTFT_Signal;
      R__b >> fWindow;
      R__b >> fDualWindow;
      R__b >> fMulti;
      R__b >> fBlockLen;
      R__b.CheckByteCount(R__s, R__c, TDSPStft::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPStft::IsA(), kTRUE);
      TDSPfft::Streamer(R__b);
      R__b << fSTFT_Signal;
      R__b << fISTFT_Signal;
      R__b << fWindow;
      R__b << fDualWindow;
      R__b << fMulti;
      R__b << fBlockLen;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPStft::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPStft.

      TClass *R__cl = TDSPStft::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fSTFT_Signal", &fSTFT_Signal);
      R__insp.Inspect(R__cl, R__parent, "*fISTFT_Signal", &fISTFT_Signal);
      R__insp.Inspect(R__cl, R__parent, "*fWindow", &fWindow);
      R__insp.Inspect(R__cl, R__parent, "*fDualWindow", &fDualWindow);
      R__insp.Inspect(R__cl, R__parent, "fMulti", &fMulti);
      R__insp.Inspect(R__cl, R__parent, "fBlockLen", &fBlockLen);
      TDSPfft::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPStft_IsA(const void *obj) {
      return ((::TDSPStft*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TDSPStft(void *p) {
      delete ((::TDSPStft*)p);
   }
   static void deleteArray_TDSPStft(void *p) {
      delete [] ((::TDSPStft*)p);
   }
   static void destruct_TDSPStft(void *p) {
      typedef ::TDSPStft current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPStft

//______________________________________________________________________________
void TDSPStochasticSignal::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPStochasticSignal.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TDSPSignal::Streamer(R__b);
      TDSPStochasticProcess::Streamer(R__b);
      R__b >> fARMAInput;
      R__b >> fFifoFilter;
      R__b >> fAllocedNumMeans;
      R__b >> fRepresentation;
      R__b >> fVecChanged;
      R__b.CheckByteCount(R__s, R__c, TDSPStochasticSignal::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPStochasticSignal::IsA(), kTRUE);
      TDSPSignal::Streamer(R__b);
      TDSPStochasticProcess::Streamer(R__b);
      R__b << fARMAInput;
      R__b << fFifoFilter;
      R__b << fAllocedNumMeans;
      R__b << fRepresentation;
      R__b << fVecChanged;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPStochasticSignal::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPStochasticSignal.

      TClass *R__cl = TDSPStochasticSignal::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fARMAInput", &fARMAInput);
      R__insp.Inspect(R__cl, R__parent, "*fFifoFilter", &fFifoFilter);
      R__insp.Inspect(R__cl, R__parent, "fAllocedNumMeans", &fAllocedNumMeans);
      R__insp.Inspect(R__cl, R__parent, "fRepresentation", &fRepresentation);
      R__insp.Inspect(R__cl, R__parent, "fVecChanged", &fVecChanged);
      TDSPSignal::ShowMembers(R__insp, R__parent);
      TDSPStochasticProcess::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPStochasticSignal_IsA(const void *obj) {
      return ((::TDSPStochasticSignal*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPStochasticSignal(void *p) {
      return  p ? new(p) ::TDSPStochasticSignal : new ::TDSPStochasticSignal;
   }
   static void *newArray_TDSPStochasticSignal(Long_t size) {
      return new ::TDSPStochasticSignal[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPStochasticSignal(void *p) {
      delete ((::TDSPStochasticSignal*)p);
   }
   static void deleteArray_TDSPStochasticSignal(void *p) {
      delete [] ((::TDSPStochasticSignal*)p);
   }
   static void destruct_TDSPStochasticSignal(void *p) {
      typedef ::TDSPStochasticSignal current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPStochasticSignal

//______________________________________________________________________________
void TDSPSymbolGenerator::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPSymbolGenerator.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TDSPOutput1::Streamer(R__b);
      R__b >> fAnalysed;
      R__b >> fDumpOptions;
      R__b >> fOptions;
      R__b >> fAnalyseGrid;
      R__b >> fNumAnalysed;
      R__b >> fNumSymbols;
      fGlobalCorrection.Streamer(R__b);
      fCorrection.Streamer(R__b);
      R__b >> fCorrectionTrackingInterval;
      R__b >> fCorrectionTrackingIndex;
      R__b >> fReferenceSignal;
      Slot_Generate.Streamer(R__b);
      Slot_Update.Streamer(R__b);
      Slot_ReferenceUpdate.Streamer(R__b);
      R__b >> fMinDistance;
      R__b >> fMeanDistance;
      R__b >> fVarianceDistance;
      R__b >> fQWeightedDistance;
      R__b >> fQWeightedVarianceDistance;
      R__b >> _recalc_distances;
      R__b >> fMisIdentified;
      R__b >> fInEfficiency;
      R__b >> fdInEfficiency;
      R__b >> fNoisePower;
      R__b >> fSignalPower;
      R__b >> fReceivedPower;
      fAttentuation.Streamer(R__b);
      R__b >> fSINR;
      R__b >> fLogSER;
      R__b >> fdLogSER;
      R__b.CheckByteCount(R__s, R__c, TDSPSymbolGenerator::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPSymbolGenerator::IsA(), kTRUE);
      TDSPOutput1::Streamer(R__b);
      R__b << fAnalysed;
      R__b << fDumpOptions;
      R__b << fOptions;
      R__b << fAnalyseGrid;
      R__b << fNumAnalysed;
      R__b << fNumSymbols;
      fGlobalCorrection.Streamer(R__b);
      fCorrection.Streamer(R__b);
      R__b << fCorrectionTrackingInterval;
      R__b << fCorrectionTrackingIndex;
      R__b << fReferenceSignal;
      Slot_Generate.Streamer(R__b);
      Slot_Update.Streamer(R__b);
      Slot_ReferenceUpdate.Streamer(R__b);
      R__b << fMinDistance;
      R__b << fMeanDistance;
      R__b << fVarianceDistance;
      R__b << fQWeightedDistance;
      R__b << fQWeightedVarianceDistance;
      R__b << _recalc_distances;
      R__b << fMisIdentified;
      R__b << fInEfficiency;
      R__b << fdInEfficiency;
      R__b << fNoisePower;
      R__b << fSignalPower;
      R__b << fReceivedPower;
      fAttentuation.Streamer(R__b);
      R__b << fSINR;
      R__b << fLogSER;
      R__b << fdLogSER;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPSymbolGenerator::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPSymbolGenerator.

      TClass *R__cl = TDSPSymbolGenerator::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fAnalysed", &fAnalysed);
      R__insp.Inspect(R__cl, R__parent, "fDumpOptions", &fDumpOptions);
      R__insp.Inspect(R__cl, R__parent, "fOptions", &fOptions);
      R__insp.Inspect(R__cl, R__parent, "fAnalyseGrid", &fAnalyseGrid);
      R__insp.Inspect(R__cl, R__parent, "fNumAnalysed", &fNumAnalysed);
      R__insp.Inspect(R__cl, R__parent, "fNumSymbols", &fNumSymbols);
      R__insp.Inspect(R__cl, R__parent, "*fProbs", &fProbs);
      R__insp.Inspect(R__cl, R__parent, "*fDetectSigmas", &fDetectSigmas);
      R__insp.Inspect(R__cl, R__parent, "*fDecisionSignal", &fDecisionSignal);
      R__insp.Inspect(R__cl, R__parent, "fNumISymbols", &fNumISymbols);
      R__insp.Inspect(R__cl, R__parent, "fNumISymbolsAlloc", &fNumISymbolsAlloc);
      R__insp.Inspect(R__cl, R__parent, "*fISymbols", &fISymbols);
      R__insp.Inspect(R__cl, R__parent, "*fDetectProbs", &fDetectProbs);
      R__insp.Inspect(R__cl, R__parent, "fGlobalCorrection", &fGlobalCorrection);
      fGlobalCorrection.ShowMembers(R__insp, strcat(R__parent,"fGlobalCorrection.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fCorrection", &fCorrection);
      fCorrection.ShowMembers(R__insp, strcat(R__parent,"fCorrection.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fCorrectionTrackingInterval", &fCorrectionTrackingInterval);
      R__insp.Inspect(R__cl, R__parent, "fCorrectionTrackingIndex", &fCorrectionTrackingIndex);
      R__insp.Inspect(R__cl, R__parent, "*fReferenceSignal", &fReferenceSignal);
      R__insp.Inspect(R__cl, R__parent, "Slot_Generate", &Slot_Generate);
      Slot_Generate.ShowMembers(R__insp, strcat(R__parent,"Slot_Generate.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "Slot_Update", &Slot_Update);
      Slot_Update.ShowMembers(R__insp, strcat(R__parent,"Slot_Update.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "Slot_ReferenceUpdate", &Slot_ReferenceUpdate);
      Slot_ReferenceUpdate.ShowMembers(R__insp, strcat(R__parent,"Slot_ReferenceUpdate.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fMinDistance", &fMinDistance);
      R__insp.Inspect(R__cl, R__parent, "fMeanDistance", &fMeanDistance);
      R__insp.Inspect(R__cl, R__parent, "fVarianceDistance", &fVarianceDistance);
      R__insp.Inspect(R__cl, R__parent, "fQWeightedDistance", &fQWeightedDistance);
      R__insp.Inspect(R__cl, R__parent, "fQWeightedVarianceDistance", &fQWeightedVarianceDistance);
      R__insp.Inspect(R__cl, R__parent, "_recalc_distances", &_recalc_distances);
      R__insp.Inspect(R__cl, R__parent, "*fSymbols", &fSymbols);
      R__insp.Inspect(R__cl, R__parent, "*fYields", &fYields);
      R__insp.Inspect(R__cl, R__parent, "fMisIdentified", &fMisIdentified);
      R__insp.Inspect(R__cl, R__parent, "fInEfficiency", &fInEfficiency);
      R__insp.Inspect(R__cl, R__parent, "fdInEfficiency", &fdInEfficiency);
      R__insp.Inspect(R__cl, R__parent, "fNoisePower", &fNoisePower);
      R__insp.Inspect(R__cl, R__parent, "fSignalPower", &fSignalPower);
      R__insp.Inspect(R__cl, R__parent, "fReceivedPower", &fReceivedPower);
      R__insp.Inspect(R__cl, R__parent, "fAttentuation", &fAttentuation);
      fAttentuation.ShowMembers(R__insp, strcat(R__parent,"fAttentuation.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSINR", &fSINR);
      R__insp.Inspect(R__cl, R__parent, "fLogSER", &fLogSER);
      R__insp.Inspect(R__cl, R__parent, "fdLogSER", &fdLogSER);
      TDSPOutput1::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPSymbolGenerator_IsA(const void *obj) {
      return ((::TDSPSymbolGenerator*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TDSPSymbolGenerator(void *p) {
      delete ((::TDSPSymbolGenerator*)p);
   }
   static void deleteArray_TDSPSymbolGenerator(void *p) {
      delete [] ((::TDSPSymbolGenerator*)p);
   }
   static void destruct_TDSPSymbolGenerator(void *p) {
      typedef ::TDSPSymbolGenerator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPSymbolGenerator

//______________________________________________________________________________
void TDSPfft::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPfft.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TDSPOperator::Streamer(R__b);
      R__b >> fDim;
      R__b >> fOverSampling;
      R__b >> fCyclicPrefix;
      R__b >> fFFT_Signal;
      R__b >> fIFFT_Signal;
      Slot_FFT.Streamer(R__b);
      Slot_IFFT.Streamer(R__b);
      Signal_FFT.Streamer(R__b);
      Signal_IFFT.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, TDSPfft::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPfft::IsA(), kTRUE);
      TDSPOperator::Streamer(R__b);
      R__b << fDim;
      R__b << fOverSampling;
      R__b << fCyclicPrefix;
      R__b << fFFT_Signal;
      R__b << fIFFT_Signal;
      Slot_FFT.Streamer(R__b);
      Slot_IFFT.Streamer(R__b);
      Signal_FFT.Streamer(R__b);
      Signal_IFFT.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPfft::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPfft.

      TClass *R__cl = TDSPfft::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fDim", &fDim);
      R__insp.Inspect(R__cl, R__parent, "fOverSampling", &fOverSampling);
      R__insp.Inspect(R__cl, R__parent, "fCyclicPrefix", &fCyclicPrefix);
      R__insp.Inspect(R__cl, R__parent, "*fFFT_Signal", &fFFT_Signal);
      R__insp.Inspect(R__cl, R__parent, "*fIFFT_Signal", &fIFFT_Signal);
      R__insp.Inspect(R__cl, R__parent, "*fftw_vec", &fftw_vec);
      R__insp.Inspect(R__cl, R__parent, "*fftw_plan_forward", &fftw_plan_forward);
      R__insp.Inspect(R__cl, R__parent, "*fftw_plan_backward", &fftw_plan_backward);
      R__insp.Inspect(R__cl, R__parent, "Slot_FFT", &Slot_FFT);
      Slot_FFT.ShowMembers(R__insp, strcat(R__parent,"Slot_FFT.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "Slot_IFFT", &Slot_IFFT);
      Slot_IFFT.ShowMembers(R__insp, strcat(R__parent,"Slot_IFFT.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "Signal_FFT", &Signal_FFT);
      Signal_FFT.ShowMembers(R__insp, strcat(R__parent,"Signal_FFT.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "Signal_IFFT", &Signal_IFFT);
      Signal_IFFT.ShowMembers(R__insp, strcat(R__parent,"Signal_IFFT.")); R__parent[R__ncp] = 0;
      TDSPOperator::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPfft_IsA(const void *obj) {
      return ((::TDSPfft*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPfft(void *p) {
      return  p ? new(p) ::TDSPfft : new ::TDSPfft;
   }
   static void *newArray_TDSPfft(Long_t size) {
      return new ::TDSPfft[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPfft(void *p) {
      delete ((::TDSPfft*)p);
   }
   static void deleteArray_TDSPfft(void *p) {
      delete [] ((::TDSPfft*)p);
   }
   static void destruct_TDSPfft(void *p) {
      typedef ::TDSPfft current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPfft

//______________________________________________________________________________
void TDSPJakes::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPJakes.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TDSPCorrelationFilter::Streamer(R__b);
      TDSPFilter::Streamer(R__b);
      TDSPRating::Streamer(R__b);
      R__b >> fSpeed;
      R__b >> fDopplerFrequency;
      R__b >> fCarrierFrequency;
      R__b.CheckByteCount(R__s, R__c, TDSPJakes::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPJakes::IsA(), kTRUE);
      TDSPCorrelationFilter::Streamer(R__b);
      TDSPFilter::Streamer(R__b);
      TDSPRating::Streamer(R__b);
      R__b << fSpeed;
      R__b << fDopplerFrequency;
      R__b << fCarrierFrequency;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPJakes::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPJakes.

      TClass *R__cl = TDSPJakes::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fSpeed", &fSpeed);
      R__insp.Inspect(R__cl, R__parent, "fDopplerFrequency", &fDopplerFrequency);
      R__insp.Inspect(R__cl, R__parent, "fCarrierFrequency", &fCarrierFrequency);
      TDSPCorrelationFilter::ShowMembers(R__insp, R__parent);
      TDSPFilter::ShowMembers(R__insp, R__parent);
      TDSPRating::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPJakes_IsA(const void *obj) {
      return ((::TDSPJakes*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPJakes(void *p) {
      return  p ? ::new((ROOT::TOperatorNewHelper*)p) ::TDSPJakes : new ::TDSPJakes;
   }
   static void *newArray_TDSPJakes(Long_t size) {
      return new ::TDSPJakes[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPJakes(void *p) {
      delete ((::TDSPJakes*)p);
   }
   static void deleteArray_TDSPJakes(void *p) {
      delete [] ((::TDSPJakes*)p);
   }
   static void destruct_TDSPJakes(void *p) {
      typedef ::TDSPJakes current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPJakes

//______________________________________________________________________________
void TDSPCorrelationFilter::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPCorrelationFilter.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TDSPFilter::Streamer(R__b);
      TDSPRating::Streamer(R__b);
      R__b >> (Int_t&)fMethod;
      R__b >> fAR;
      R__b >> fMA;
      R__b >> fCorrelation;
      R__b >> fOptions;
      R__b.CheckByteCount(R__s, R__c, TDSPCorrelationFilter::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPCorrelationFilter::IsA(), kTRUE);
      TDSPFilter::Streamer(R__b);
      TDSPRating::Streamer(R__b);
      R__b << (Int_t)fMethod;
      R__b << fAR;
      R__b << fMA;
      R__b << fCorrelation;
      R__b << fOptions;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPCorrelationFilter::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPCorrelationFilter.

      TClass *R__cl = TDSPCorrelationFilter::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fMethod", &fMethod);
      R__insp.Inspect(R__cl, R__parent, "fAR", &fAR);
      R__insp.Inspect(R__cl, R__parent, "fMA", &fMA);
      R__insp.Inspect(R__cl, R__parent, "*fCorrelation", &fCorrelation);
      R__insp.Inspect(R__cl, R__parent, "fOptions", &fOptions);
      TDSPFilter::ShowMembers(R__insp, R__parent);
      TDSPRating::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPCorrelationFilter_IsA(const void *obj) {
      return ((::TDSPCorrelationFilter*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPCorrelationFilter(void *p) {
      return  p ? ::new((ROOT::TOperatorNewHelper*)p) ::TDSPCorrelationFilter : new ::TDSPCorrelationFilter;
   }
   static void *newArray_TDSPCorrelationFilter(Long_t size) {
      return new ::TDSPCorrelationFilter[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPCorrelationFilter(void *p) {
      delete ((::TDSPCorrelationFilter*)p);
   }
   static void deleteArray_TDSPCorrelationFilter(void *p) {
      delete [] ((::TDSPCorrelationFilter*)p);
   }
   static void destruct_TDSPCorrelationFilter(void *p) {
      typedef ::TDSPCorrelationFilter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPCorrelationFilter

//______________________________________________________________________________
void TDSPFilter::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPFilter.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TDSPRating::Streamer(R__b);
      R__b >> fNorm;
      R__b >> fNormalized;
      R__b >> fFIR;
      R__b >> fIIR;
      R__b.CheckByteCount(R__s, R__c, TDSPFilter::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPFilter::IsA(), kTRUE);
      TDSPRating::Streamer(R__b);
      R__b << fNorm;
      R__b << fNormalized;
      R__b << fFIR;
      R__b << fIIR;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPFilter::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPFilter.

      TClass *R__cl = TDSPFilter::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fNorm", &fNorm);
      R__insp.Inspect(R__cl, R__parent, "fNormalized", &fNormalized);
      R__insp.Inspect(R__cl, R__parent, "*fFIR", &fFIR);
      R__insp.Inspect(R__cl, R__parent, "*fIIR", &fIIR);
      TDSPRating::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPFilter_IsA(const void *obj) {
      return ((::TDSPFilter*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPFilter(void *p) {
      return  p ? ::new((ROOT::TOperatorNewHelper*)p) ::TDSPFilter : new ::TDSPFilter;
   }
   static void *newArray_TDSPFilter(Long_t size) {
      return new ::TDSPFilter[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPFilter(void *p) {
      delete ((::TDSPFilter*)p);
   }
   static void deleteArray_TDSPFilter(void *p) {
      delete [] ((::TDSPFilter*)p);
   }
   static void destruct_TDSPFilter(void *p) {
      typedef ::TDSPFilter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPFilter

//______________________________________________________________________________
void TDSPFifo::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPFifo.

   ::Error("TDSPFifo::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void TDSPFifo::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPFifo.

      TClass *R__cl = TDSPFifo::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fDepth", &fDepth);
      R__insp.Inspect(R__cl, R__parent, "fIndex", &fIndex);
      R__insp.Inspect(R__cl, R__parent, "fFill", &fFill);
      R__insp.Inspect(R__cl, R__parent, "*fBlock", &fBlock);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPFifo_IsA(const void *obj) {
      return ((::TDSPFifo*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPFifo(void *p) {
      return  p ? ::new((ROOT::TOperatorNewHelper*)p) ::TDSPFifo : new ::TDSPFifo;
   }
   static void *newArray_TDSPFifo(Long_t size) {
      return new ::TDSPFifo[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPFifo(void *p) {
      delete ((::TDSPFifo*)p);
   }
   static void deleteArray_TDSPFifo(void *p) {
      delete [] ((::TDSPFifo*)p);
   }
   static void destruct_TDSPFifo(void *p) {
      typedef ::TDSPFifo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPFifo

//______________________________________________________________________________
void TDSPBlockFifo::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPBlockFifo.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TDSPOutput1::Streamer(R__b);
      TDSPFifo::Streamer(R__b);
      R__b >> fWidth;
      R__b.CheckByteCount(R__s, R__c, TDSPBlockFifo::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPBlockFifo::IsA(), kTRUE);
      TDSPOutput1::Streamer(R__b);
      TDSPFifo::Streamer(R__b);
      R__b << fWidth;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPBlockFifo::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPBlockFifo.

      TClass *R__cl = TDSPBlockFifo::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fWidth", &fWidth);
      TDSPOutput1::ShowMembers(R__insp, R__parent);
      TDSPFifo::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPBlockFifo_IsA(const void *obj) {
      return ((::TDSPBlockFifo*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPBlockFifo(void *p) {
      return  p ? new(p) ::TDSPBlockFifo : new ::TDSPBlockFifo;
   }
   static void *newArray_TDSPBlockFifo(Long_t size) {
      return new ::TDSPBlockFifo[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPBlockFifo(void *p) {
      delete ((::TDSPBlockFifo*)p);
   }
   static void deleteArray_TDSPBlockFifo(void *p) {
      delete [] ((::TDSPBlockFifo*)p);
   }
   static void destruct_TDSPBlockFifo(void *p) {
      typedef ::TDSPBlockFifo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPBlockFifo

//______________________________________________________________________________
void TDSPBlockFifoFilter::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPBlockFifoFilter.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> fFilter;
      R__b >> fWidth;
      R__b >> fInput;
      R__b >> fOutput;
      R__b.CheckByteCount(R__s, R__c, TDSPBlockFifoFilter::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPBlockFifoFilter::IsA(), kTRUE);
      R__b << fFilter;
      R__b << fWidth;
      R__b << fInput;
      R__b << fOutput;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPBlockFifoFilter::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPBlockFifoFilter.

      TClass *R__cl = TDSPBlockFifoFilter::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fFilter", &fFilter);
      R__insp.Inspect(R__cl, R__parent, "fWidth", &fWidth);
      R__insp.Inspect(R__cl, R__parent, "*fInput", &fInput);
      R__insp.Inspect(R__cl, R__parent, "*fOutput", &fOutput);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPBlockFifoFilter_IsA(const void *obj) {
      return ((::TDSPBlockFifoFilter*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPBlockFifoFilter(void *p) {
      return  p ? ::new((ROOT::TOperatorNewHelper*)p) ::TDSPBlockFifoFilter : new ::TDSPBlockFifoFilter;
   }
   static void *newArray_TDSPBlockFifoFilter(Long_t size) {
      return new ::TDSPBlockFifoFilter[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPBlockFifoFilter(void *p) {
      delete ((::TDSPBlockFifoFilter*)p);
   }
   static void deleteArray_TDSPBlockFifoFilter(void *p) {
      delete [] ((::TDSPBlockFifoFilter*)p);
   }
   static void destruct_TDSPBlockFifoFilter(void *p) {
      typedef ::TDSPBlockFifoFilter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPBlockFifoFilter

//______________________________________________________________________________
void TDSPFilterBank::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPFilterBank.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      TDSPRating::Streamer(R__b);
      R__b >> fZero;
      R__b >> fNumActive;
      R__b >> fOpt;
      R__b >> fFilterBank;
      fSubSamplings.Streamer(R__b);
      R__b >> fMinSubSampling;
      R__b >> fMaxSubSampling;
      fFilterOptions.Streamer(R__b);
      fMethodStr.Streamer(R__b);
      R__b >> fFreqPad;
      R__b.CheckByteCount(R__s, R__c, TDSPFilterBank::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPFilterBank::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      TDSPRating::Streamer(R__b);
      R__b << fZero;
      R__b << fNumActive;
      R__b << fOpt;
      R__b << fFilterBank;
      fSubSamplings.Streamer(R__b);
      R__b << fMinSubSampling;
      R__b << fMaxSubSampling;
      fFilterOptions.Streamer(R__b);
      fMethodStr.Streamer(R__b);
      R__b << fFreqPad;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPFilterBank::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPFilterBank.

      TClass *R__cl = TDSPFilterBank::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fZero", &fZero);
      R__insp.Inspect(R__cl, R__parent, "fNumActive", &fNumActive);
      R__insp.Inspect(R__cl, R__parent, "fOpt", &fOpt);
      R__insp.Inspect(R__cl, R__parent, "*fFilterBank", &fFilterBank);
      R__insp.Inspect(R__cl, R__parent, "fSubSamplings", &fSubSamplings);
      fSubSamplings.ShowMembers(R__insp, strcat(R__parent,"fSubSamplings.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fMinSubSampling", &fMinSubSampling);
      R__insp.Inspect(R__cl, R__parent, "fMaxSubSampling", &fMaxSubSampling);
      R__insp.Inspect(R__cl, R__parent, "fFilterOptions", &fFilterOptions);
      fFilterOptions.ShowMembers(R__insp, strcat(R__parent,"fFilterOptions.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fMethodStr", &fMethodStr);
      fMethodStr.ShowMembers(R__insp, strcat(R__parent,"fMethodStr.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fFreqPad", &fFreqPad);
      TNamed::ShowMembers(R__insp, R__parent);
      TDSPRating::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPFilterBank_IsA(const void *obj) {
      return ((::TDSPFilterBank*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPFilterBank(void *p) {
      return  p ? new(p) ::TDSPFilterBank : new ::TDSPFilterBank;
   }
   static void *newArray_TDSPFilterBank(Long_t size) {
      return new ::TDSPFilterBank[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPFilterBank(void *p) {
      delete ((::TDSPFilterBank*)p);
   }
   static void deleteArray_TDSPFilterBank(void *p) {
      delete [] ((::TDSPFilterBank*)p);
   }
   static void destruct_TDSPFilterBank(void *p) {
      typedef ::TDSPFilterBank current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPFilterBank

//______________________________________________________________________________
void TDSPFifoFilter::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPFifoFilter.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> fFilter;
      R__b >> fInput;
      R__b >> fOutput;
      R__b.CheckByteCount(R__s, R__c, TDSPFifoFilter::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPFifoFilter::IsA(), kTRUE);
      R__b << fFilter;
      R__b << fInput;
      R__b << fOutput;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPFifoFilter::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPFifoFilter.

      TClass *R__cl = TDSPFifoFilter::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fFilter", &fFilter);
      R__insp.Inspect(R__cl, R__parent, "*fInput", &fInput);
      R__insp.Inspect(R__cl, R__parent, "*fOutput", &fOutput);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPFifoFilter_IsA(const void *obj) {
      return ((::TDSPFifoFilter*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPFifoFilter(void *p) {
      return  p ? ::new((ROOT::TOperatorNewHelper*)p) ::TDSPFifoFilter : new ::TDSPFifoFilter;
   }
   static void *newArray_TDSPFifoFilter(Long_t size) {
      return new ::TDSPFifoFilter[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPFifoFilter(void *p) {
      delete ((::TDSPFifoFilter*)p);
   }
   static void deleteArray_TDSPFifoFilter(void *p) {
      delete [] ((::TDSPFifoFilter*)p);
   }
   static void destruct_TDSPFifoFilter(void *p) {
      typedef ::TDSPFifoFilter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPFifoFilter

//______________________________________________________________________________
void TDSPFunction::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPFunction.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TDSPOutput1::Streamer(R__b);
      R__b >> fInputSamplingRate;
      R__b.CheckByteCount(R__s, R__c, TDSPFunction::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPFunction::IsA(), kTRUE);
      TDSPOutput1::Streamer(R__b);
      R__b << fInputSamplingRate;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPFunction::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPFunction.

      TClass *R__cl = TDSPFunction::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fInputSamplingRate", &fInputSamplingRate);
      TDSPOutput1::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPFunction_IsA(const void *obj) {
      return ((::TDSPFunction*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPFunction(void *p) {
      return  p ? new(p) ::TDSPFunction : new ::TDSPFunction;
   }
   static void *newArray_TDSPFunction(Long_t size) {
      return new ::TDSPFunction[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPFunction(void *p) {
      delete ((::TDSPFunction*)p);
   }
   static void deleteArray_TDSPFunction(void *p) {
      delete [] ((::TDSPFunction*)p);
   }
   static void destruct_TDSPFunction(void *p) {
      typedef ::TDSPFunction current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPFunction

//______________________________________________________________________________
void TDSPClip::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPClip.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TDSPFunction::Streamer(R__b);
      R__b >> fClipAmplitude;
      R__b.CheckByteCount(R__s, R__c, TDSPClip::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPClip::IsA(), kTRUE);
      TDSPFunction::Streamer(R__b);
      R__b << fClipAmplitude;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPClip::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPClip.

      TClass *R__cl = TDSPClip::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fClipAmplitude", &fClipAmplitude);
      TDSPFunction::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPClip_IsA(const void *obj) {
      return ((::TDSPClip*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPClip(void *p) {
      return  p ? new(p) ::TDSPClip : new ::TDSPClip;
   }
   static void *newArray_TDSPClip(Long_t size) {
      return new ::TDSPClip[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPClip(void *p) {
      delete ((::TDSPClip*)p);
   }
   static void deleteArray_TDSPClip(void *p) {
      delete [] ((::TDSPClip*)p);
   }
   static void destruct_TDSPClip(void *p) {
      typedef ::TDSPClip current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPClip

//______________________________________________________________________________
void TDSPMath::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPMath.

   ::Error("TDSPMath::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void TDSPMath::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPMath.

      TClass *R__cl = TDSPMath::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPMath_IsA(const void *obj) {
      return ((::TDSPMath*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPMath(void *p) {
      return  p ? ::new((ROOT::TOperatorNewHelper*)p) ::TDSPMath : new ::TDSPMath;
   }
   static void *newArray_TDSPMath(Long_t size) {
      return new ::TDSPMath[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPMath(void *p) {
      delete ((::TDSPMath*)p);
   }
   static void deleteArray_TDSPMath(void *p) {
      delete [] ((::TDSPMath*)p);
   }
   static void destruct_TDSPMath(void *p) {
      typedef ::TDSPMath current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPMath

//______________________________________________________________________________
void TDSPModulation::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPModulation.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TDSPOutput1::Streamer(R__b);
      TDSPBlockOperation::Streamer(R__b);
      R__b >> fBlockLen;
      fFrequency.Streamer(R__b);
      R__b >> fPhase;
      R__b >> fBurstOff;
      R__b.CheckByteCount(R__s, R__c, TDSPModulation::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPModulation::IsA(), kTRUE);
      TDSPOutput1::Streamer(R__b);
      TDSPBlockOperation::Streamer(R__b);
      R__b << fBlockLen;
      fFrequency.Streamer(R__b);
      R__b << fPhase;
      R__b << fBurstOff;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPModulation::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPModulation.

      TClass *R__cl = TDSPModulation::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fBlockLen", &fBlockLen);
      R__insp.Inspect(R__cl, R__parent, "fFrequency", &fFrequency);
      fFrequency.ShowMembers(R__insp, strcat(R__parent,"fFrequency.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fPhase", &fPhase);
      R__insp.Inspect(R__cl, R__parent, "fBurstOff", &fBurstOff);
      TDSPOutput1::ShowMembers(R__insp, R__parent);
      TDSPBlockOperation::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPModulation_IsA(const void *obj) {
      return ((::TDSPModulation*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPModulation(void *p) {
      return  p ? new(p) ::TDSPModulation : new ::TDSPModulation;
   }
   static void *newArray_TDSPModulation(Long_t size) {
      return new ::TDSPModulation[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPModulation(void *p) {
      delete ((::TDSPModulation*)p);
   }
   static void deleteArray_TDSPModulation(void *p) {
      delete [] ((::TDSPModulation*)p);
   }
   static void destruct_TDSPModulation(void *p) {
      typedef ::TDSPModulation current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPModulation

//______________________________________________________________________________
void TDSPWienerProcess::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPWienerProcess.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TDSPOutput1::Streamer(R__b);
      R__b >> fVariance;
      R__b >> fBurstlen;
      R__b >> fBurstOff;
      R__b >> fPhase;
      R__b.CheckByteCount(R__s, R__c, TDSPWienerProcess::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPWienerProcess::IsA(), kTRUE);
      TDSPOutput1::Streamer(R__b);
      R__b << fVariance;
      R__b << fBurstlen;
      R__b << fBurstOff;
      R__b << fPhase;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPWienerProcess::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPWienerProcess.

      TClass *R__cl = TDSPWienerProcess::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fVariance", &fVariance);
      R__insp.Inspect(R__cl, R__parent, "fBurstlen", &fBurstlen);
      R__insp.Inspect(R__cl, R__parent, "fBurstOff", &fBurstOff);
      R__insp.Inspect(R__cl, R__parent, "fPhase", &fPhase);
      TDSPOutput1::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPWienerProcess_IsA(const void *obj) {
      return ((::TDSPWienerProcess*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPWienerProcess(void *p) {
      return  p ? new(p) ::TDSPWienerProcess : new ::TDSPWienerProcess;
   }
   static void *newArray_TDSPWienerProcess(Long_t size) {
      return new ::TDSPWienerProcess[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPWienerProcess(void *p) {
      delete ((::TDSPWienerProcess*)p);
   }
   static void deleteArray_TDSPWienerProcess(void *p) {
      delete [] ((::TDSPWienerProcess*)p);
   }
   static void destruct_TDSPWienerProcess(void *p) {
      typedef ::TDSPWienerProcess current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPWienerProcess

//______________________________________________________________________________
void TDSPEstimator::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPEstimator.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TQQObject::Streamer(R__b);
      R__b >> fEstimate;
      R__b.CheckByteCount(R__s, R__c, TDSPEstimator::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPEstimator::IsA(), kTRUE);
      TQQObject::Streamer(R__b);
      R__b << fEstimate;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPEstimator::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPEstimator.

      TClass *R__cl = TDSPEstimator::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fEstimate", &fEstimate);
      TQQObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPEstimator_IsA(const void *obj) {
      return ((::TDSPEstimator*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TDSPEstimator(void *p) {
      delete ((::TDSPEstimator*)p);
   }
   static void deleteArray_TDSPEstimator(void *p) {
      delete [] ((::TDSPEstimator*)p);
   }
   static void destruct_TDSPEstimator(void *p) {
      typedef ::TDSPEstimator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPEstimator

//______________________________________________________________________________
void TDSPLmmse::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPLmmse.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TDSPEstimator::Streamer(R__b);
      R__b >> fEstimatorMatrix;
      fNoiseScaler.Streamer(R__b);
      R__b >> fNoiseCovariance;
      R__b >> fXCovariance;
      R__b >> fH;
      R__b >> fHCxHStar;
      R__b >> fPost;
      R__b >> _recalc1;
      R__b >> _recalc2;
      R__b >> _my_x_matrix;
      R__b >> _my_noise_matrix;
      R__b.CheckByteCount(R__s, R__c, TDSPLmmse::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPLmmse::IsA(), kTRUE);
      TDSPEstimator::Streamer(R__b);
      R__b << fEstimatorMatrix;
      fNoiseScaler.Streamer(R__b);
      R__b << fNoiseCovariance;
      R__b << fXCovariance;
      R__b << fH;
      R__b << fHCxHStar;
      R__b << fPost;
      R__b << _recalc1;
      R__b << _recalc2;
      R__b << _my_x_matrix;
      R__b << _my_noise_matrix;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPLmmse::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPLmmse.

      TClass *R__cl = TDSPLmmse::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fEstimatorMatrix", &fEstimatorMatrix);
      R__insp.Inspect(R__cl, R__parent, "fNoiseScaler", &fNoiseScaler);
      fNoiseScaler.ShowMembers(R__insp, strcat(R__parent,"fNoiseScaler.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fNoiseCovariance", &fNoiseCovariance);
      R__insp.Inspect(R__cl, R__parent, "*fXCovariance", &fXCovariance);
      R__insp.Inspect(R__cl, R__parent, "*fH", &fH);
      R__insp.Inspect(R__cl, R__parent, "*fHCxHStar", &fHCxHStar);
      R__insp.Inspect(R__cl, R__parent, "*fPost", &fPost);
      R__insp.Inspect(R__cl, R__parent, "_recalc1", &_recalc1);
      R__insp.Inspect(R__cl, R__parent, "_recalc2", &_recalc2);
      R__insp.Inspect(R__cl, R__parent, "_my_x_matrix", &_my_x_matrix);
      R__insp.Inspect(R__cl, R__parent, "_my_noise_matrix", &_my_noise_matrix);
      TDSPEstimator::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPLmmse_IsA(const void *obj) {
      return ((::TDSPLmmse*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPLmmse(void *p) {
      return  p ? new(p) ::TDSPLmmse : new ::TDSPLmmse;
   }
   static void *newArray_TDSPLmmse(Long_t size) {
      return new ::TDSPLmmse[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPLmmse(void *p) {
      delete ((::TDSPLmmse*)p);
   }
   static void deleteArray_TDSPLmmse(void *p) {
      delete [] ((::TDSPLmmse*)p);
   }
   static void destruct_TDSPLmmse(void *p) {
      typedef ::TDSPLmmse current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPLmmse

//______________________________________________________________________________
void TDSPSource::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPSource.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, TDSPSource::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPSource::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPSource::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPSource.

      TClass *R__cl = TDSPSource::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fSender", &fSender);
      R__insp.Inspect(R__cl, R__parent, "*fSignal", &fSignal);
      TNamed::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPSource_IsA(const void *obj) {
      return ((::TDSPSource*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPSource(void *p) {
      return  p ? new(p) ::TDSPSource : new ::TDSPSource;
   }
   static void *newArray_TDSPSource(Long_t size) {
      return new ::TDSPSource[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPSource(void *p) {
      delete ((::TDSPSource*)p);
   }
   static void deleteArray_TDSPSource(void *p) {
      delete [] ((::TDSPSource*)p);
   }
   static void destruct_TDSPSource(void *p) {
      typedef ::TDSPSource current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPSource

//______________________________________________________________________________
void TDSPMonitor::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPMonitor.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TDSPOperator::Streamer(R__b);
      TDSPBlockOperation::Streamer(R__b);
      Slot_Update.Streamer(R__b);
      fSignalList.Streamer(R__b);
      R__b >> fBlockLen;
      fMSE.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, TDSPMonitor::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPMonitor::IsA(), kTRUE);
      TDSPOperator::Streamer(R__b);
      TDSPBlockOperation::Streamer(R__b);
      Slot_Update.Streamer(R__b);
      fSignalList.Streamer(R__b);
      R__b << fBlockLen;
      fMSE.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPMonitor::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPMonitor.

      TClass *R__cl = TDSPMonitor::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "Slot_Update", &Slot_Update);
      Slot_Update.ShowMembers(R__insp, strcat(R__parent,"Slot_Update.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSignalList", &fSignalList);
      fSignalList.ShowMembers(R__insp, strcat(R__parent,"fSignalList.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fBlockLen", &fBlockLen);
      R__insp.Inspect(R__cl, R__parent, "fMSE", &fMSE);
      fMSE.ShowMembers(R__insp, strcat(R__parent,"fMSE.")); R__parent[R__ncp] = 0;
      TDSPOperator::ShowMembers(R__insp, R__parent);
      TDSPBlockOperation::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPMonitor_IsA(const void *obj) {
      return ((::TDSPMonitor*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPMonitor(void *p) {
      return  p ? new(p) ::TDSPMonitor : new ::TDSPMonitor;
   }
   static void *newArray_TDSPMonitor(Long_t size) {
      return new ::TDSPMonitor[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPMonitor(void *p) {
      delete ((::TDSPMonitor*)p);
   }
   static void deleteArray_TDSPMonitor(void *p) {
      delete [] ((::TDSPMonitor*)p);
   }
   static void destruct_TDSPMonitor(void *p) {
      typedef ::TDSPMonitor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPMonitor

/********************************************************
* BaseDict.cpp
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtableBaseDict();

extern "C" void G__set_cpp_environmentBaseDict() {
  G__add_compiledheader("TROOT.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("TDSPOperator.h");
  G__add_compiledheader("TDSPGenerator.h");
  G__add_compiledheader("TDSPHarmonicGenerator.h");
  G__add_compiledheader("TDSPSpectrum.h");
  G__add_compiledheader("TDSPSignal.h");
  G__add_compiledheader("TDSPData.h");
  G__add_compiledheader("TDSPStochasticSignal.h");
  G__add_compiledheader("TDSPfft.h");
  G__add_compiledheader("TDSPGroup.h");
  G__add_compiledheader("TDSPConvolution.h");
  G__add_compiledheader("TDSPChop.h");
  G__add_compiledheader("TDSPBlockfft.h");
  G__add_compiledheader("TDSPBlockMap.h");
  G__add_compiledheader("TDSPSignalDump.h");
  G__add_compiledheader("TDSPReadSignal.h");
  G__add_compiledheader("TDSPPsk.h");
  G__add_compiledheader("TDSPOutput1.h");
  G__add_compiledheader("TDSPSignalStudy.h");
  G__add_compiledheader("TDSPQam.h");
  G__add_compiledheader("TDSPPam.h");
  G__add_compiledheader("TDSPSymbolGenerator.h");
  G__add_compiledheader("TDSPOfdm.h");
  G__add_compiledheader("TDSPStft.h");
  G__add_compiledheader("TDSPNofdm.h");
  G__add_compiledheader("TDSPInt.h");
  G__add_compiledheader("TDSPFilter.h");
  G__add_compiledheader("TDSPFifo.h");
  G__add_compiledheader("TDSPBlockFifo.h");
  G__add_compiledheader("TDSPFilterBank.h");
  G__add_compiledheader("TDSPBlockFifoFilter.h");
  G__add_compiledheader("TDSPCorrelationFilter.h");
  G__add_compiledheader("TDSPJakes.h");
  G__add_compiledheader("TDSPFifoFilter.h");
  G__add_compiledheader("TDSPFunction.h");
  G__add_compiledheader("TDSPClip.h");
  G__add_compiledheader("TDSPMath.h");
  G__add_compiledheader("TDSPStatistics.h");
  G__add_compiledheader("TDSPRating.h");
  G__add_compiledheader("TDSPBlockSolve.h");
  G__add_compiledheader("TDSPEstimator.h");
  G__add_compiledheader("TDSPLmmse.h");
  G__add_compiledheader("TDSPFastBpsk.h");
  G__add_compiledheader("TDSPFastQpsk.h");
  G__add_compiledheader("TDSPModulation.h");
  G__add_compiledheader("TDSPWienerProcess.h");
  G__add_compiledheader("TDSPMonitor.h");
  G__add_compiledheader("TDSPSource.h");
  G__add_compiledheader("TDSPFilterMap.h");
  G__add_compiledheader("TDSPFMT.h");
  G__add_compiledheader("TMaple.h");
  G__cpp_reset_tagtableBaseDict();
}
class G__BaseDictdOcpp_tag {};

void* operator new(size_t size,G__BaseDictdOcpp_tag* p) {
  if(p && G__PVOID!=G__getgvp()) return((void*)p);
#ifndef G__ROOT
  return(malloc(size));
#else
  return(::operator new(size));
#endif
}

/* dummy, for exception */
#ifdef G__EH_DUMMY_DELETE
void operator delete(void *p,G__BaseDictdOcpp_tag* x) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}
#endif

static void G__operator_delete(void *p) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}

void G__DELDMY_BaseDictdOcpp() { G__operator_delete(0); }

extern "C" int G__cpp_dllrevBaseDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TDSPData */
static int G__BaseDict_205_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPData *p=NULL;
   if(G__getaryconstruct()) p=new TDSPData[G__getaryconstruct()];
   else                    p=new TDSPData;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPData);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_205_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_205_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_205_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_205_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPData::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_205_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPData*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_205_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPData*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_205_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPData*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_205_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPData*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_205_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_205_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_205_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_205_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_205_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPData *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPData(*(TDSPData*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPData);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPData G__TTDSPData;
static int G__BaseDict_205_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPData *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPData *)((G__getstructoffset())+sizeof(TDSPData)*i);
   else  delete (TDSPData *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPSignal */
static int G__BaseDict_255_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPSignal *p=NULL;
   switch(libp->paran) {
   case 1:
      p = new TDSPSignal((Int_t)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TDSPSignal[G__getaryconstruct()];
   else                    p=new TDSPSignal;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_255_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPSignal *p=NULL;
      p = new TDSPSignal((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_255_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPSignal *p=NULL;
      p = new TDSPSignal((char*)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_255_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSignal*)(G__getstructoffset()))->SetName((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_255_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSignal*)(G__getstructoffset()))->SetNameTitle((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_255_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TDSPSignal*)(G__getstructoffset()))->SetTitle((const char*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TDSPSignal*)(G__getstructoffset()))->SetTitle();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_255_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TDSPSignal*)(G__getstructoffset()))->ls((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TDSPSignal*)(G__getstructoffset()))->ls();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_255_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TDSPSignal*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TDSPSignal*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_255_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TDSPSignal*)(G__getstructoffset()))->GetName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_255_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TDSPSignal*)(G__getstructoffset()))->GetTitle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_255_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TDSPSignal& obj=((TDSPSignal*)(G__getstructoffset()))->operator=(*(TDSPFifo*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_255_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TDSPSignal& obj=((TDSPSignal*)(G__getstructoffset()))->operator=((TDSPFifo*)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_255_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPSignal::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_255_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPSignal::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_255_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPSignal::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_255_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPSignal::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_255_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPSignal*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_255_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSignal*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_255_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSignal*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_255_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSignal*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_255_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPSignal::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_255_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPSignal::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_255_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPSignal::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_255_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPSignal::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_255_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPSignal *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPSignal(*(TDSPSignal*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPSignal G__TTDSPSignal;
static int G__BaseDict_255_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPSignal *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPSignal *)((G__getstructoffset())+sizeof(TDSPSignal)*i);
   else  delete (TDSPSignal *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPFifo */
static int G__BaseDict_256_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPFifo *p=NULL;
   switch(libp->paran) {
   case 1:
      p = ::new((G__BaseDictdOcpp_tag*)G__getgvp()) TDSPFifo((Int_t)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TDSPFifo[G__getaryconstruct()];
   else p=::new((G__BaseDictdOcpp_tag*)G__getgvp()) TDSPFifo;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPFifo);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPFifo::ValuesPerLine((UInt_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TDSPFifo*)(G__getstructoffset()))->GetIndex((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDSPFifo*)(G__getstructoffset()))->GetDepth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDSPFifo*)(G__getstructoffset()))->GetFill());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPFifo*)(G__getstructoffset()))->GetBlock());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDSPFifo*)(G__getstructoffset()))->WasFull());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDSPFifo*)(G__getstructoffset()))->IsFull());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFifo*)(G__getstructoffset()))->Reset();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TComplex& obj=((TDSPFifo*)(G__getstructoffset()))->operator()();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TComplex& obj=((TDSPFifo*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TComplex& obj=((TDSPFifo*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFifo*)(G__getstructoffset()))->Print();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFifo*)(G__getstructoffset()))->Input();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDSPFifo*)(G__getstructoffset()))->GetIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFifo*)(G__getstructoffset()))->Next();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TDSPFifo*)(G__getstructoffset()))->Next((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFifo*)(G__getstructoffset()))->Back();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TDSPFifo*)(G__getstructoffset()))->Back((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TComplex& obj=((TDSPFifo*)(G__getstructoffset()))->Shift((Double_t)G__double(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TComplex& obj=((TDSPFifo*)(G__getstructoffset()))->Shift(*((TComplex*)G__int(libp->para[0])));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPFifo*)(G__getstructoffset()))->Shift((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFifo*)(G__getstructoffset()))->FillFrom((TDSPVector*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,85,(long)((TDSPFifo*)(G__getstructoffset()))->FillTo((TDSPVector*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TDSPFifo*)(G__getstructoffset()))->FillTo());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFifo*)(G__getstructoffset()))->SetDepth((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFifo*)(G__getstructoffset()))->Set(*(TComplex*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFifo*)(G__getstructoffset()))->Set((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFifo*)(G__getstructoffset()))->Zeros();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFifo*)(G__getstructoffset()))->Ones();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      {
        TComplex *pobj,xobj=((TDSPFifo*)(G__getstructoffset()))->Dot((TComplex*)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
        TComplex *pobj,xobj=((TDSPFifo*)(G__getstructoffset()))->Dot((TComplex*)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1]));
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
        TComplex *pobj,xobj=((TDSPFifo*)(G__getstructoffset()))->Dot((TComplex*)G__int(libp->para[0]));
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      {
        TComplex *pobj,xobj=((TDSPFifo*)(G__getstructoffset()))->Dot((TDSPVector*)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1]));
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
        TComplex *pobj,xobj=((TDSPFifo*)(G__getstructoffset()))->Dot((TDSPVector*)G__int(libp->para[0]));
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      {
        TComplex *pobj,xobj=((TDSPFifo*)(G__getstructoffset()))->Dot((TDSPFifo*)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1]));
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
        TComplex *pobj,xobj=((TDSPFifo*)(G__getstructoffset()))->Dot((TDSPFifo*)G__int(libp->para[0]));
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)((TDSPFifo*)(G__getstructoffset()))->filter((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)((TDSPFifo*)(G__getstructoffset()))->filter((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
   G__letint(result7,85,(long)((TDSPFifo*)(G__getstructoffset()))->Graph((Option_t*)G__int(libp->para[0]),(TGraph*)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)((TDSPFifo*)(G__getstructoffset()))->Graph((Option_t*)G__int(libp->para[0]),(TGraph*)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)((TDSPFifo*)(G__getstructoffset()))->Graph((Option_t*)G__int(libp->para[0]),(TGraph*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPFifo*)(G__getstructoffset()))->Graph((Option_t*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TDSPFifo*)(G__getstructoffset()))->Graph());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__setnull(result7);
      ((TDSPFifo*)(G__getstructoffset()))->Draw((Option_t*)G__int(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TDSPFifo*)(G__getstructoffset()))->Draw((Option_t*)G__int(libp->para[0]),(Double_t)G__double(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TDSPFifo*)(G__getstructoffset()))->Draw((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TDSPFifo*)(G__getstructoffset()))->Draw();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TDSPFifo& obj=((TDSPFifo*)(G__getstructoffset()))->operator=((const Double_t)G__double(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TDSPFifo& obj=((TDSPFifo*)(G__getstructoffset()))->operator=(*(TComplex*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPFifo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPFifo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPFifo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPFifo::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPFifo*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFifo*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFifo*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFifo*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPFifo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPFifo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPFifo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_256_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPFifo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_256_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPFifo *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPFifo(*(TDSPFifo*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPFifo);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPFifo G__TTDSPFifo;
static int G__BaseDict_256_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPFifo *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TDSPFifo *)((G__getstructoffset())+sizeof(TDSPFifo)*i))->~G__TTDSPFifo();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TDSPFifo *)(G__getstructoffset()))->~G__TTDSPFifo();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPOperator */
static int G__BaseDict_333_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPOperator *p=NULL;
   switch(libp->paran) {
   case 1:
      p = new TDSPOperator((char*)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TDSPOperator[G__getaryconstruct()];
   else                    p=new TDSPOperator;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPOperator);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_333_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPOperator*)(G__getstructoffset()))->Emit((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_333_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPOperator*)(G__getstructoffset()))->Emit((const char*)G__int(libp->para[0]),(TDSPData*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_333_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPOperator*)(G__getstructoffset()))->Emit((const char*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_333_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPOperator*)(G__getstructoffset()))->Emit((const char*)G__int(libp->para[0]),(TDSPMatrix*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_333_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPOperator*)(G__getstructoffset()))->Emit((const char*)G__int(libp->para[0]),(TDSPSignal*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_333_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPOperator*)(G__getstructoffset()))->Emit((const char*)G__int(libp->para[0]),(TDSPOperator*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_333_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPOperator*)(G__getstructoffset()))->New((TDSPOperator*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_333_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPOperator*)(G__getstructoffset()))->Delete((TDSPOperator*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_333_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPOperator*)(G__getstructoffset()))->Paint();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_333_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPOperator*)(G__getstructoffset()))->NewGControl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_333_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPOperator*)(G__getstructoffset()))->Reset();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_333_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPOperator*)(G__getstructoffset()))->Init();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_333_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPOperator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_333_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPOperator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_333_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPOperator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_333_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPOperator::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_333_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPOperator*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_333_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPOperator*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_333_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPOperator*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_333_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPOperator*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_333_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPOperator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_333_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPOperator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_333_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPOperator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_333_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPOperator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_333_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPOperator *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPOperator(*(TDSPOperator*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPOperator);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPOperator G__TTDSPOperator;
static int G__BaseDict_333_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPOperator *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPOperator *)((G__getstructoffset())+sizeof(TDSPOperator)*i);
   else  delete (TDSPOperator *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPGenerator */
static int G__BaseDict_334_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPGenerator *p=NULL;
   if(G__getaryconstruct()) p=new TDSPGenerator[G__getaryconstruct()];
   else p=::new((G__BaseDictdOcpp_tag*)G__getgvp()) TDSPGenerator;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPGenerator);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_334_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPGenerator*)(G__getstructoffset()))->Generate();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_334_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPGenerator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_334_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPGenerator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_334_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPGenerator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_334_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPGenerator::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_334_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPGenerator*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_334_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPGenerator*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_334_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPGenerator*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_334_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPGenerator*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_334_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPGenerator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_334_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPGenerator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_334_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPGenerator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_334_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPGenerator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_334_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPGenerator *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPGenerator(*(TDSPGenerator*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPGenerator);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPGenerator G__TTDSPGenerator;
static int G__BaseDict_334_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPGenerator *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TDSPGenerator *)((G__getstructoffset())+sizeof(TDSPGenerator)*i))->~G__TTDSPGenerator();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TDSPGenerator *)(G__getstructoffset()))->~G__TTDSPGenerator();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPSpectrum */
static int G__BaseDict_335_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPSpectrum *p=NULL;
   if(G__getaryconstruct()) p=new TDSPSpectrum[G__getaryconstruct()];
   else                    p=new TDSPSpectrum;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPSpectrum);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_335_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSpectrum*)(G__getstructoffset()))->AddFreqAmp(*((TComplex*)G__int(libp->para[0])),*((TComplex*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_335_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSpectrum*)(G__getstructoffset()))->SetFreqAmp((Int_t)G__int(libp->para[0]),(TComplex*)G__int(libp->para[1])
,(TComplex*)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_335_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSpectrum*)(G__getstructoffset()))->SetNum((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_335_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TDSPSpectrum*)(G__getstructoffset()))->GetNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_335_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPSpectrum*)(G__getstructoffset()))->GetFrequencies());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_335_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPSpectrum*)(G__getstructoffset()))->GetAmplitudes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_335_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPSpectrum::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_335_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPSpectrum::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_335_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPSpectrum::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_335_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPSpectrum::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_335_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPSpectrum*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_335_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSpectrum*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_335_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSpectrum*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_335_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSpectrum*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_335_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPSpectrum::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_335_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPSpectrum::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_335_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPSpectrum::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_335_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPSpectrum::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_335_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPSpectrum *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPSpectrum(*(TDSPSpectrum*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPSpectrum);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPSpectrum G__TTDSPSpectrum;
static int G__BaseDict_335_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPSpectrum *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPSpectrum *)((G__getstructoffset())+sizeof(TDSPSpectrum)*i);
   else  delete (TDSPSpectrum *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPOutput1 */
static int G__BaseDict_336_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPOutput1 *p=NULL;
   switch(libp->paran) {
   case 1:
      p = new TDSPOutput1((char*)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TDSPOutput1[G__getaryconstruct()];
   else                    p=new TDSPOutput1;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPOutput1);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_336_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPOutput1*)(G__getstructoffset()))->Print();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_336_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPOutput1*)(G__getstructoffset()))->SetCanOverwrite();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_336_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPOutput1*)(G__getstructoffset()))->ClearCanOverwrite();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_336_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDSPOutput1*)(G__getstructoffset()))->CanOverWrite());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_336_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDSPOutput1*)(G__getstructoffset()))->Connect((const char*)G__int(libp->para[0]),(TNamed*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_336_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,103,(long)((TDSPOutput1*)(G__getstructoffset()))->Connect((TQQObject*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,103,(long)((TDSPOutput1*)(G__getstructoffset()))->Connect((TQQObject*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_336_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,103,(long)((TDSPOutput1*)(G__getstructoffset()))->Connect((const char*)G__int(libp->para[0]),(TQQObject*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,103,(long)((TDSPOutput1*)(G__getstructoffset()))->Connect((const char*)G__int(libp->para[0]),(TQQObject*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_336_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPOutput1*)(G__getstructoffset()))->Update((TDSPSignal*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_336_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TDSPOutput1*)(G__getstructoffset()))->Browse((TBrowser*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TDSPOutput1*)(G__getstructoffset()))->Browse();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_336_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPOutput1*)(G__getstructoffset()))->GetSignal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_336_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPOutput1*)(G__getstructoffset()))->SetSignal((TDSPSignal*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_336_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPOutput1*)(G__getstructoffset()))->Activate();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_336_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPOutput1*)(G__getstructoffset()))->Deactivate();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_336_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPOutput1::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_336_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPOutput1::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_336_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPOutput1::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_336_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPOutput1::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_336_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPOutput1*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_336_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPOutput1*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_336_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPOutput1*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_336_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPOutput1*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_336_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPOutput1::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_336_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPOutput1::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_336_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPOutput1::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_336_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPOutput1::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_336_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPOutput1 *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPOutput1(*(TDSPOutput1*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPOutput1);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPOutput1 G__TTDSPOutput1;
static int G__BaseDict_336_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPOutput1 *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPOutput1 *)((G__getstructoffset())+sizeof(TDSPOutput1)*i);
   else  delete (TDSPOutput1 *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPHarmonicGenerator */
static int G__BaseDict_337_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPHarmonicGenerator *p=NULL;
      p = new TDSPHarmonicGenerator((char*)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPHarmonicGenerator);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_337_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPHarmonicGenerator*)(G__getstructoffset()))->RegisterSignalsAndSlots();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_337_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPHarmonicGenerator*)(G__getstructoffset()))->GetSpectrum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_337_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPHarmonicGenerator*)(G__getstructoffset()))->SetSignalLength((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_337_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPHarmonicGenerator*)(G__getstructoffset()))->Generate();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_337_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPHarmonicGenerator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_337_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPHarmonicGenerator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_337_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPHarmonicGenerator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_337_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPHarmonicGenerator::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_337_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPHarmonicGenerator*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_337_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPHarmonicGenerator*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_337_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPHarmonicGenerator*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_337_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPHarmonicGenerator*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_337_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPHarmonicGenerator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_337_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPHarmonicGenerator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_337_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPHarmonicGenerator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_337_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPHarmonicGenerator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_337_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPHarmonicGenerator *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPHarmonicGenerator(*(TDSPHarmonicGenerator*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPHarmonicGenerator);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPHarmonicGenerator G__TTDSPHarmonicGenerator;
static int G__BaseDict_337_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPHarmonicGenerator *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPHarmonicGenerator *)((G__getstructoffset())+sizeof(TDSPHarmonicGenerator)*i);
   else  delete (TDSPHarmonicGenerator *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPRating */
static int G__BaseDict_338_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPRating *p=NULL;
   if(G__getaryconstruct()) p=new TDSPRating[G__getaryconstruct()];
   else p=::new((G__BaseDictdOcpp_tag*)G__getgvp()) TDSPRating;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPRating);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_338_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPRating*)(G__getstructoffset()))->SetRate((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_338_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPRating*)(G__getstructoffset()))->GetRate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_338_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPRating*)(G__getstructoffset()))->GetRelativeRate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_338_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPRating*)(G__getstructoffset()))->SetRateSigma((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_338_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TDSPRating*)(G__getstructoffset()))->GetRateSigma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_338_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPRating*)(G__getstructoffset()))->GetLastRelativeRate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_338_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPRating*)(G__getstructoffset()))->ResetRating();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_338_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDSPRating*)(G__getstructoffset()))->IsRate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_338_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPRating*)(G__getstructoffset()))->PrepareRate((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_338_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPRating::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_338_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPRating::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_338_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPRating::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_338_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPRating::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_338_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPRating*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_338_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPRating*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_338_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPRating*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_338_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPRating*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_338_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPRating::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_338_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPRating::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_338_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPRating::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_338_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPRating::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_338_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPRating *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPRating(*(TDSPRating*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPRating);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPRating G__TTDSPRating;
static int G__BaseDict_338_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPRating *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TDSPRating *)((G__getstructoffset())+sizeof(TDSPRating)*i))->~G__TTDSPRating();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TDSPRating *)(G__getstructoffset()))->~G__TTDSPRating();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPFilter */
static int G__BaseDict_339_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TDSPFilter*)(G__getstructoffset()))->GetNorm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_339_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFilter*)(G__getstructoffset()))->SetNorm((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_339_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFilter*)(G__getstructoffset()))->Normalize();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_339_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TDSPFilter*)(G__getstructoffset()))->IsNormalized());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_339_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPFilter *p=NULL;
   if(G__getaryconstruct()) p=new TDSPFilter[G__getaryconstruct()];
   else p=::new((G__BaseDictdOcpp_tag*)G__getgvp()) TDSPFilter;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPFilter);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_339_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPFilter*)(G__getstructoffset()))->GetFIR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_339_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPFilter*)(G__getstructoffset()))->GetIIR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_339_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFilter*)(G__getstructoffset()))->FIR((TDSPVector*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_339_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFilter*)(G__getstructoffset()))->IIR((TDSPVector*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_339_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPFilter*)(G__getstructoffset()))->filter((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPFilter*)(G__getstructoffset()))->filter((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_339_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPFilter*)(G__getstructoffset()))->filter((TDSPFifo*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPFilter*)(G__getstructoffset()))->filter((TDSPFifo*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_339_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TComplex *pobj,xobj=((TDSPFilter*)(G__getstructoffset()))->filter((TDSPFifo*)G__int(libp->para[0]),(TDSPFifo*)G__int(libp->para[1]));
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_339_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPFilter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_339_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPFilter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_339_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPFilter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_339_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPFilter::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_339_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPFilter*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_339_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFilter*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_339_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFilter*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_339_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFilter*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_339_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPFilter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_339_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPFilter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_339_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPFilter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_339_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPFilter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_339_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPFilter *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPFilter(*(TDSPFilter*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPFilter);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPFilter G__TTDSPFilter;
static int G__BaseDict_339_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPFilter *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TDSPFilter *)((G__getstructoffset())+sizeof(TDSPFilter)*i))->~G__TTDSPFilter();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TDSPFilter *)(G__getstructoffset()))->~G__TTDSPFilter();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPFifoFilter */
static int G__BaseDict_340_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPFifoFilter *p=NULL;
   if(G__getaryconstruct()) p=new TDSPFifoFilter[G__getaryconstruct()];
   else p=::new((G__BaseDictdOcpp_tag*)G__getgvp()) TDSPFifoFilter;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPFifoFilter);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_340_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPFifoFilter*)(G__getstructoffset()))->GetInputFifo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_340_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPFifoFilter*)(G__getstructoffset()))->GetOutputFifo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_340_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFifoFilter*)(G__getstructoffset()))->SetFilter((TDSPFilter*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_340_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPFifoFilter*)(G__getstructoffset()))->GetFilter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_340_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFifoFilter*)(G__getstructoffset()))->Reset();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_340_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TComplex *pobj,xobj=((TDSPFifoFilter*)(G__getstructoffset()))->filter(*((TComplex*)G__int(libp->para[0])));
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_340_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPFifoFilter*)(G__getstructoffset()))->GetRate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_340_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPFifoFilter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_340_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPFifoFilter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_340_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPFifoFilter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_340_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPFifoFilter::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_340_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPFifoFilter*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_340_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFifoFilter*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_340_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFifoFilter*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_340_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFifoFilter*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_340_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPFifoFilter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_340_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPFifoFilter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_340_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPFifoFilter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_340_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPFifoFilter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_340_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TComplex *pobj,xobj=((TDSPFifoFilter*)(G__getstructoffset()))->filter(*((const TComplex*)G__int(libp->para[0])));
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_340_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPFifoFilter *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPFifoFilter(*(TDSPFifoFilter*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPFifoFilter);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPFifoFilter G__TTDSPFifoFilter;
static int G__BaseDict_340_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPFifoFilter *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TDSPFifoFilter *)((G__getstructoffset())+sizeof(TDSPFifoFilter)*i))->~G__TTDSPFifoFilter();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TDSPFifoFilter *)(G__getstructoffset()))->~G__TTDSPFifoFilter();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPSymbolGenerator */
static int G__BaseDict_343_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPSymbolGenerator*)(G__getstructoffset()))->SER((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_343_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPSymbolGenerator*)(G__getstructoffset()))->LogSER_dB((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_343_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPSymbolGenerator*)(G__getstructoffset()))->GetSymbols());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_343_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((TDSPSymbolGenerator*)(G__getstructoffset()))->GetNumSymbols());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_343_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSymbolGenerator*)(G__getstructoffset()))->SetAnalyseGrid((UInt_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_343_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSymbolGenerator*)(G__getstructoffset()))->SetSignalLength((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_343_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSymbolGenerator*)(G__getstructoffset()))->ReduceSignalLength((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_343_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TDSPSymbolGenerator*)(G__getstructoffset()))->GetSignalLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_343_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDSPSymbolGenerator*)(G__getstructoffset()))->IsAnalysed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_343_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSymbolGenerator*)(G__getstructoffset()))->SetOption((Option_t*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_343_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPSymbolGenerator*)(G__getstructoffset()))->GetSignalPower());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_343_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPSymbolGenerator*)(G__getstructoffset()))->GetReceivedPower());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_343_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPSymbolGenerator*)(G__getstructoffset()))->GetIntNoisePower());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_343_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPSymbolGenerator*)(G__getstructoffset()))->GetSINR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_343_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TComplex *pobj,xobj=((TDSPSymbolGenerator*)(G__getstructoffset()))->GetAttentuation();
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_343_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPSymbolGenerator*)(G__getstructoffset()))->GetDistance((Option_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_343_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPSymbolGenerator*)(G__getstructoffset()))->GetDecisionSignal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_343_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TComplex& obj=((TDSPSymbolGenerator*)(G__getstructoffset()))->GetGlobalCorrection();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_343_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSymbolGenerator*)(G__getstructoffset()))->SetGlobalCorrection(*((TComplex*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_343_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TComplex& obj=((TDSPSymbolGenerator*)(G__getstructoffset()))->GetCorrection();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_343_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSymbolGenerator*)(G__getstructoffset()))->SetCorrection(*((TComplex*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_343_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const TDSPSymbolGenerator*)(G__getstructoffset()))->GetCorrectionTrackingInterval());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_343_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSymbolGenerator*)(G__getstructoffset()))->SetCorrectionTrackingInterval((UInt_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_343_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__letint(result7,104,(long)((TDSPSymbolGenerator*)(G__getstructoffset()))->EstimateNumSymbols((Double_t)G__double(libp->para[0]),(UInt_t)G__int(libp->para[1])
,(eEstimateNumSymbols)G__int(libp->para[2]),(UInt_t)G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7,104,(long)((TDSPSymbolGenerator*)(G__getstructoffset()))->EstimateNumSymbols((Double_t)G__double(libp->para[0]),(UInt_t)G__int(libp->para[1])
,(eEstimateNumSymbols)G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_343_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__letint(result7,104,(long)((TDSPSymbolGenerator*)(G__getstructoffset()))->EstimateNumSymbols((Double_t)G__double(libp->para[0]),(UInt_t)G__int(libp->para[1])
,(char*)G__int(libp->para[2]),(UInt_t)G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7,104,(long)((TDSPSymbolGenerator*)(G__getstructoffset()))->EstimateNumSymbols((Double_t)G__double(libp->para[0]),(UInt_t)G__int(libp->para[1])
,(char*)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,104,(long)((TDSPSymbolGenerator*)(G__getstructoffset()))->EstimateNumSymbols((Double_t)G__double(libp->para[0]),(UInt_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,104,(long)((TDSPSymbolGenerator*)(G__getstructoffset()))->EstimateNumSymbols((Double_t)G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_343_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSymbolGenerator*)(G__getstructoffset()))->Generate();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_343_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPSymbolGenerator*)(G__getstructoffset()))->Update((TDSPSignal*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_343_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSymbolGenerator*)(G__getstructoffset()))->ReferenceUpdate((TDSPSignal*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_343_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPSymbolGenerator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_343_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPSymbolGenerator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_343_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPSymbolGenerator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_343_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPSymbolGenerator::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_343_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPSymbolGenerator*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_343_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSymbolGenerator*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_343_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSymbolGenerator*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_343_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSymbolGenerator*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_343_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPSymbolGenerator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_343_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPSymbolGenerator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_343_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPSymbolGenerator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_343_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPSymbolGenerator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPSymbolGenerator G__TTDSPSymbolGenerator;
static int G__BaseDict_343_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPSymbolGenerator *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPSymbolGenerator *)((G__getstructoffset())+sizeof(TDSPSymbolGenerator)*i);
   else  delete (TDSPSymbolGenerator *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPStochasticProcess */
static int G__BaseDict_344_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPStochasticProcess*)(G__getstructoffset()))->SetMode((eStochasticType)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_344_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TDSPStochasticProcess*)(G__getstructoffset()))->GetMode((eStochasticType)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_344_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letint(result7,103,(long)((TDSPStochasticProcess*)(G__getstructoffset()))->SetRepresentation((Double_t)G__double(libp->para[0])));
      break;
   case 0:
      G__letint(result7,103,(long)((TDSPStochasticProcess*)(G__getstructoffset()))->SetRepresentation());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_344_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPStochasticProcess*)(G__getstructoffset()))->SetMean((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_344_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPStochasticProcess*)(G__getstructoffset()))->SetSigma((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_344_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TDSPStochasticProcess*)(G__getstructoffset()))->SetSigmas((Double_t)G__double(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TDSPStochasticProcess*)(G__getstructoffset()))->SetSigmas((Double_t)G__double(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_344_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TDSPStochasticProcess*)(G__getstructoffset()))->SetSigmas(*((TComplex*)G__int(libp->para[0])),(Int_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TDSPStochasticProcess*)(G__getstructoffset()))->SetSigmas(*((TComplex*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_344_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TDSPStochasticProcess*)(G__getstructoffset()))->SetMeans((Double_t)G__double(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TDSPStochasticProcess*)(G__getstructoffset()))->SetMeans((Double_t)G__double(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_344_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TDSPStochasticProcess*)(G__getstructoffset()))->SetMeans(*((TComplex*)G__int(libp->para[0])),(Int_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TDSPStochasticProcess*)(G__getstructoffset()))->SetMeans(*((TComplex*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_344_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPStochasticProcess*)(G__getstructoffset()))->SER((Double_t)G__double(libp->para[0]),(TDSPSymbolGenerator*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_344_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      {
        TComplex *pobj,xobj=((TDSPStochasticProcess*)(G__getstructoffset()))->GetSigmas((Int_t)G__int(libp->para[0]));
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
        TComplex *pobj,xobj=((TDSPStochasticProcess*)(G__getstructoffset()))->GetSigmas();
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_344_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      {
        TComplex *pobj,xobj=((TDSPStochasticProcess*)(G__getstructoffset()))->GetMeans((Int_t)G__int(libp->para[0]));
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
        TComplex *pobj,xobj=((TDSPStochasticProcess*)(G__getstructoffset()))->GetMeans();
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_344_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPStochasticProcess*)(G__getstructoffset()))->Reset();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_344_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPStochasticProcess::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_344_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPStochasticProcess::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_344_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPStochasticProcess::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_344_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPStochasticProcess::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_344_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPStochasticProcess*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_344_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPStochasticProcess*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_344_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPStochasticProcess*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_344_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPStochasticProcess*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_344_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPStochasticProcess::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_344_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPStochasticProcess::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_344_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPStochasticProcess::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_344_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPStochasticProcess::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPStochasticProcess G__TTDSPStochasticProcess;
static int G__BaseDict_344_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPStochasticProcess *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TDSPStochasticProcess *)((G__getstructoffset())+sizeof(TDSPStochasticProcess)*i))->~G__TTDSPStochasticProcess();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TDSPStochasticProcess *)(G__getstructoffset()))->~G__TTDSPStochasticProcess();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPStochasticScalar */
static int G__BaseDict_345_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPStochasticScalar *p=NULL;
   if(G__getaryconstruct()) p=new TDSPStochasticScalar[G__getaryconstruct()];
   else p=::new((G__BaseDictdOcpp_tag*)G__getgvp()) TDSPStochasticScalar;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPStochasticScalar);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_345_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPStochasticScalar*)(G__getstructoffset()))->SetMode((eStochasticType)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_345_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TComplex& obj=((TDSPStochasticScalar*)(G__getstructoffset()))->Value();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_345_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPStochasticScalar*)(G__getstructoffset()))->ChangeRepresentation();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_345_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPStochasticScalar*)(G__getstructoffset()))->SetFifoFilter((TDSPFifoFilter*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_345_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPStochasticScalar*)(G__getstructoffset()))->GetFifoFilter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_345_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPStochasticScalar*)(G__getstructoffset()))->PrepareRate((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_345_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPStochasticScalar*)(G__getstructoffset()))->Reset();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_345_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPStochasticScalar::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_345_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPStochasticScalar::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_345_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPStochasticScalar::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_345_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPStochasticScalar::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_345_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPStochasticScalar*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_345_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPStochasticScalar*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_345_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPStochasticScalar*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_345_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPStochasticScalar*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_345_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPStochasticScalar::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_345_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPStochasticScalar::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_345_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPStochasticScalar::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_345_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPStochasticScalar::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_345_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPStochasticScalar *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPStochasticScalar(*(TDSPStochasticScalar*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPStochasticScalar);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPStochasticScalar G__TTDSPStochasticScalar;
static int G__BaseDict_345_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPStochasticScalar *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TDSPStochasticScalar *)((G__getstructoffset())+sizeof(TDSPStochasticScalar)*i))->~G__TTDSPStochasticScalar();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TDSPStochasticScalar *)(G__getstructoffset()))->~G__TTDSPStochasticScalar();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPStatistics */
static int G__BaseDict_346_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      G__letint(result7,104,(long)TDSPStatistics::EstimateNumSymbols((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(UInt_t)G__int(libp->para[2]),(eEstimateNumSymbols)G__int(libp->para[3])
,(UInt_t)G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7,104,(long)TDSPStatistics::EstimateNumSymbols((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(UInt_t)G__int(libp->para[2]),(eEstimateNumSymbols)G__int(libp->para[3])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_346_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      G__letint(result7,104,(long)TDSPStatistics::EstimateNumSymbols((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(UInt_t)G__int(libp->para[2]),(char*)G__int(libp->para[3])
,(UInt_t)G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7,104,(long)TDSPStatistics::EstimateNumSymbols((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(UInt_t)G__int(libp->para[2]),(char*)G__int(libp->para[3])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_346_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPStatistics::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_346_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPStatistics::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_346_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPStatistics::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_346_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPStatistics::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_346_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPStatistics*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_346_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPStatistics*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_346_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPStatistics*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_346_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPStatistics*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_346_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPStatistics::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_346_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPStatistics::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_346_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPStatistics::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_346_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPStatistics::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__BaseDict_346_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPStatistics *p;
   if(G__getaryconstruct()) p=new TDSPStatistics[G__getaryconstruct()];
   else p=::new((G__BaseDictdOcpp_tag*)G__getgvp()) TDSPStatistics;
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPStatistics);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_346_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPStatistics *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPStatistics(*(TDSPStatistics*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPStatistics);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPStatistics G__TTDSPStatistics;
static int G__BaseDict_346_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPStatistics *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TDSPStatistics *)((G__getstructoffset())+sizeof(TDSPStatistics)*i))->~G__TTDSPStatistics();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TDSPStatistics *)(G__getstructoffset()))->~G__TTDSPStatistics();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPBlockFifo */
static int G__BaseDict_347_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPBlockFifo *p=NULL;
   switch(libp->paran) {
   case 1:
      p = new TDSPBlockFifo((char*)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TDSPBlockFifo[G__getaryconstruct()];
   else                    p=new TDSPBlockFifo;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockFifo);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_347_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,85,(long)((TDSPBlockFifo*)(G__getstructoffset()))->GetBlock((Int_t)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TDSPBlockFifo*)(G__getstructoffset()))->GetBlock());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_347_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPBlockFifo*)(G__getstructoffset()))->SetDepth((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_347_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPBlockFifo*)(G__getstructoffset()))->SetSize((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_347_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TDSPBlockFifo*)(G__getstructoffset()))->GetWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_347_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPBlockFifo*)(G__getstructoffset()))->Shift((TDSPSignal*)G__int(libp->para[0]),(TDSPSignal*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPBlockFifo*)(G__getstructoffset()))->Shift((TDSPSignal*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TDSPBlockFifo*)(G__getstructoffset()))->Shift());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_347_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPBlockFifo*)(G__getstructoffset()))->Update((TDSPSignal*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_347_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPBlockFifo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_347_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPBlockFifo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_347_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPBlockFifo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_347_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPBlockFifo::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_347_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPBlockFifo*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_347_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPBlockFifo*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_347_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPBlockFifo*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_347_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPBlockFifo*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_347_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPBlockFifo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_347_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPBlockFifo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_347_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPBlockFifo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_347_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPBlockFifo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_347_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPBlockFifo *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPBlockFifo(*(TDSPBlockFifo*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockFifo);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPBlockFifo G__TTDSPBlockFifo;
static int G__BaseDict_347_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPBlockFifo *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPBlockFifo *)((G__getstructoffset())+sizeof(TDSPBlockFifo)*i);
   else  delete (TDSPBlockFifo *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPBlockFifoFilter */
static int G__BaseDict_348_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPBlockFifoFilter *p=NULL;
   switch(libp->paran) {
   case 1:
      p = ::new((G__BaseDictdOcpp_tag*)G__getgvp()) TDSPBlockFifoFilter((char*)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TDSPBlockFifoFilter[G__getaryconstruct()];
   else p=::new((G__BaseDictdOcpp_tag*)G__getgvp()) TDSPBlockFifoFilter;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockFifoFilter);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_348_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPBlockFifoFilter*)(G__getstructoffset()))->GetInputFifo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_348_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPBlockFifoFilter*)(G__getstructoffset()))->GetOutputFifo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_348_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPBlockFifoFilter*)(G__getstructoffset()))->SetFilter((TDSPFilter*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_348_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPBlockFifoFilter*)(G__getstructoffset()))->GetFilter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_348_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPBlockFifoFilter*)(G__getstructoffset()))->SetWidth((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_348_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPBlockFifoFilter*)(G__getstructoffset()))->filter((TDSPSignal*)G__int(libp->para[0]),(TDSPSignal*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_348_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPBlockFifoFilter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_348_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPBlockFifoFilter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_348_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPBlockFifoFilter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_348_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPBlockFifoFilter::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_348_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPBlockFifoFilter*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_348_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPBlockFifoFilter*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_348_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPBlockFifoFilter*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_348_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPBlockFifoFilter*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_348_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPBlockFifoFilter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_348_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPBlockFifoFilter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_348_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPBlockFifoFilter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_348_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPBlockFifoFilter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_348_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPBlockFifoFilter *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPBlockFifoFilter(*(TDSPBlockFifoFilter*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockFifoFilter);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPBlockFifoFilter G__TTDSPBlockFifoFilter;
static int G__BaseDict_348_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPBlockFifoFilter *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TDSPBlockFifoFilter *)((G__getstructoffset())+sizeof(TDSPBlockFifoFilter)*i))->~G__TTDSPBlockFifoFilter();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TDSPBlockFifoFilter *)(G__getstructoffset()))->~G__TTDSPBlockFifoFilter();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPStochasticSignal */
static int G__BaseDict_349_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPStochasticSignal *p=NULL;
   switch(libp->paran) {
   case 1:
      p = new TDSPStochasticSignal((Int_t)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TDSPStochasticSignal[G__getaryconstruct()];
   else                    p=new TDSPStochasticSignal;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPStochasticSignal);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_349_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__setnull(result7);
      ((TDSPStochasticSignal*)(G__getstructoffset()))->Conv((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TDSPStochasticSignal*)(G__getstructoffset()))->Conv((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_349_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPStochasticSignal*)(G__getstructoffset()))->SetAsModel();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_349_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPStochasticSignal*)(G__getstructoffset()))->SetFifoFilter((TDSPBlockFifoFilter*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_349_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPStochasticSignal*)(G__getstructoffset()))->ChangeRepresentation();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_349_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPStochasticSignal*)(G__getstructoffset()))->Reset();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_349_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPStochasticSignal::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_349_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPStochasticSignal::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_349_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPStochasticSignal::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_349_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPStochasticSignal::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_349_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPStochasticSignal*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_349_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPStochasticSignal*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_349_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPStochasticSignal*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_349_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPStochasticSignal*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_349_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPStochasticSignal::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_349_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPStochasticSignal::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_349_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPStochasticSignal::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_349_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPStochasticSignal::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_349_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPStochasticSignal *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPStochasticSignal(*(TDSPStochasticSignal*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPStochasticSignal);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPStochasticSignal G__TTDSPStochasticSignal;
static int G__BaseDict_349_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPStochasticSignal *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPStochasticSignal *)((G__getstructoffset())+sizeof(TDSPStochasticSignal)*i);
   else  delete (TDSPStochasticSignal *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPfft */
static int G__BaseDict_350_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)TDSPfft::LoadFFTW());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_350_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPfft::EnableFFTW();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_350_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPfft::DisableFFTW();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_350_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)TDSPfft::UsingFFTW());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_350_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 7:
      G__setnull(result7);
      ((TDSPfft*)(G__getstructoffset()))->do_fft(
(TComplex*)G__int(libp->para[0]),(TComplex*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]),(Int_t)G__int(libp->para[5])
,(Double_t)G__double(libp->para[6]));
      break;
   case 6:
      G__setnull(result7);
      ((TDSPfft*)(G__getstructoffset()))->do_fft((TComplex*)G__int(libp->para[0]),(TComplex*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]),(Int_t)G__int(libp->para[5]));
      break;
   case 5:
      G__setnull(result7);
      ((TDSPfft*)(G__getstructoffset()))->do_fft((TComplex*)G__int(libp->para[0]),(TComplex*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]));
      break;
   case 4:
      G__setnull(result7);
      ((TDSPfft*)(G__getstructoffset()))->do_fft((TComplex*)G__int(libp->para[0]),(TComplex*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      G__setnull(result7);
      ((TDSPfft*)(G__getstructoffset()))->do_fft((TComplex*)G__int(libp->para[0]),(TComplex*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_350_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 7:
      G__setnull(result7);
      ((TDSPfft*)(G__getstructoffset()))->do_ifft(
(TComplex*)G__int(libp->para[0]),(TComplex*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]),(Int_t)G__int(libp->para[5])
,(Double_t)G__double(libp->para[6]));
      break;
   case 6:
      G__setnull(result7);
      ((TDSPfft*)(G__getstructoffset()))->do_ifft((TComplex*)G__int(libp->para[0]),(TComplex*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]),(Int_t)G__int(libp->para[5]));
      break;
   case 5:
      G__setnull(result7);
      ((TDSPfft*)(G__getstructoffset()))->do_ifft((TComplex*)G__int(libp->para[0]),(TComplex*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]));
      break;
   case 4:
      G__setnull(result7);
      ((TDSPfft*)(G__getstructoffset()))->do_ifft((TComplex*)G__int(libp->para[0]),(TComplex*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      G__setnull(result7);
      ((TDSPfft*)(G__getstructoffset()))->do_ifft((TComplex*)G__int(libp->para[0]),(TComplex*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_350_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPfft *p=NULL;
   switch(libp->paran) {
   case 1:
      p = new TDSPfft((char*)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TDSPfft[G__getaryconstruct()];
   else                    p=new TDSPfft;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPfft);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_350_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPfft*)(G__getstructoffset()))->SetDim((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_350_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDSPfft*)(G__getstructoffset()))->GetDim());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_350_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPfft*)(G__getstructoffset()))->GetFFTSignal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_350_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPfft*)(G__getstructoffset()))->GetIFFTSignal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_350_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPfft*)(G__getstructoffset()))->RegisterSignalsAndSlots();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_350_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      G__setnull(result7);
      ((TDSPfft*)(G__getstructoffset()))->fft((TComplex*)G__int(libp->para[0]),(TComplex*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]));
      break;
   case 4:
      G__setnull(result7);
      ((TDSPfft*)(G__getstructoffset()))->fft((TComplex*)G__int(libp->para[0]),(TComplex*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      G__setnull(result7);
      ((TDSPfft*)(G__getstructoffset()))->fft((TComplex*)G__int(libp->para[0]),(TComplex*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_350_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      G__setnull(result7);
      ((TDSPfft*)(G__getstructoffset()))->ifft((TComplex*)G__int(libp->para[0]),(TComplex*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]));
      break;
   case 4:
      G__setnull(result7);
      ((TDSPfft*)(G__getstructoffset()))->ifft((TComplex*)G__int(libp->para[0]),(TComplex*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      G__setnull(result7);
      ((TDSPfft*)(G__getstructoffset()))->ifft((TComplex*)G__int(libp->para[0]),(TComplex*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_350_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPfft*)(G__getstructoffset()))->fft((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPfft*)(G__getstructoffset()))->fft((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_350_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)((TDSPfft*)(G__getstructoffset()))->fft((TDSPMatrix*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(TDSPMatrix*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)((TDSPfft*)(G__getstructoffset()))->fft((TDSPMatrix*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_350_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPfft*)(G__getstructoffset()))->ifft((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPfft*)(G__getstructoffset()))->ifft((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_350_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)((TDSPfft*)(G__getstructoffset()))->ifft((TDSPMatrix*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(TDSPMatrix*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)((TDSPfft*)(G__getstructoffset()))->ifft((TDSPMatrix*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_350_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPfft*)(G__getstructoffset()))->FFT((TDSPSignal*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_350_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPfft*)(G__getstructoffset()))->IFFT((TDSPSignal*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_350_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TDSPfft*)(G__getstructoffset()))->GetIFFTLen((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_350_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TDSPfft*)(G__getstructoffset()))->GetFFTLen((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_350_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPfft*)(G__getstructoffset()))->SetOverSampling((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_350_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TDSPfft*)(G__getstructoffset()))->GetOverSampling());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_350_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPfft*)(G__getstructoffset()))->SetCyclicPrefix((UInt_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_350_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const TDSPfft*)(G__getstructoffset()))->GetCyclicPrefix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_350_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPfft::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_350_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPfft::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_350_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPfft::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_350_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPfft::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_350_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPfft*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_350_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPfft*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_350_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPfft*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_350_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPfft*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_350_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPfft::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_350_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPfft::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_350_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPfft::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_350_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPfft::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_350_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPfft *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPfft(*(TDSPfft*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPfft);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPfft G__TTDSPfft;
static int G__BaseDict_350_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPfft *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPfft *)((G__getstructoffset())+sizeof(TDSPfft)*i);
   else  delete (TDSPfft *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPGroup */
static int G__BaseDict_351_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPGroup *p=NULL;
   switch(libp->paran) {
   case 1:
      p = new TDSPGroup((char*)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TDSPGroup[G__getaryconstruct()];
   else                    p=new TDSPGroup;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPGroup);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_351_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPGroup*)(G__getstructoffset()))->GetListOfOperators());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_351_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPGroup*)(G__getstructoffset()))->Add((TDSPOperator*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_351_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPGroup*)(G__getstructoffset()))->Remove((TDSPOperator*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_351_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPGroup*)(G__getstructoffset()))->Print();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_351_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPGroup*)(G__getstructoffset()))->NewGControl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_351_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPGroup::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_351_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPGroup::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_351_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPGroup::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_351_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPGroup::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_351_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPGroup*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_351_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPGroup*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_351_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPGroup*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_351_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPGroup*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_351_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPGroup::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_351_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPGroup::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_351_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPGroup::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_351_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPGroup::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_351_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPGroup *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPGroup(*(TDSPGroup*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPGroup);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPGroup G__TTDSPGroup;
static int G__BaseDict_351_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPGroup *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPGroup *)((G__getstructoffset())+sizeof(TDSPGroup)*i);
   else  delete (TDSPGroup *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPConvolution */
static int G__BaseDict_353_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPConvolution *p=NULL;
   switch(libp->paran) {
   case 1:
      p = new TDSPConvolution((char*)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TDSPConvolution[G__getaryconstruct()];
   else                    p=new TDSPConvolution;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPConvolution);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_353_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPConvolution*)(G__getstructoffset()))->Response((TDSPVector*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_353_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPConvolution*)(G__getstructoffset()))->Response((TDSPStochasticSignal*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_353_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPConvolution*)(G__getstructoffset()))->SetOption((Option_t*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_353_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPConvolution*)(G__getstructoffset()))->SetBlockLen((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_353_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TDSPConvolution*)(G__getstructoffset()))->GetBlockLen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_353_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPConvolution*)(G__getstructoffset()))->Conv((TDSPVector*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_353_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPConvolution*)(G__getstructoffset()))->Update((TDSPSignal*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_353_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPConvolution::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_353_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPConvolution::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_353_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPConvolution::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_353_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPConvolution::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_353_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPConvolution*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_353_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPConvolution*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_353_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPConvolution*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_353_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPConvolution*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_353_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPConvolution::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_353_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPConvolution::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_353_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPConvolution::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_353_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPConvolution::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_353_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPConvolution *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPConvolution(*(TDSPConvolution*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPConvolution);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPConvolution G__TTDSPConvolution;
static int G__BaseDict_353_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPConvolution *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPConvolution *)((G__getstructoffset())+sizeof(TDSPConvolution)*i);
   else  delete (TDSPConvolution *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPChop */
static int G__BaseDict_354_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPChop *p=NULL;
      p = new TDSPChop((char*)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPChop);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_354_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPChop*)(G__getstructoffset()))->SetSignalLength((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_354_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPChop*)(G__getstructoffset()))->RegisterSignalsAndSlots();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_354_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPChop*)(G__getstructoffset()))->Update((TDSPSignal*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_354_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPChop::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_354_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPChop::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_354_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPChop::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_354_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPChop::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_354_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPChop*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_354_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPChop*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_354_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPChop*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_354_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPChop*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_354_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPChop::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_354_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPChop::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_354_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPChop::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_354_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPChop::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_354_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPChop *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPChop(*(TDSPChop*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPChop);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPChop G__TTDSPChop;
static int G__BaseDict_354_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPChop *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPChop *)((G__getstructoffset())+sizeof(TDSPChop)*i);
   else  delete (TDSPChop *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPBlockfft */
static int G__BaseDict_355_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPBlockfft *p=NULL;
   switch(libp->paran) {
   case 1:
      p = new TDSPBlockfft((char*)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TDSPBlockfft[G__getaryconstruct()];
   else                    p=new TDSPBlockfft;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockfft);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_355_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPBlockfft*)(G__getstructoffset()))->SetBlockLen((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_355_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TDSPBlockfft*)(G__getstructoffset()))->GetBlockLen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_355_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPBlockfft*)(G__getstructoffset()))->fft((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPBlockfft*)(G__getstructoffset()))->fft((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_355_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPBlockfft*)(G__getstructoffset()))->ifft((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPBlockfft*)(G__getstructoffset()))->ifft((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_355_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPBlockfft*)(G__getstructoffset()))->FFT((TDSPSignal*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_355_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPBlockfft*)(G__getstructoffset()))->IFFT((TDSPSignal*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_355_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPBlockfft::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_355_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPBlockfft::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_355_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPBlockfft::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_355_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPBlockfft::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_355_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPBlockfft*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_355_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPBlockfft*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_355_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPBlockfft*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_355_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPBlockfft*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_355_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPBlockfft::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_355_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPBlockfft::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_355_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPBlockfft::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_355_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPBlockfft::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_355_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPBlockfft *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPBlockfft(*(TDSPBlockfft*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockfft);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPBlockfft G__TTDSPBlockfft;
static int G__BaseDict_355_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPBlockfft *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPBlockfft *)((G__getstructoffset())+sizeof(TDSPBlockfft)*i);
   else  delete (TDSPBlockfft *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPBlockMap */
static int G__BaseDict_356_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPBlockMap *p=NULL;
   switch(libp->paran) {
   case 1:
      p = new TDSPBlockMap((char*)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TDSPBlockMap[G__getaryconstruct()];
   else                    p=new TDSPBlockMap;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockMap);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_356_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPBlockMap*)(G__getstructoffset()))->GetSignal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_356_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPBlockMap*)(G__getstructoffset()))->GetInverseSignal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_356_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPBlockMap*)(G__getstructoffset()))->SetMatrix((TDSPMatrix*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_356_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPBlockMap*)(G__getstructoffset()))->SetInverseMatrix((TDSPMatrix*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_356_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letdouble(result7,100,(double)((TDSPBlockMap*)(G__getstructoffset()))->TestError((UInt_t)G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7,100,(double)((TDSPBlockMap*)(G__getstructoffset()))->TestError());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_356_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TDSPBlockMap*)(G__getstructoffset()))->GetBlockLen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_356_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPBlockMap*)(G__getstructoffset()))->GetMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_356_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPBlockMap*)(G__getstructoffset()))->GetInverseMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_356_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPBlockMap*)(G__getstructoffset()))->Apply((TDSPSignal*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_356_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPBlockMap*)(G__getstructoffset()))->InverseApply((TDSPSignal*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_356_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPBlockMap*)(G__getstructoffset()))->SetApplyMode((eMatrixApplyMode)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_356_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPBlockMap*)(G__getstructoffset()))->SetApplyMode((eMatrixApplyMode)G__int(libp->para[0]),(eMatrixApplyMode)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_356_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPBlockMap*)(G__getstructoffset()))->SetInverseApplyMode((eMatrixApplyMode)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_356_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDSPBlockMap*)(G__getstructoffset()))->GetApplyMode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_356_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDSPBlockMap*)(G__getstructoffset()))->GetInverseApplyMode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_356_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPBlockMap*)(G__getstructoffset()))->Update((TDSPSignal*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_356_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPBlockMap*)(G__getstructoffset()))->InverseUpdate((TDSPSignal*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_356_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPBlockMap::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_356_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPBlockMap::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_356_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPBlockMap::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_356_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPBlockMap::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_356_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPBlockMap*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_356_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPBlockMap*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_356_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPBlockMap*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_356_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPBlockMap*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_356_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPBlockMap::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_356_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPBlockMap::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_356_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPBlockMap::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_356_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPBlockMap::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_356_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPBlockMap *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPBlockMap(*(TDSPBlockMap*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockMap);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPBlockMap G__TTDSPBlockMap;
static int G__BaseDict_356_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPBlockMap *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPBlockMap *)((G__getstructoffset())+sizeof(TDSPBlockMap)*i);
   else  delete (TDSPBlockMap *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPSignalDump */
static int G__BaseDict_358_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPSignalDump *p=NULL;
   switch(libp->paran) {
   case 1:
      p = new TDSPSignalDump((char*)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TDSPSignalDump[G__getaryconstruct()];
   else                    p=new TDSPSignalDump;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPSignalDump);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_358_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSignalDump*)(G__getstructoffset()))->SetMode((eSignalDumpMode)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_358_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDSPSignalDump*)(G__getstructoffset()))->GetMode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_358_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSignalDump*)(G__getstructoffset()))->SetPause((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_358_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDSPSignalDump*)(G__getstructoffset()))->GetPause());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_358_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSignalDump*)(G__getstructoffset()))->Update((TDSPSignal*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_358_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPSignalDump::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_358_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPSignalDump::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_358_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPSignalDump::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_358_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPSignalDump::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_358_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPSignalDump*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_358_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSignalDump*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_358_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSignalDump*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_358_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSignalDump*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_358_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPSignalDump::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_358_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPSignalDump::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_358_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPSignalDump::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_358_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPSignalDump::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_358_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPSignalDump *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPSignalDump(*(TDSPSignalDump*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPSignalDump);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPSignalDump G__TTDSPSignalDump;
static int G__BaseDict_358_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPSignalDump *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPSignalDump *)((G__getstructoffset())+sizeof(TDSPSignalDump)*i);
   else  delete (TDSPSignalDump *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPReadSignal */
static int G__BaseDict_359_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPReadSignal *p=NULL;
      p = new TDSPReadSignal((char*)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPReadSignal);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_359_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPReadSignal*)(G__getstructoffset()))->Generate();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_359_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPReadSignal::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_359_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPReadSignal::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_359_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPReadSignal::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_359_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPReadSignal::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_359_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPReadSignal*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_359_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPReadSignal*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_359_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPReadSignal*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_359_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPReadSignal*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_359_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPReadSignal::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_359_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPReadSignal::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_359_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPReadSignal::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_359_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPReadSignal::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_359_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPReadSignal *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPReadSignal(*(TDSPReadSignal*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPReadSignal);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPReadSignal G__TTDSPReadSignal;
static int G__BaseDict_359_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPReadSignal *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPReadSignal *)((G__getstructoffset())+sizeof(TDSPReadSignal)*i);
   else  delete (TDSPReadSignal *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPPsk */
static int G__BaseDict_360_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPPsk *p=NULL;
   switch(libp->paran) {
   case 3:
      p = new TDSPPsk(
(char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(UInt_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TDSPPsk((char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   case 1:
      p = new TDSPPsk((char*)G__int(libp->para[0]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPPsk);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_360_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPPsk*)(G__getstructoffset()))->SER((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_360_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPPsk::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_360_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPPsk::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_360_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPPsk::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_360_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPPsk::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_360_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPPsk*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_360_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPPsk*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_360_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPPsk*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_360_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPPsk*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_360_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPPsk::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_360_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPPsk::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_360_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPPsk::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_360_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPPsk::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_360_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPPsk *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPPsk(*(TDSPPsk*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPPsk);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPPsk G__TTDSPPsk;
static int G__BaseDict_360_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPPsk *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPPsk *)((G__getstructoffset())+sizeof(TDSPPsk)*i);
   else  delete (TDSPPsk *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPSignalStudy */
static int G__BaseDict_361_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPSignalStudy *p=NULL;
   switch(libp->paran) {
   case 1:
      p = new TDSPSignalStudy((char*)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TDSPSignalStudy[G__getaryconstruct()];
   else                    p=new TDSPSignalStudy;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPSignalStudy);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_361_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSignalStudy*)(G__getstructoffset()))->Analyse((TDSPSignal*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_361_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TDSPSignalStudy*)(G__getstructoffset()))->GetBlockLen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_361_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSignalStudy*)(G__getstructoffset()))->SetBlockLen((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_361_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSignalStudy*)(G__getstructoffset()))->EnableCrestFactor();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_361_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSignalStudy*)(G__getstructoffset()))->DisableCrestFactor();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_361_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDSPSignalStudy*)(G__getstructoffset()))->IsCrestFactor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_361_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPSignalStudy*)(G__getstructoffset()))->GetMean());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_361_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPSignalStudy*)(G__getstructoffset()))->GetMaxAbs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_361_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPSignalStudy*)(G__getstructoffset()))->GetCrestFactor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_361_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPSignalStudy*)(G__getstructoffset()))->Update((TDSPSignal*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_361_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPSignalStudy::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_361_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPSignalStudy::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_361_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPSignalStudy::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_361_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPSignalStudy::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_361_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPSignalStudy*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_361_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSignalStudy*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_361_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSignalStudy*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_361_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSignalStudy*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_361_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPSignalStudy::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_361_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPSignalStudy::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_361_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPSignalStudy::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_361_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPSignalStudy::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_361_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPSignalStudy *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPSignalStudy(*(TDSPSignalStudy*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPSignalStudy);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPSignalStudy G__TTDSPSignalStudy;
static int G__BaseDict_361_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPSignalStudy *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPSignalStudy *)((G__getstructoffset())+sizeof(TDSPSignalStudy)*i);
   else  delete (TDSPSignalStudy *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPQam */
static int G__BaseDict_362_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPQam *p=NULL;
   switch(libp->paran) {
   case 3:
      p = new TDSPQam(
(char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(UInt_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TDSPQam((char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   case 1:
      p = new TDSPQam((char*)G__int(libp->para[0]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPQam);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_362_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPQam*)(G__getstructoffset()))->SER((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_362_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPQam::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_362_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPQam::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_362_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPQam::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_362_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPQam::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_362_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPQam*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_362_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPQam*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_362_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPQam*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_362_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPQam*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_362_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPQam::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_362_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPQam::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_362_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPQam::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_362_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPQam::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_362_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPQam *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPQam(*(TDSPQam*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPQam);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPQam G__TTDSPQam;
static int G__BaseDict_362_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPQam *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPQam *)((G__getstructoffset())+sizeof(TDSPQam)*i);
   else  delete (TDSPQam *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPPam */
static int G__BaseDict_363_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPPam *p=NULL;
   switch(libp->paran) {
   case 3:
      p = new TDSPPam(
(char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(UInt_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TDSPPam((char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   case 1:
      p = new TDSPPam((char*)G__int(libp->para[0]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPPam);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_363_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPPam*)(G__getstructoffset()))->SER((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_363_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPPam::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_363_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPPam::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_363_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPPam::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_363_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPPam::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_363_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPPam*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_363_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPPam*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_363_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPPam*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_363_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPPam*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_363_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPPam::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_363_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPPam::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_363_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPPam::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_363_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPPam::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_363_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPPam *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPPam(*(TDSPPam*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPPam);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPPam G__TTDSPPam;
static int G__BaseDict_363_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPPam *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPPam *)((G__getstructoffset())+sizeof(TDSPPam)*i);
   else  delete (TDSPPam *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPOfdm */
static int G__BaseDict_364_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPOfdm *p=NULL;
   switch(libp->paran) {
   case 1:
      p = new TDSPOfdm((char*)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TDSPOfdm[G__getaryconstruct()];
   else                    p=new TDSPOfdm;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPOfdm);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_364_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TDSPOfdm*)(G__getstructoffset()))->GetNumCarriers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_364_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPOfdm*)(G__getstructoffset()))->SetNumCarriers((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_364_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPOfdm*)(G__getstructoffset()))->SetEqualization((TDSPVector*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_364_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPOfdm*)(G__getstructoffset()))->GetEqualization());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_364_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPOfdm*)(G__getstructoffset()))->SetOption((Option_t*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_364_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPOfdm*)(G__getstructoffset()))->GetTransmitSignal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_364_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPOfdm*)(G__getstructoffset()))->GetReceivedSignal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_364_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPOfdm*)(G__getstructoffset()))->GetBandWidthEfficiency());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_364_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDSPOfdm*)(G__getstructoffset()))->CalcEqualization((TDSPVector*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_364_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TDSPOfdm*)(G__getstructoffset()))->EqualizeMe((TDSPVector*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TDSPOfdm*)(G__getstructoffset()))->EqualizeMe();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_364_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPOfdm*)(G__getstructoffset()))->Receive((TDSPSignal*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_364_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPOfdm*)(G__getstructoffset()))->Transmit((TDSPSignal*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_364_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPOfdm*)(G__getstructoffset()))->Received((TDSPSignal*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_364_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPOfdm*)(G__getstructoffset()))->Transmitted((TDSPSignal*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_364_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPOfdm::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_364_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPOfdm::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_364_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPOfdm::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_364_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPOfdm::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_364_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPOfdm*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_364_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPOfdm*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_364_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPOfdm*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_364_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPOfdm*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_364_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPOfdm::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_364_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPOfdm::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_364_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPOfdm::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_364_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPOfdm::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_364_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPOfdm *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPOfdm(*(TDSPOfdm*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPOfdm);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPOfdm G__TTDSPOfdm;
static int G__BaseDict_364_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPOfdm *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPOfdm *)((G__getstructoffset())+sizeof(TDSPOfdm)*i);
   else  delete (TDSPOfdm *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPStft */
static int G__BaseDict_365_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPStft *p=NULL;
      p = new TDSPStft((char*)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPStft);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_365_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPStft*)(G__getstructoffset()))->SetBlockLen((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_365_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TDSPStft*)(G__getstructoffset()))->GetBlockLen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_365_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPStft*)(G__getstructoffset()))->SetMultiplikator((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_365_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TDSPStft*)(G__getstructoffset()))->GetMultiplikator());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_365_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPStft*)(G__getstructoffset()))->Window((TDSPSignal*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_365_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPStft*)(G__getstructoffset()))->DualWindow((TDSPSignal*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_365_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPStft::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_365_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPStft::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_365_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPStft::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_365_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPStft::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_365_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPStft*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_365_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPStft*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_365_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPStft*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_365_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPStft*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_365_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPStft::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_365_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPStft::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_365_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPStft::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_365_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPStft::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_365_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPStft *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPStft(*(TDSPStft*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPStft);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPStft G__TTDSPStft;
static int G__BaseDict_365_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPStft *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPStft *)((G__getstructoffset())+sizeof(TDSPStft)*i);
   else  delete (TDSPStft *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPNofdm */
static int G__BaseDict_366_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPNofdm *p=NULL;
   switch(libp->paran) {
   case 1:
      p = new TDSPNofdm((char*)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TDSPNofdm[G__getaryconstruct()];
   else                    p=new TDSPNofdm;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPNofdm);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDSPNofdm*)(G__getstructoffset()))->GetNumCarriers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPNofdm*)(G__getstructoffset()))->SetNumCarriers((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDSPNofdm*)(G__getstructoffset()))->GetLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPNofdm*)(G__getstructoffset()))->SetLength((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDSPNofdm*)(G__getstructoffset()))->GetTimePad());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPNofdm*)(G__getstructoffset()))->SetTimePad((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDSPNofdm*)(G__getstructoffset()))->GetFreqPad());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPNofdm*)(G__getstructoffset()))->SetFreqPad((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPNofdm*)(G__getstructoffset()))->SetPads((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPNofdm*)(G__getstructoffset()))->SetTransmitMatrix((TDSPMatrix*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPNofdm*)(G__getstructoffset()))->SetReceiverMatrix((TDSPMatrix*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,85,(long)((TDSPNofdm*)(G__getstructoffset()))->GetTransmitPulse((TDSPVector*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TDSPNofdm*)(G__getstructoffset()))->GetTransmitPulse());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,85,(long)((TDSPNofdm*)(G__getstructoffset()))->GetReceiverPulse((TDSPVector*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TDSPNofdm*)(G__getstructoffset()))->GetReceiverPulse());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPNofdm*)(G__getstructoffset()))->GetTransmitMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPNofdm*)(G__getstructoffset()))->GetReceiverMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPNofdm*)(G__getstructoffset()))->SetPulseName(*((TString*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPNofdm*)(G__getstructoffset()))->SetPulseParam((Int_t)G__int(libp->para[0]),(Double_t)G__double(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPNofdm*)(G__getstructoffset()))->GetPulseParam((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((TDSPNofdm*)(G__getstructoffset()))->GetPulseFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPNofdm*)(G__getstructoffset()))->Print();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPNofdm*)(G__getstructoffset()))->Draw();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPNofdm*)(G__getstructoffset()))->SetChannel((TDSPMatrix*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPNofdm*)(G__getstructoffset()))->GetChannel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPNofdm*)(G__getstructoffset()))->SetMode((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPNofdm*)(G__getstructoffset()))->SetOption((Option_t*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPNofdm*)(G__getstructoffset()))->GetMapping());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPNofdm*)(G__getstructoffset()))->GetMappingPart1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPNofdm*)(G__getstructoffset()))->GetCorrelation());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPNofdm*)(G__getstructoffset()))->GetNoiseCorrelation());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPNofdm*)(G__getstructoffset()))->GetTransmitSignal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPNofdm*)(G__getstructoffset()))->GetReceivedSignal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPNofdm*)(G__getstructoffset()))->GetBandWidthEfficiency());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPNofdm*)(G__getstructoffset()))->CreatePulses();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__setnull(result7);
      ((TDSPNofdm*)(G__getstructoffset()))->LoadPulses((char*)G__int(libp->para[0]),(char*)G__int(libp->para[1])
,(char*)G__int(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TDSPNofdm*)(G__getstructoffset()))->LoadPulses((char*)G__int(libp->para[0]),(char*)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TDSPNofdm*)(G__getstructoffset()))->LoadPulses((char*)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__setnull(result7);
      ((TDSPNofdm*)(G__getstructoffset()))->SavePulses((char*)G__int(libp->para[0]),(char*)G__int(libp->para[1])
,(char*)G__int(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TDSPNofdm*)(G__getstructoffset()))->SavePulses((char*)G__int(libp->para[0]),(char*)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TDSPNofdm*)(G__getstructoffset()))->SavePulses((char*)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPNofdm*)(G__getstructoffset()))->CalcMappingFromChannel((TDSPMatrix*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPNofdm*)(G__getstructoffset()))->CalcCorrelationFromChannel((TDSPMatrix*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPNofdm*)(G__getstructoffset()))->Correlation((TDSPMatrix*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPNofdm*)(G__getstructoffset()))->Mapping((TDSPMatrix*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPNofdm*)(G__getstructoffset()))->MappingPart1((TDSPMatrix*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPNofdm::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPNofdm::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPNofdm::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPNofdm::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPNofdm*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPNofdm*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPNofdm*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPNofdm*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPNofdm::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_6_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPNofdm::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_7_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPNofdm::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_366_8_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPNofdm::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_366_9_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPNofdm *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPNofdm(*(TDSPNofdm*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPNofdm);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPNofdm G__TTDSPNofdm;
static int G__BaseDict_366_0_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPNofdm *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPNofdm *)((G__getstructoffset())+sizeof(TDSPNofdm)*i);
   else  delete (TDSPNofdm *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPInt */
static int G__BaseDict_371_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPInt *p=NULL;
   switch(libp->paran) {
   case 6:
      p = new TDSPInt(
(const char*)G__int(libp->para[0]),(int*)G__int(libp->para[1])
,(char**)G__int(libp->para[2]),(void*)G__int(libp->para[3])
,(int)G__int(libp->para[4]),(Bool_t)G__int(libp->para[5]));
      break;
   case 5:
      p = new TDSPInt(
(const char*)G__int(libp->para[0]),(int*)G__int(libp->para[1])
,(char**)G__int(libp->para[2]),(void*)G__int(libp->para[3])
,(int)G__int(libp->para[4]));
      break;
   case 4:
      p = new TDSPInt(
(const char*)G__int(libp->para[0]),(int*)G__int(libp->para[1])
,(char**)G__int(libp->para[2]),(void*)G__int(libp->para[3]));
      break;
   case 3:
      p = new TDSPInt(
(const char*)G__int(libp->para[0]),(int*)G__int(libp->para[1])
,(char**)G__int(libp->para[2]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPInt);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_371_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TString& obj=TDSPInt::GetVersion();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_371_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPInt*)(G__getstructoffset()))->PrintLogo();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_371_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPInt::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_371_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPInt::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_371_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPInt::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_371_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPInt::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_371_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPInt*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_371_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPInt*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_371_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPInt*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_371_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPInt*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_371_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPInt::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_371_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPInt::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_371_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPInt::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_371_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPInt::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_371_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPInt *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPInt(*(TDSPInt*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPInt);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPInt G__TTDSPInt;
static int G__BaseDict_371_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPInt *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPInt *)((G__getstructoffset())+sizeof(TDSPInt)*i);
   else  delete (TDSPInt *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPFilterBank */
static int G__BaseDict_372_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPFilterBank *p=NULL;
   switch(libp->paran) {
   case 2:
      p = new TDSPFilterBank((UInt_t)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1]));
      break;
   case 1:
      p = new TDSPFilterBank((UInt_t)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TDSPFilterBank[G__getaryconstruct()];
   else                    p=new TDSPFilterBank;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPFilterBank);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFilterBank*)(G__getstructoffset()))->SetFilter((UInt_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPFilterBank*)(G__getstructoffset()))->GetFilter((UInt_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPFilterBank*)(G__getstructoffset()))->GetFilter((UInt_t)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFilterBank*)(G__getstructoffset()))->SetMatrix((TDSPMatrix*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPFilterBank*)(G__getstructoffset()))->GetMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFilterBank*)(G__getstructoffset()))->LoadMatrix((char*)G__int(libp->para[0]),(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFilterBank*)(G__getstructoffset()))->SetSize((UInt_t)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFilterBank*)(G__getstructoffset()))->SetSubSampling((UInt_t)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFilterBank*)(G__getstructoffset()))->SetSubSamplings((UInt_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFilterBank*)(G__getstructoffset()))->SetTimePad((UInt_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFilterBank*)(G__getstructoffset()))->SetFilterOption((UInt_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFilterBank*)(G__getstructoffset()))->SetFilterOption((UInt_t)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((TDSPFilterBank*)(G__getstructoffset()))->GetFilterOption((UInt_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDSPFilterBank*)(G__getstructoffset()))->IsActive((UInt_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFilterBank*)(G__getstructoffset()))->Activate((UInt_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFilterBank*)(G__getstructoffset()))->Deactivate((UInt_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDSPFilterBank*)(G__getstructoffset()))->IsCommonSubSampling());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((TDSPFilterBank*)(G__getstructoffset()))->GetSubSampling((UInt_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((TDSPFilterBank*)(G__getstructoffset()))->GetSubSamplings());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const TDSPFilterBank*)(G__getstructoffset()))->GetMaxSubSampling());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const TDSPFilterBank*)(G__getstructoffset()))->GetMinSubSampling());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((TDSPFilterBank*)(G__getstructoffset()))->GetLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((TDSPFilterBank*)(G__getstructoffset()))->GetNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFilterBank*)(G__getstructoffset()))->SetLength((UInt_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFilterBank*)(G__getstructoffset()))->SetNum((UInt_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFilterBank*)(G__getstructoffset()))->SetZero((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDSPFilterBank*)(G__getstructoffset()))->GetZero());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPFilterBank*)(G__getstructoffset()))->Synthesize((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPFilterBank*)(G__getstructoffset()))->Synthesize((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPFilterBank*)(G__getstructoffset()))->Analyze((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPFilterBank*)(G__getstructoffset()))->Analyze((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFilterBank*)(G__getstructoffset()))->InitFromProtoType((Option_t*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__setnull(result7);
      ((TDSPFilterBank*)(G__getstructoffset()))->LoadAndInitFromProtoType((Option_t*)G__int(libp->para[0]),(char*)G__int(libp->para[1])
,(char*)G__int(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TDSPFilterBank*)(G__getstructoffset()))->LoadAndInitFromProtoType((Option_t*)G__int(libp->para[0]),(char*)G__int(libp->para[1]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const TDSPFilterBank*)(G__getstructoffset()))->GetFreqPad());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFilterBank*)(G__getstructoffset()))->SetFreqPad((UInt_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const TDSPFilterBank*)(G__getstructoffset()))->GetNumActiveFilters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFilterBank*)(G__getstructoffset()))->Print();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPFilterBank*)(G__getstructoffset()))->GetBandWidthEfficiency());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,85,(long)((TDSPFilterBank*)(G__getstructoffset()))->GetDualMatrix((Option_t*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TDSPFilterBank*)(G__getstructoffset()))->GetDualMatrix());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPFilterBank::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPFilterBank::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPFilterBank::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPFilterBank::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPFilterBank*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFilterBank*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFilterBank*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFilterBank*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_6_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPFilterBank::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_7_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPFilterBank::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_8_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPFilterBank::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_372_9_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPFilterBank::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_372_0_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPFilterBank *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPFilterBank(*(TDSPFilterBank*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPFilterBank);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPFilterBank G__TTDSPFilterBank;
static int G__BaseDict_372_1_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPFilterBank *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPFilterBank *)((G__getstructoffset())+sizeof(TDSPFilterBank)*i);
   else  delete (TDSPFilterBank *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPCorrelationFilter */
static int G__BaseDict_375_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPCorrelationFilter *p=NULL;
   if(G__getaryconstruct()) p=new TDSPCorrelationFilter[G__getaryconstruct()];
   else p=::new((G__BaseDictdOcpp_tag*)G__getgvp()) TDSPCorrelationFilter;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPCorrelationFilter);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_375_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TDSPCorrelationFilter*)(G__getstructoffset()))->Init((Double_t)G__double(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TDSPCorrelationFilter*)(G__getstructoffset()))->Init((Double_t)G__double(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TDSPCorrelationFilter*)(G__getstructoffset()))->Init();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_375_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPCorrelationFilter*)(G__getstructoffset()))->Correlation((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_375_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPCorrelationFilter*)(G__getstructoffset()))->GetCorrelation());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_375_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TDSPCorrelationFilter*)(G__getstructoffset()))->GetMethod());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_375_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPCorrelationFilter*)(G__getstructoffset()))->SetMethod((eCorrFilterMethod)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_375_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPCorrelationFilter*)(G__getstructoffset()))->SetAR((UInt_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_375_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((TDSPCorrelationFilter*)(G__getstructoffset()))->GetAR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_375_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPCorrelationFilter*)(G__getstructoffset()))->SetMA((UInt_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_375_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((TDSPCorrelationFilter*)(G__getstructoffset()))->GetMA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_375_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPCorrelationFilter*)(G__getstructoffset()))->SetARMA((UInt_t)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_375_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPCorrelationFilter*)(G__getstructoffset()))->EnableOption((eCorrFilterOptions)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_375_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPCorrelationFilter*)(G__getstructoffset()))->DisableOption((eCorrFilterOptions)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_375_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPCorrelationFilter*)(G__getstructoffset()))->Test();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_375_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPCorrelationFilter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_375_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPCorrelationFilter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_375_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPCorrelationFilter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_375_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPCorrelationFilter::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_375_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPCorrelationFilter*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_375_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPCorrelationFilter*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_375_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPCorrelationFilter*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_375_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPCorrelationFilter*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_375_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPCorrelationFilter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_375_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPCorrelationFilter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_375_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPCorrelationFilter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_375_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPCorrelationFilter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_375_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPCorrelationFilter *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPCorrelationFilter(*(TDSPCorrelationFilter*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPCorrelationFilter);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPCorrelationFilter G__TTDSPCorrelationFilter;
static int G__BaseDict_375_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPCorrelationFilter *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TDSPCorrelationFilter *)((G__getstructoffset())+sizeof(TDSPCorrelationFilter)*i))->~G__TTDSPCorrelationFilter();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TDSPCorrelationFilter *)(G__getstructoffset()))->~G__TTDSPCorrelationFilter();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPMath */
static int G__BaseDict_376_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)TDSPMath::BesselJ0((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_376_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)TDSPMath::Q((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_376_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)TDSPMath::QSqrt((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_376_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letdouble(result7,100,(double)TDSPMath::Rayleigh((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7,100,(double)TDSPMath::Rayleigh((Double_t)G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_376_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)TDSPMath::dB((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_376_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)TDSPMath::FromdB((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_376_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letdouble(result7,100,(double)TDSPMath::Lorentz((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7,100,(double)TDSPMath::Lorentz((Double_t)G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_376_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPMath::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_376_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPMath::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_376_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPMath::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_376_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPMath::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_376_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPMath*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_376_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPMath*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_376_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPMath*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_376_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPMath*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_376_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPMath::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_376_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPMath::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_376_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPMath::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_376_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPMath::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__BaseDict_376_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPMath *p;
   if(G__getaryconstruct()) p=new TDSPMath[G__getaryconstruct()];
   else p=::new((G__BaseDictdOcpp_tag*)G__getgvp()) TDSPMath;
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPMath);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_376_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPMath *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPMath(*(TDSPMath*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPMath);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPMath G__TTDSPMath;
static int G__BaseDict_376_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPMath *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TDSPMath *)((G__getstructoffset())+sizeof(TDSPMath)*i))->~G__TTDSPMath();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TDSPMath *)(G__getstructoffset()))->~G__TTDSPMath();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPJakes */
static int G__BaseDict_377_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPJakes *p=NULL;
   if(G__getaryconstruct()) p=new TDSPJakes[G__getaryconstruct()];
   else p=::new((G__BaseDictdOcpp_tag*)G__getgvp()) TDSPJakes;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPJakes);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_377_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPJakes*)(G__getstructoffset()))->SetSpeed((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_377_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPJakes*)(G__getstructoffset()))->SetSpeedKMH((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_377_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPJakes*)(G__getstructoffset()))->SetCarrierFrequency((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_377_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPJakes*)(G__getstructoffset()))->GetDopplerFrequency());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_377_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPJakes*)(G__getstructoffset()))->SetDopplerFrequency((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_377_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPJakes*)(G__getstructoffset()))->Correlation((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_377_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPJakes::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_377_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPJakes::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_377_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPJakes::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_377_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPJakes::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_377_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPJakes*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_377_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPJakes*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_377_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPJakes*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_377_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPJakes*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_377_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPJakes::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_377_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPJakes::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_377_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPJakes::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_377_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPJakes::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_377_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPJakes *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPJakes(*(TDSPJakes*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPJakes);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPJakes G__TTDSPJakes;
static int G__BaseDict_377_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPJakes *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TDSPJakes *)((G__getstructoffset())+sizeof(TDSPJakes)*i))->~G__TTDSPJakes();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TDSPJakes *)(G__getstructoffset()))->~G__TTDSPJakes();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPFunction */
static int G__BaseDict_378_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPFunction *p=NULL;
   switch(libp->paran) {
   case 1:
      p = new TDSPFunction((char*)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TDSPFunction[G__getaryconstruct()];
   else                    p=new TDSPFunction;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPFunction);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_378_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TComplex *pobj,xobj=((TDSPFunction*)(G__getstructoffset()))->F(*((TComplex*)G__int(libp->para[0])));
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_378_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPFunction*)(G__getstructoffset()))->Apply((TDSPSignal*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_378_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPFunction*)(G__getstructoffset()))->Update((TDSPSignal*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_378_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPFunction::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_378_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPFunction::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_378_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPFunction::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_378_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPFunction::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_378_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPFunction*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_378_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFunction*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_378_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFunction*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_378_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFunction*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_378_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPFunction::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_378_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPFunction::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_378_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPFunction::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_378_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPFunction::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_378_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPFunction *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPFunction(*(TDSPFunction*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPFunction);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPFunction G__TTDSPFunction;
static int G__BaseDict_378_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPFunction *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPFunction *)((G__getstructoffset())+sizeof(TDSPFunction)*i);
   else  delete (TDSPFunction *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPClip */
static int G__BaseDict_379_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPClip *p=NULL;
   switch(libp->paran) {
   case 1:
      p = new TDSPClip((char*)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TDSPClip[G__getaryconstruct()];
   else                    p=new TDSPClip;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPClip);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_379_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPClip*)(G__getstructoffset()))->SetClip((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_379_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPClip*)(G__getstructoffset()))->GetClip());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_379_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TComplex *pobj,xobj=((TDSPClip*)(G__getstructoffset()))->F(*((TComplex*)G__int(libp->para[0])));
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_379_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPClip::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_379_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPClip::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_379_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPClip::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_379_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPClip::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_379_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPClip*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_379_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPClip*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_379_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPClip*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_379_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPClip*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_379_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPClip::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_379_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPClip::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_379_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPClip::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_379_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPClip::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_379_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPClip *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPClip(*(TDSPClip*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPClip);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPClip G__TTDSPClip;
static int G__BaseDict_379_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPClip *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPClip *)((G__getstructoffset())+sizeof(TDSPClip)*i);
   else  delete (TDSPClip *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPBlockSolve */
static int G__BaseDict_381_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPBlockSolve *p=NULL;
   switch(libp->paran) {
   case 1:
      p = new TDSPBlockSolve((char*)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TDSPBlockSolve[G__getaryconstruct()];
   else                    p=new TDSPBlockSolve;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockSolve);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_381_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TDSPBlockSolve*)(G__getstructoffset()))->GetBlockLen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_381_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPBlockSolve*)(G__getstructoffset()))->Print();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_381_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPBlockSolve*)(G__getstructoffset()))->GetSolver());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_381_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPBlockSolve*)(G__getstructoffset()))->SetSolver((TDSPSolver*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_381_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPBlockSolve*)(G__getstructoffset()))->Solve((TDSPSignal*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_381_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPBlockSolve*)(G__getstructoffset()))->Update((TDSPSignal*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_381_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPBlockSolve::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_381_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPBlockSolve::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_381_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPBlockSolve::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_381_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPBlockSolve::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_381_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPBlockSolve*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_381_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPBlockSolve*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_381_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPBlockSolve*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_381_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPBlockSolve*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_381_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPBlockSolve::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_381_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPBlockSolve::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_381_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPBlockSolve::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_381_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPBlockSolve::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_381_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPBlockSolve *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPBlockSolve(*(TDSPBlockSolve*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockSolve);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPBlockSolve G__TTDSPBlockSolve;
static int G__BaseDict_381_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPBlockSolve *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPBlockSolve *)((G__getstructoffset())+sizeof(TDSPBlockSolve)*i);
   else  delete (TDSPBlockSolve *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPEstimator */
static int G__BaseDict_382_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPEstimator*)(G__getstructoffset()))->GetEstimate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_382_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPEstimator*)(G__getstructoffset()))->Estimate((TDSPVector*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_382_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPEstimator*)(G__getstructoffset()))->Calculate();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_382_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPEstimator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_382_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPEstimator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_382_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPEstimator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_382_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPEstimator::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_382_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPEstimator*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_382_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPEstimator*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_382_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPEstimator*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_382_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPEstimator*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_382_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPEstimator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_382_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPEstimator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_382_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPEstimator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_382_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPEstimator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPEstimator G__TTDSPEstimator;
static int G__BaseDict_382_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPEstimator *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPEstimator *)((G__getstructoffset())+sizeof(TDSPEstimator)*i);
   else  delete (TDSPEstimator *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPLmmse */
static int G__BaseDict_383_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPLmmse *p=NULL;
   if(G__getaryconstruct()) p=new TDSPLmmse[G__getaryconstruct()];
   else                    p=new TDSPLmmse;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPLmmse);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_383_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPLmmse *p=NULL;
      p = new TDSPLmmse((TDSPMatrix*)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPLmmse);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_383_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPLmmse *p=NULL;
      p = new TDSPLmmse(
(TDSPMatrix*)G__int(libp->para[0]),(TDSPMatrix*)G__int(libp->para[1])
,(TDSPMatrix*)G__int(libp->para[2]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPLmmse);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_383_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPLmmse*)(G__getstructoffset()))->Estimate((TDSPVector*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_383_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPLmmse*)(G__getstructoffset()))->Calculate();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_383_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPLmmse*)(G__getstructoffset()))->SetMatrix((TDSPMatrix*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_383_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPLmmse*)(G__getstructoffset()))->GetMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_383_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPLmmse*)(G__getstructoffset()))->SetPostMatrix((TDSPMatrix*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_383_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPLmmse*)(G__getstructoffset()))->GetPostMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_383_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPLmmse*)(G__getstructoffset()))->SetXCovariance((TDSPMatrix*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_383_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPLmmse*)(G__getstructoffset()))->GetXCovariance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_383_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPLmmse*)(G__getstructoffset()))->SetNoiseCovariance((TDSPMatrix*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_383_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPLmmse*)(G__getstructoffset()))->GetNoiseCovariance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_383_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPLmmse*)(G__getstructoffset()))->SetNoise(*((TComplex*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_383_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
const         TComplex *pobj,xobj=((const TDSPLmmse*)(G__getstructoffset()))->GetNoise();
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_383_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPLmmse*)(G__getstructoffset()))->GetEstimatorMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_383_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPLmmse::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_383_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPLmmse::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_383_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPLmmse::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_383_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPLmmse::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_383_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPLmmse*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_383_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPLmmse*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_383_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPLmmse*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_383_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPLmmse*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_383_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPLmmse::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_383_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPLmmse::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_383_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPLmmse::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_383_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPLmmse::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_383_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPLmmse *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPLmmse(*(TDSPLmmse*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPLmmse);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPLmmse G__TTDSPLmmse;
static int G__BaseDict_383_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPLmmse *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPLmmse *)((G__getstructoffset())+sizeof(TDSPLmmse)*i);
   else  delete (TDSPLmmse *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPFastBpsk */
static int G__BaseDict_384_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPFastBpsk *p=NULL;
   switch(libp->paran) {
   case 1:
      p = new TDSPFastBpsk((char*)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TDSPFastBpsk[G__getaryconstruct()];
   else                    p=new TDSPFastBpsk;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPFastBpsk);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_384_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPFastBpsk::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_384_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPFastBpsk::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_384_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPFastBpsk::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_384_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPFastBpsk::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_384_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPFastBpsk*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_384_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFastBpsk*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_384_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFastBpsk*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_384_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFastBpsk*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_384_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPFastBpsk::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_384_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPFastBpsk::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_384_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPFastBpsk::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_384_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPFastBpsk::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_384_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPFastBpsk *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPFastBpsk(*(TDSPFastBpsk*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPFastBpsk);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPFastBpsk G__TTDSPFastBpsk;
static int G__BaseDict_384_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPFastBpsk *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPFastBpsk *)((G__getstructoffset())+sizeof(TDSPFastBpsk)*i);
   else  delete (TDSPFastBpsk *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPFastQpsk */
static int G__BaseDict_385_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPFastQpsk *p=NULL;
   switch(libp->paran) {
   case 1:
      p = new TDSPFastQpsk((char*)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TDSPFastQpsk[G__getaryconstruct()];
   else                    p=new TDSPFastQpsk;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPFastQpsk);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_385_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPFastQpsk::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_385_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPFastQpsk::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_385_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPFastQpsk::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_385_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPFastQpsk::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_385_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPFastQpsk*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_385_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFastQpsk*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_385_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFastQpsk*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_385_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFastQpsk*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_385_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPFastQpsk::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_385_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPFastQpsk::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_385_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPFastQpsk::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_385_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPFastQpsk::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_385_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPFastQpsk *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPFastQpsk(*(TDSPFastQpsk*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPFastQpsk);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPFastQpsk G__TTDSPFastQpsk;
static int G__BaseDict_385_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPFastQpsk *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPFastQpsk *)((G__getstructoffset())+sizeof(TDSPFastQpsk)*i);
   else  delete (TDSPFastQpsk *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPModulation */
static int G__BaseDict_386_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPModulation *p=NULL;
   switch(libp->paran) {
   case 1:
      p = new TDSPModulation((char*)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TDSPModulation[G__getaryconstruct()];
   else                    p=new TDSPModulation;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPModulation);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_386_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPModulation*)(G__getstructoffset()))->SetFrequency((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_386_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPModulation*)(G__getstructoffset()))->SetFrequency(*(TComplex*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_386_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
const         TComplex *pobj,xobj=((const TDSPModulation*)(G__getstructoffset()))->GetFrequency();
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_386_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPModulation*)(G__getstructoffset()))->SetPhase((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_386_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TDSPModulation*)(G__getstructoffset()))->GetPhase());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_386_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPModulation*)(G__getstructoffset()))->SetBlockLen((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_386_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TDSPModulation*)(G__getstructoffset()))->GetBlockLen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_386_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPModulation*)(G__getstructoffset()))->SetBurstOffset((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_386_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDSPModulation*)(G__getstructoffset()))->GetBurstOffset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_386_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPModulation*)(G__getstructoffset()))->Modulate((TDSPVector*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_386_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPModulation*)(G__getstructoffset()))->Update((TDSPSignal*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_386_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPModulation*)(G__getstructoffset()))->Reset();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_386_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPModulation::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_386_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPModulation::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_386_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPModulation::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_386_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPModulation::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_386_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPModulation*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_386_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPModulation*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_386_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPModulation*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_386_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPModulation*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_386_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPModulation::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_386_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPModulation::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_386_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPModulation::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_386_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPModulation::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_386_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPModulation *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPModulation(*(TDSPModulation*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPModulation);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPModulation G__TTDSPModulation;
static int G__BaseDict_386_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPModulation *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPModulation *)((G__getstructoffset())+sizeof(TDSPModulation)*i);
   else  delete (TDSPModulation *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPWienerProcess */
static int G__BaseDict_387_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPWienerProcess *p=NULL;
   switch(libp->paran) {
   case 1:
      p = new TDSPWienerProcess((char*)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TDSPWienerProcess[G__getaryconstruct()];
   else                    p=new TDSPWienerProcess;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPWienerProcess);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_387_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 6:
   G__letint(result7,85,(long)TDSPWienerProcess::MultRandPhase((TDSPVector*)G__int(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(TDSPVector*)G__int(libp->para[5])));
      break;
   case 5:
   G__letint(result7,85,(long)TDSPWienerProcess::MultRandPhase((TDSPVector*)G__int(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4])));
      break;
   case 4:
   G__letint(result7,85,(long)TDSPWienerProcess::MultRandPhase((TDSPVector*)G__int(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)TDSPWienerProcess::MultRandPhase((TDSPVector*)G__int(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)TDSPWienerProcess::MultRandPhase((TDSPVector*)G__int(libp->para[0]),(Double_t)G__double(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)TDSPWienerProcess::MultRandPhase((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_387_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPWienerProcess*)(G__getstructoffset()))->Apply((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPWienerProcess*)(G__getstructoffset()))->Apply((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_387_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPWienerProcess*)(G__getstructoffset()))->Update((TDSPSignal*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_387_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPWienerProcess*)(G__getstructoffset()))->SetVariance((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_387_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TDSPWienerProcess*)(G__getstructoffset()))->GetVariance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_387_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPWienerProcess*)(G__getstructoffset()))->SetBurstLen((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_387_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TDSPWienerProcess*)(G__getstructoffset()))->GetBurstLen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_387_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPWienerProcess*)(G__getstructoffset()))->SetPhase((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_387_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TDSPWienerProcess*)(G__getstructoffset()))->GetPhase());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_387_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPWienerProcess*)(G__getstructoffset()))->SetBurstOffset((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_387_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TDSPWienerProcess*)(G__getstructoffset()))->GetBurstOffset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_387_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPWienerProcess::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_387_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPWienerProcess::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_387_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPWienerProcess::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_387_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPWienerProcess::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_387_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPWienerProcess*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_387_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPWienerProcess*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_387_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPWienerProcess*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_387_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPWienerProcess*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_387_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPWienerProcess::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_387_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPWienerProcess::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_387_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPWienerProcess::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_387_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPWienerProcess::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_387_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPWienerProcess *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPWienerProcess(*(TDSPWienerProcess*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPWienerProcess);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPWienerProcess G__TTDSPWienerProcess;
static int G__BaseDict_387_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPWienerProcess *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPWienerProcess *)((G__getstructoffset())+sizeof(TDSPWienerProcess)*i);
   else  delete (TDSPWienerProcess *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPMonitor */
static int G__BaseDict_388_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPMonitor *p=NULL;
   switch(libp->paran) {
   case 1:
      p = new TDSPMonitor((char*)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TDSPMonitor[G__getaryconstruct()];
   else                    p=new TDSPMonitor;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPMonitor);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_388_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPMonitor*)(G__getstructoffset()))->SetBlockLen((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_388_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TDSPMonitor*)(G__getstructoffset()))->GetBlockLen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_388_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPMonitor*)(G__getstructoffset()))->GetNamedSignal((char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_388_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPMonitor*)(G__getstructoffset()))->Monitor((char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_388_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPMonitor*)(G__getstructoffset()))->Update((TDSPSignal*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_388_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPMonitor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_388_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPMonitor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_388_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPMonitor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_388_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPMonitor::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_388_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPMonitor*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_388_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPMonitor*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_388_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPMonitor*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_388_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPMonitor*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_388_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPMonitor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_388_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPMonitor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_388_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPMonitor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_388_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPMonitor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPMonitor G__TTDSPMonitor;
static int G__BaseDict_388_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPMonitor *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPMonitor *)((G__getstructoffset())+sizeof(TDSPMonitor)*i);
   else  delete (TDSPMonitor *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPSource */
static int G__BaseDict_389_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPSource *p=NULL;
   if(G__getaryconstruct()) p=new TDSPSource[G__getaryconstruct()];
   else                    p=new TDSPSource;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPSource);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_389_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSource*)(G__getstructoffset()))->SetSender((TQQObject*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_389_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPSource*)(G__getstructoffset()))->GetSender());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_389_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSource*)(G__getstructoffset()))->SetSignal((TDSPSignal*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_389_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPSource*)(G__getstructoffset()))->GetSignal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_389_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPSource::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_389_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPSource::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_389_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPSource::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_389_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPSource::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_389_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPSource*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_389_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSource*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_389_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSource*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_389_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSource*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_389_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPSource::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_389_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPSource::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_389_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPSource::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_389_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPSource::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_389_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPSource *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPSource(*(TDSPSource*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPSource);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPSource G__TTDSPSource;
static int G__BaseDict_389_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPSource *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPSource *)((G__getstructoffset())+sizeof(TDSPSource)*i);
   else  delete (TDSPSource *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPFilterMap */
static int G__BaseDict_390_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPFilterMap *p=NULL;
   switch(libp->paran) {
   case 1:
      p = new TDSPFilterMap((char*)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TDSPFilterMap[G__getaryconstruct()];
   else                    p=new TDSPFilterMap;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPFilterMap);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPFilterMap*)(G__getstructoffset()))->GetSignal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPFilterMap*)(G__getstructoffset()))->GetInverseSignal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFilterMap*)(G__getstructoffset()))->SetNumFilters((UInt_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((TDSPFilterMap*)(G__getstructoffset()))->GetNumFilters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFilterMap*)(G__getstructoffset()))->SetSubSamplings((UInt_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFilterMap*)(G__getstructoffset()))->SetTimePad((UInt_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((TDSPFilterMap*)(G__getstructoffset()))->GetTimePad());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFilterMap*)(G__getstructoffset()))->SetFreqPad((UInt_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((TDSPFilterMap*)(G__getstructoffset()))->GetFreqPad());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPFilterMap*)(G__getstructoffset()))->GetBandWidthEfficiency());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((TDSPFilterMap*)(G__getstructoffset()))->GetSubSamplings());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFilterMap*)(G__getstructoffset()))->Activate((UInt_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFilterMap*)(G__getstructoffset()))->Deactivate((UInt_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPFilterMap*)(G__getstructoffset()))->GetSynthesisFilter((UInt_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPFilterMap*)(G__getstructoffset()))->GetAnalysisFilter((UInt_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((TDSPFilterMap*)(G__getstructoffset()))->GetNumActiveSynthesisFilters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((TDSPFilterMap*)(G__getstructoffset()))->GetNumActiveAnalysisFilters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFilterMap*)(G__getstructoffset()))->SetAnalysisBank((TDSPFilterBank*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFilterMap*)(G__getstructoffset()))->SetSynthesisBank((TDSPFilterBank*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPFilterMap*)(G__getstructoffset()))->GetAnalysisBank());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPFilterMap*)(G__getstructoffset()))->GetSynthesisBank());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TDSPFilterMap*)(G__getstructoffset()))->GetBlockLen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFilterMap*)(G__getstructoffset()))->SetMatrix((TDSPMatrix*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPFilterMap*)(G__getstructoffset()))->GetMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFilterMap*)(G__getstructoffset()))->SetInverseMatrix((TDSPMatrix*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPFilterMap*)(G__getstructoffset()))->GetInverseMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPFilterMap*)(G__getstructoffset()))->Synthesize((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPFilterMap*)(G__getstructoffset()))->Synthesize((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPFilterMap*)(G__getstructoffset()))->Analyze((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPFilterMap*)(G__getstructoffset()))->Analyze((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFilterMap*)(G__getstructoffset()))->LoadAndInitFromProtoType((Option_t*)G__int(libp->para[0]),(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFilterMap*)(G__getstructoffset()))->Print();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPFilterMap*)(G__getstructoffset()))->Update((TDSPSignal*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPFilterMap*)(G__getstructoffset()))->InverseUpdate((TDSPSignal*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPFilterMap::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPFilterMap::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPFilterMap::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPFilterMap::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPFilterMap*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFilterMap*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFilterMap*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFilterMap*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPFilterMap::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPFilterMap::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPFilterMap::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_390_6_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPFilterMap::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_390_7_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPFilterMap *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPFilterMap(*(TDSPFilterMap*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPFilterMap);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPFilterMap G__TTDSPFilterMap;
static int G__BaseDict_390_8_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPFilterMap *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPFilterMap *)((G__getstructoffset())+sizeof(TDSPFilterMap)*i);
   else  delete (TDSPFilterMap *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPFMT */
static int G__BaseDict_391_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPFMT *p=NULL;
   switch(libp->paran) {
   case 1:
      p = new TDSPFMT((char*)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TDSPFMT[G__getaryconstruct()];
   else                    p=new TDSPFMT;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPFMT);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_391_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((TDSPFMT*)(G__getstructoffset()))->GetNumCarriers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_391_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFMT*)(G__getstructoffset()))->SetNumCarriers((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_391_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPFMT*)(G__getstructoffset()))->GetTransmitMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_391_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPFMT*)(G__getstructoffset()))->GetReceiverMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_391_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,85,(long)((TDSPFMT*)(G__getstructoffset()))->GetTransmitPulse((TDSPVector*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TDSPFMT*)(G__getstructoffset()))->GetTransmitPulse());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_391_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,85,(long)((TDSPFMT*)(G__getstructoffset()))->GetReceiverPulse((TDSPVector*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TDSPFMT*)(G__getstructoffset()))->GetReceiverPulse());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_391_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFMT*)(G__getstructoffset()))->SetTransmitMatrix((TDSPMatrix*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_391_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFMT*)(G__getstructoffset()))->SetReceiverMatrix((TDSPMatrix*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_391_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFMT*)(G__getstructoffset()))->SetOption((Option_t*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_391_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__setnull(result7);
      ((TDSPFMT*)(G__getstructoffset()))->LoadPulses((char*)G__int(libp->para[0]),(char*)G__int(libp->para[1])
,(char*)G__int(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TDSPFMT*)(G__getstructoffset()))->LoadPulses((char*)G__int(libp->para[0]),(char*)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TDSPFMT*)(G__getstructoffset()))->LoadPulses((char*)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_391_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__setnull(result7);
      ((TDSPFMT*)(G__getstructoffset()))->SavePulses((char*)G__int(libp->para[0]),(char*)G__int(libp->para[1])
,(char*)G__int(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TDSPFMT*)(G__getstructoffset()))->SavePulses((char*)G__int(libp->para[0]),(char*)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TDSPFMT*)(G__getstructoffset()))->SavePulses((char*)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_391_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPFMT*)(G__getstructoffset()))->Update((TDSPSignal*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_391_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPFMT*)(G__getstructoffset()))->InverseUpdate((TDSPSignal*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_391_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPFMT::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_391_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPFMT::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_391_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPFMT::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_391_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPFMT::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_391_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPFMT*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_391_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFMT*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_391_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFMT*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_391_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPFMT*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_391_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPFMT::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_391_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPFMT::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_391_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPFMT::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_391_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPFMT::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_391_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPFMT *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPFMT(*(TDSPFMT*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TDSPFMT);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPFMT G__TTDSPFMT;
static int G__BaseDict_391_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPFMT *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPFMT *)((G__getstructoffset())+sizeof(TDSPFMT)*i);
   else  delete (TDSPFMT *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMaple */
static int G__BaseDict_392_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMaple *p=NULL;
   if(G__getaryconstruct()) p=new TMaple[G__getaryconstruct()];
   else                    p=new TMaple;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TMaple);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_392_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((TMaple*)(G__getstructoffset()))->Get((char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_392_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((TMaple*)(G__getstructoffset()))->Put((char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_392_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMaple::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_392_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMaple::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_392_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMaple::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_392_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMaple::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_392_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMaple*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_392_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMaple*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_392_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMaple*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_392_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMaple*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_392_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMaple::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_392_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMaple::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_392_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMaple::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict_392_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMaple::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BaseDict_392_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TMaple *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TMaple(*(TMaple*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__BaseDictLN_TMaple);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMaple G__TTMaple;
static int G__BaseDict_392_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMaple *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TMaple *)((G__getstructoffset())+sizeof(TMaple)*i);
   else  delete (TMaple *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */
static int G__BaseDict__7_45(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const istream& obj=operator>>(*(istream*)libp->para[0].ref,*(TDSPFifo*)libp->para[1].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict__8_45(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const ostream& obj=operator<<(*(ostream*)libp->para[0].ref,*(TDSPFifo*)libp->para[1].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict__9_45(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const istream& obj=operator>>(*(istream*)libp->para[0].ref,(TDSPFifo*)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict__0_46(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const ostream& obj=operator<<(*(ostream*)libp->para[0].ref,(TDSPFifo*)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict__1_46(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
   G__letint(result7,85,(long)filter((TDSPFifo*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]),(TDSPVector*)G__int(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)filter((TDSPFifo*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict__2_46(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      {
        TComplex *pobj,xobj=filter((TDSPFifo*)G__int(libp->para[0]),(TDSPFifo*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]),(TDSPVector*)G__int(libp->para[3]));
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
      break;
   case 3:
      {
        TComplex *pobj,xobj=filter((TDSPFifo*)G__int(libp->para[0]),(TDSPFifo*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]));
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict__4_46(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const istream& obj=operator>>(*(istream*)libp->para[0].ref,*(TDSPSignal*)libp->para[1].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict__5_46(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const ostream& obj=operator<<(*(ostream*)libp->para[0].ref,*(TDSPSignal*)libp->para[1].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict__6_46(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const istream& obj=operator>>(*(istream*)libp->para[0].ref,(TDSPSignal*)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict__7_46(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const ostream& obj=operator<<(*(ostream*)libp->para[0].ref,(TDSPSignal*)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict__5_47(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)Modulator((Option_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)Modulator((Option_t*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict__0_48(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)fft((TDSPVector*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)fft((TDSPVector*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)fft((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict__1_48(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)ifft((TDSPVector*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)ifft((TDSPVector*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)ifft((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict__2_48(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)fft((TDSPMatrix*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(TDSPMatrix*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)fft((TDSPMatrix*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict__3_48(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)ifft((TDSPMatrix*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(TDSPMatrix*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)ifft((TDSPMatrix*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict__4_48(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)blockfft((TDSPVector*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)blockfft((TDSPVector*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict__5_48(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)blockifft((TDSPVector*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)blockifft((TDSPVector*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict__6_48(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)CheckEnter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict__7_48(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)dB((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict__8_48(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)FromdB((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BaseDict__9_48(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)operator==(*(TDSPSource*)libp->para[0].ref,*(TDSPSource*)libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}


/*********************************************************
* Member function Stub
*********************************************************/

/* TDSPData */

/* TDSPSignal */

/* TDSPFifo */

/* TDSPOperator */

/* TDSPGenerator */

/* TDSPSpectrum */

/* TDSPOutput1 */

/* TDSPHarmonicGenerator */

/* TDSPRating */

/* TDSPFilter */

/* TDSPFifoFilter */

/* TDSPSymbolGenerator */

/* TDSPStochasticProcess */

/* TDSPStochasticScalar */

/* TDSPStatistics */

/* TDSPBlockFifo */

/* TDSPBlockFifoFilter */

/* TDSPStochasticSignal */

/* TDSPfft */

/* TDSPGroup */

/* TDSPConvolution */

/* TDSPChop */

/* TDSPBlockfft */

/* TDSPBlockMap */

/* TDSPSignalDump */

/* TDSPReadSignal */

/* TDSPPsk */

/* TDSPSignalStudy */

/* TDSPQam */

/* TDSPPam */

/* TDSPOfdm */

/* TDSPStft */

/* TDSPNofdm */

/* TDSPInt */

/* TDSPFilterBank */

/* TDSPCorrelationFilter */

/* TDSPMath */

/* TDSPJakes */

/* TDSPFunction */

/* TDSPClip */

/* TDSPBlockSolve */

/* TDSPEstimator */

/* TDSPLmmse */

/* TDSPFastBpsk */

/* TDSPFastQpsk */

/* TDSPModulation */

/* TDSPWienerProcess */

/* TDSPMonitor */

/* TDSPSource */

/* TDSPFilterMap */

/* TDSPFMT */

/* TMaple */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncBaseDict {
 public:
  G__Sizep2memfuncBaseDict() {p=&G__Sizep2memfuncBaseDict::sizep2memfunc;}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncBaseDict::*p)();
};

size_t G__get_sizep2memfuncBaseDict()
{
  G__Sizep2memfuncBaseDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */
static long G__2vbo_TDSPFilter_TDSPRating_0(long pobject) {
  TDSPFilter *G__Lderived=(TDSPFilter*)pobject;
  TDSPRating *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_TDSPFilterBank_TDSPRating_2(long pobject) {
  TDSPFilterBank *G__Lderived=(TDSPFilterBank*)pobject;
  TDSPRating *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_TDSPCorrelationFilter_TDSPFilter_0(long pobject) {
  TDSPCorrelationFilter *G__Lderived=(TDSPCorrelationFilter*)pobject;
  TDSPFilter *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_TDSPCorrelationFilter_TDSPRating_1(long pobject) {
  TDSPCorrelationFilter *G__Lderived=(TDSPCorrelationFilter*)pobject;
  TDSPRating *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_TDSPJakes_TDSPFilter_1(long pobject) {
  TDSPJakes *G__Lderived=(TDSPJakes*)pobject;
  TDSPFilter *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_TDSPJakes_TDSPRating_2(long pobject) {
  TDSPJakes *G__Lderived=(TDSPJakes*)pobject;
  TDSPRating *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}


/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceBaseDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPData))) {
     TDSPData *G__Lderived;
     G__Lderived=(TDSPData*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPData),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal))) {
     TDSPSignal *G__Lderived;
     G__Lderived=(TDSPSignal*)0x1000;
     {
       TDSPMatrix *G__Lpbase=(TDSPMatrix*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDSPVector *G__Lpbase=(TDSPVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),G__get_linked_tagnum(&G__BaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPOperator))) {
     TDSPOperator *G__Lderived;
     G__Lderived=(TDSPOperator*)0x1000;
     {
       TQQObject *G__Lpbase=(TQQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPOperator),G__get_linked_tagnum(&G__BaseDictLN_TQQObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPOperator),G__get_linked_tagnum(&G__BaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPOperator),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObjSender *G__Lpbase=(TQObjSender*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPOperator),G__get_linked_tagnum(&G__BaseDictLN_TQObjSender),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPOperator),G__get_linked_tagnum(&G__BaseDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPSpectrum))) {
     TDSPSpectrum *G__Lderived;
     G__Lderived=(TDSPSpectrum*)0x1000;
     {
       TDSPData *G__Lpbase=(TDSPData*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSpectrum),G__get_linked_tagnum(&G__BaseDictLN_TDSPData),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSpectrum),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPOutput1))) {
     TDSPOutput1 *G__Lderived;
     G__Lderived=(TDSPOutput1*)0x1000;
     {
       TDSPOperator *G__Lpbase=(TDSPOperator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPOutput1),G__get_linked_tagnum(&G__BaseDictLN_TDSPOperator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TQQObject *G__Lpbase=(TQQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPOutput1),G__get_linked_tagnum(&G__BaseDictLN_TQQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPOutput1),G__get_linked_tagnum(&G__BaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPOutput1),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObjSender *G__Lpbase=(TQObjSender*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPOutput1),G__get_linked_tagnum(&G__BaseDictLN_TQObjSender),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPOutput1),G__get_linked_tagnum(&G__BaseDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPHarmonicGenerator))) {
     TDSPHarmonicGenerator *G__Lderived;
     G__Lderived=(TDSPHarmonicGenerator*)0x1000;
     {
       TDSPGenerator *G__Lpbase=(TDSPGenerator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPHarmonicGenerator),G__get_linked_tagnum(&G__BaseDictLN_TDSPGenerator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDSPOutput1 *G__Lpbase=(TDSPOutput1*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPHarmonicGenerator),G__get_linked_tagnum(&G__BaseDictLN_TDSPOutput1),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDSPOperator *G__Lpbase=(TDSPOperator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPHarmonicGenerator),G__get_linked_tagnum(&G__BaseDictLN_TDSPOperator),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQQObject *G__Lpbase=(TQQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPHarmonicGenerator),G__get_linked_tagnum(&G__BaseDictLN_TQQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPHarmonicGenerator),G__get_linked_tagnum(&G__BaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPHarmonicGenerator),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObjSender *G__Lpbase=(TQObjSender*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPHarmonicGenerator),G__get_linked_tagnum(&G__BaseDictLN_TQObjSender),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPHarmonicGenerator),G__get_linked_tagnum(&G__BaseDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPFilter))) {
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFilter),G__get_linked_tagnum(&G__BaseDictLN_TDSPRating),(long)G__2vbo_TDSPFilter_TDSPRating_0,1,3);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPSymbolGenerator))) {
     TDSPSymbolGenerator *G__Lderived;
     G__Lderived=(TDSPSymbolGenerator*)0x1000;
     {
       TDSPOutput1 *G__Lpbase=(TDSPOutput1*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSymbolGenerator),G__get_linked_tagnum(&G__BaseDictLN_TDSPOutput1),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDSPOperator *G__Lpbase=(TDSPOperator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSymbolGenerator),G__get_linked_tagnum(&G__BaseDictLN_TDSPOperator),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQQObject *G__Lpbase=(TQQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSymbolGenerator),G__get_linked_tagnum(&G__BaseDictLN_TQQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSymbolGenerator),G__get_linked_tagnum(&G__BaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSymbolGenerator),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObjSender *G__Lpbase=(TQObjSender*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSymbolGenerator),G__get_linked_tagnum(&G__BaseDictLN_TQObjSender),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSymbolGenerator),G__get_linked_tagnum(&G__BaseDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPStochasticProcess))) {
     TDSPStochasticProcess *G__Lderived;
     G__Lderived=(TDSPStochasticProcess*)0x1000;
     {
       TDSPRating *G__Lpbase=(TDSPRating*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPStochasticProcess),G__get_linked_tagnum(&G__BaseDictLN_TDSPRating),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPStochasticScalar))) {
     TDSPStochasticScalar *G__Lderived;
     G__Lderived=(TDSPStochasticScalar*)0x1000;
     {
       TDSPStochasticProcess *G__Lpbase=(TDSPStochasticProcess*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPStochasticScalar),G__get_linked_tagnum(&G__BaseDictLN_TDSPStochasticProcess),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDSPRating *G__Lpbase=(TDSPRating*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPStochasticScalar),G__get_linked_tagnum(&G__BaseDictLN_TDSPRating),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockFifo))) {
     TDSPBlockFifo *G__Lderived;
     G__Lderived=(TDSPBlockFifo*)0x1000;
     {
       TDSPOutput1 *G__Lpbase=(TDSPOutput1*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockFifo),G__get_linked_tagnum(&G__BaseDictLN_TDSPOutput1),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDSPOperator *G__Lpbase=(TDSPOperator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockFifo),G__get_linked_tagnum(&G__BaseDictLN_TDSPOperator),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQQObject *G__Lpbase=(TQQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockFifo),G__get_linked_tagnum(&G__BaseDictLN_TQQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockFifo),G__get_linked_tagnum(&G__BaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockFifo),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObjSender *G__Lpbase=(TQObjSender*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockFifo),G__get_linked_tagnum(&G__BaseDictLN_TQObjSender),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockFifo),G__get_linked_tagnum(&G__BaseDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TDSPFifo *G__Lpbase=(TDSPFifo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockFifo),G__get_linked_tagnum(&G__BaseDictLN_TDSPFifo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPStochasticSignal))) {
     TDSPStochasticSignal *G__Lderived;
     G__Lderived=(TDSPStochasticSignal*)0x1000;
     {
       TDSPSignal *G__Lpbase=(TDSPSignal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPStochasticSignal),G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDSPMatrix *G__Lpbase=(TDSPMatrix*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPStochasticSignal),G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TDSPVector *G__Lpbase=(TDSPVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPStochasticSignal),G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPStochasticSignal),G__get_linked_tagnum(&G__BaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPStochasticSignal),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TDSPStochasticProcess *G__Lpbase=(TDSPStochasticProcess*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPStochasticSignal),G__get_linked_tagnum(&G__BaseDictLN_TDSPStochasticProcess),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDSPRating *G__Lpbase=(TDSPRating*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPStochasticSignal),G__get_linked_tagnum(&G__BaseDictLN_TDSPRating),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPfft))) {
     TDSPfft *G__Lderived;
     G__Lderived=(TDSPfft*)0x1000;
     {
       TDSPOperator *G__Lpbase=(TDSPOperator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPfft),G__get_linked_tagnum(&G__BaseDictLN_TDSPOperator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TQQObject *G__Lpbase=(TQQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPfft),G__get_linked_tagnum(&G__BaseDictLN_TQQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPfft),G__get_linked_tagnum(&G__BaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPfft),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObjSender *G__Lpbase=(TQObjSender*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPfft),G__get_linked_tagnum(&G__BaseDictLN_TQObjSender),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPfft),G__get_linked_tagnum(&G__BaseDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPGroup))) {
     TDSPGroup *G__Lderived;
     G__Lderived=(TDSPGroup*)0x1000;
     {
       TDSPOperator *G__Lpbase=(TDSPOperator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPGroup),G__get_linked_tagnum(&G__BaseDictLN_TDSPOperator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TQQObject *G__Lpbase=(TQQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPGroup),G__get_linked_tagnum(&G__BaseDictLN_TQQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPGroup),G__get_linked_tagnum(&G__BaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPGroup),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObjSender *G__Lpbase=(TQObjSender*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPGroup),G__get_linked_tagnum(&G__BaseDictLN_TQObjSender),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPGroup),G__get_linked_tagnum(&G__BaseDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPConvolution))) {
     TDSPConvolution *G__Lderived;
     G__Lderived=(TDSPConvolution*)0x1000;
     {
       TDSPOutput1 *G__Lpbase=(TDSPOutput1*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPConvolution),G__get_linked_tagnum(&G__BaseDictLN_TDSPOutput1),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDSPOperator *G__Lpbase=(TDSPOperator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPConvolution),G__get_linked_tagnum(&G__BaseDictLN_TDSPOperator),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQQObject *G__Lpbase=(TQQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPConvolution),G__get_linked_tagnum(&G__BaseDictLN_TQQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPConvolution),G__get_linked_tagnum(&G__BaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPConvolution),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObjSender *G__Lpbase=(TQObjSender*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPConvolution),G__get_linked_tagnum(&G__BaseDictLN_TQObjSender),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPConvolution),G__get_linked_tagnum(&G__BaseDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TDSPBlockOperation *G__Lpbase=(TDSPBlockOperation*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPConvolution),G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockOperation),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPChop))) {
     TDSPChop *G__Lderived;
     G__Lderived=(TDSPChop*)0x1000;
     {
       TDSPOutput1 *G__Lpbase=(TDSPOutput1*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPChop),G__get_linked_tagnum(&G__BaseDictLN_TDSPOutput1),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDSPOperator *G__Lpbase=(TDSPOperator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPChop),G__get_linked_tagnum(&G__BaseDictLN_TDSPOperator),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQQObject *G__Lpbase=(TQQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPChop),G__get_linked_tagnum(&G__BaseDictLN_TQQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPChop),G__get_linked_tagnum(&G__BaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPChop),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObjSender *G__Lpbase=(TQObjSender*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPChop),G__get_linked_tagnum(&G__BaseDictLN_TQObjSender),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPChop),G__get_linked_tagnum(&G__BaseDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockfft))) {
     TDSPBlockfft *G__Lderived;
     G__Lderived=(TDSPBlockfft*)0x1000;
     {
       TDSPfft *G__Lpbase=(TDSPfft*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockfft),G__get_linked_tagnum(&G__BaseDictLN_TDSPfft),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDSPOperator *G__Lpbase=(TDSPOperator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockfft),G__get_linked_tagnum(&G__BaseDictLN_TDSPOperator),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQQObject *G__Lpbase=(TQQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockfft),G__get_linked_tagnum(&G__BaseDictLN_TQQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockfft),G__get_linked_tagnum(&G__BaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockfft),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObjSender *G__Lpbase=(TQObjSender*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockfft),G__get_linked_tagnum(&G__BaseDictLN_TQObjSender),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockfft),G__get_linked_tagnum(&G__BaseDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TDSPBlockOperation *G__Lpbase=(TDSPBlockOperation*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockfft),G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockOperation),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockMap))) {
     TDSPBlockMap *G__Lderived;
     G__Lderived=(TDSPBlockMap*)0x1000;
     {
       TDSPOperator *G__Lpbase=(TDSPOperator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockMap),G__get_linked_tagnum(&G__BaseDictLN_TDSPOperator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TQQObject *G__Lpbase=(TQQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockMap),G__get_linked_tagnum(&G__BaseDictLN_TQQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockMap),G__get_linked_tagnum(&G__BaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockMap),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObjSender *G__Lpbase=(TQObjSender*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockMap),G__get_linked_tagnum(&G__BaseDictLN_TQObjSender),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockMap),G__get_linked_tagnum(&G__BaseDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TDSPBlockOperation *G__Lpbase=(TDSPBlockOperation*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockMap),G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockOperation),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPSignalDump))) {
     TDSPSignalDump *G__Lderived;
     G__Lderived=(TDSPSignalDump*)0x1000;
     {
       TDSPOperator *G__Lpbase=(TDSPOperator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSignalDump),G__get_linked_tagnum(&G__BaseDictLN_TDSPOperator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TQQObject *G__Lpbase=(TQQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSignalDump),G__get_linked_tagnum(&G__BaseDictLN_TQQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSignalDump),G__get_linked_tagnum(&G__BaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSignalDump),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObjSender *G__Lpbase=(TQObjSender*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSignalDump),G__get_linked_tagnum(&G__BaseDictLN_TQObjSender),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSignalDump),G__get_linked_tagnum(&G__BaseDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPReadSignal))) {
     TDSPReadSignal *G__Lderived;
     G__Lderived=(TDSPReadSignal*)0x1000;
     {
       TDSPOutput1 *G__Lpbase=(TDSPOutput1*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPReadSignal),G__get_linked_tagnum(&G__BaseDictLN_TDSPOutput1),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDSPOperator *G__Lpbase=(TDSPOperator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPReadSignal),G__get_linked_tagnum(&G__BaseDictLN_TDSPOperator),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQQObject *G__Lpbase=(TQQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPReadSignal),G__get_linked_tagnum(&G__BaseDictLN_TQQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPReadSignal),G__get_linked_tagnum(&G__BaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPReadSignal),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObjSender *G__Lpbase=(TQObjSender*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPReadSignal),G__get_linked_tagnum(&G__BaseDictLN_TQObjSender),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPReadSignal),G__get_linked_tagnum(&G__BaseDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TDSPGenerator *G__Lpbase=(TDSPGenerator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPReadSignal),G__get_linked_tagnum(&G__BaseDictLN_TDSPGenerator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPPsk))) {
     TDSPPsk *G__Lderived;
     G__Lderived=(TDSPPsk*)0x1000;
     {
       TDSPSymbolGenerator *G__Lpbase=(TDSPSymbolGenerator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPPsk),G__get_linked_tagnum(&G__BaseDictLN_TDSPSymbolGenerator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDSPOutput1 *G__Lpbase=(TDSPOutput1*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPPsk),G__get_linked_tagnum(&G__BaseDictLN_TDSPOutput1),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TDSPOperator *G__Lpbase=(TDSPOperator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPPsk),G__get_linked_tagnum(&G__BaseDictLN_TDSPOperator),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQQObject *G__Lpbase=(TQQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPPsk),G__get_linked_tagnum(&G__BaseDictLN_TQQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPPsk),G__get_linked_tagnum(&G__BaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPPsk),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObjSender *G__Lpbase=(TQObjSender*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPPsk),G__get_linked_tagnum(&G__BaseDictLN_TQObjSender),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPPsk),G__get_linked_tagnum(&G__BaseDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPSignalStudy))) {
     TDSPSignalStudy *G__Lderived;
     G__Lderived=(TDSPSignalStudy*)0x1000;
     {
       TDSPOutput1 *G__Lpbase=(TDSPOutput1*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSignalStudy),G__get_linked_tagnum(&G__BaseDictLN_TDSPOutput1),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDSPOperator *G__Lpbase=(TDSPOperator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSignalStudy),G__get_linked_tagnum(&G__BaseDictLN_TDSPOperator),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQQObject *G__Lpbase=(TQQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSignalStudy),G__get_linked_tagnum(&G__BaseDictLN_TQQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSignalStudy),G__get_linked_tagnum(&G__BaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSignalStudy),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObjSender *G__Lpbase=(TQObjSender*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSignalStudy),G__get_linked_tagnum(&G__BaseDictLN_TQObjSender),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSignalStudy),G__get_linked_tagnum(&G__BaseDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TDSPBlockOperation *G__Lpbase=(TDSPBlockOperation*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSignalStudy),G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockOperation),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPQam))) {
     TDSPQam *G__Lderived;
     G__Lderived=(TDSPQam*)0x1000;
     {
       TDSPSymbolGenerator *G__Lpbase=(TDSPSymbolGenerator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPQam),G__get_linked_tagnum(&G__BaseDictLN_TDSPSymbolGenerator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDSPOutput1 *G__Lpbase=(TDSPOutput1*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPQam),G__get_linked_tagnum(&G__BaseDictLN_TDSPOutput1),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TDSPOperator *G__Lpbase=(TDSPOperator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPQam),G__get_linked_tagnum(&G__BaseDictLN_TDSPOperator),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQQObject *G__Lpbase=(TQQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPQam),G__get_linked_tagnum(&G__BaseDictLN_TQQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPQam),G__get_linked_tagnum(&G__BaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPQam),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObjSender *G__Lpbase=(TQObjSender*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPQam),G__get_linked_tagnum(&G__BaseDictLN_TQObjSender),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPQam),G__get_linked_tagnum(&G__BaseDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPPam))) {
     TDSPPam *G__Lderived;
     G__Lderived=(TDSPPam*)0x1000;
     {
       TDSPSymbolGenerator *G__Lpbase=(TDSPSymbolGenerator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPPam),G__get_linked_tagnum(&G__BaseDictLN_TDSPSymbolGenerator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDSPOutput1 *G__Lpbase=(TDSPOutput1*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPPam),G__get_linked_tagnum(&G__BaseDictLN_TDSPOutput1),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TDSPOperator *G__Lpbase=(TDSPOperator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPPam),G__get_linked_tagnum(&G__BaseDictLN_TDSPOperator),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQQObject *G__Lpbase=(TQQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPPam),G__get_linked_tagnum(&G__BaseDictLN_TQQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPPam),G__get_linked_tagnum(&G__BaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPPam),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObjSender *G__Lpbase=(TQObjSender*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPPam),G__get_linked_tagnum(&G__BaseDictLN_TQObjSender),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPPam),G__get_linked_tagnum(&G__BaseDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPOfdm))) {
     TDSPOfdm *G__Lderived;
     G__Lderived=(TDSPOfdm*)0x1000;
     {
       TDSPBlockfft *G__Lpbase=(TDSPBlockfft*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPOfdm),G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockfft),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDSPfft *G__Lpbase=(TDSPfft*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPOfdm),G__get_linked_tagnum(&G__BaseDictLN_TDSPfft),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TDSPOperator *G__Lpbase=(TDSPOperator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPOfdm),G__get_linked_tagnum(&G__BaseDictLN_TDSPOperator),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQQObject *G__Lpbase=(TQQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPOfdm),G__get_linked_tagnum(&G__BaseDictLN_TQQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPOfdm),G__get_linked_tagnum(&G__BaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPOfdm),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObjSender *G__Lpbase=(TQObjSender*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPOfdm),G__get_linked_tagnum(&G__BaseDictLN_TQObjSender),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPOfdm),G__get_linked_tagnum(&G__BaseDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TDSPBlockOperation *G__Lpbase=(TDSPBlockOperation*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPOfdm),G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockOperation),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPStft))) {
     TDSPStft *G__Lderived;
     G__Lderived=(TDSPStft*)0x1000;
     {
       TDSPfft *G__Lpbase=(TDSPfft*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPStft),G__get_linked_tagnum(&G__BaseDictLN_TDSPfft),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDSPOperator *G__Lpbase=(TDSPOperator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPStft),G__get_linked_tagnum(&G__BaseDictLN_TDSPOperator),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQQObject *G__Lpbase=(TQQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPStft),G__get_linked_tagnum(&G__BaseDictLN_TQQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPStft),G__get_linked_tagnum(&G__BaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPStft),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObjSender *G__Lpbase=(TQObjSender*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPStft),G__get_linked_tagnum(&G__BaseDictLN_TQObjSender),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPStft),G__get_linked_tagnum(&G__BaseDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPNofdm))) {
     TDSPNofdm *G__Lderived;
     G__Lderived=(TDSPNofdm*)0x1000;
     {
       TDSPBlockMap *G__Lpbase=(TDSPBlockMap*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPNofdm),G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockMap),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDSPOperator *G__Lpbase=(TDSPOperator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPNofdm),G__get_linked_tagnum(&G__BaseDictLN_TDSPOperator),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQQObject *G__Lpbase=(TQQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPNofdm),G__get_linked_tagnum(&G__BaseDictLN_TQQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPNofdm),G__get_linked_tagnum(&G__BaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPNofdm),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObjSender *G__Lpbase=(TQObjSender*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPNofdm),G__get_linked_tagnum(&G__BaseDictLN_TQObjSender),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPNofdm),G__get_linked_tagnum(&G__BaseDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TDSPBlockOperation *G__Lpbase=(TDSPBlockOperation*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPNofdm),G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockOperation),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPInt))) {
     TDSPInt *G__Lderived;
     G__Lderived=(TDSPInt*)0x1000;
     {
       TRint *G__Lpbase=(TRint*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPInt),G__get_linked_tagnum(&G__BaseDictLN_TRint),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TApplication *G__Lpbase=(TApplication*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPInt),G__get_linked_tagnum(&G__BaseDictLN_TApplication),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPInt),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPInt),G__get_linked_tagnum(&G__BaseDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPFilterBank))) {
     TDSPFilterBank *G__Lderived;
     G__Lderived=(TDSPFilterBank*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFilterBank),G__get_linked_tagnum(&G__BaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFilterBank),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFilterBank),G__get_linked_tagnum(&G__BaseDictLN_TDSPRating),(long)G__2vbo_TDSPFilterBank_TDSPRating_2,1,3);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPCorrelationFilter))) {
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPCorrelationFilter),G__get_linked_tagnum(&G__BaseDictLN_TDSPFilter),(long)G__2vbo_TDSPCorrelationFilter_TDSPFilter_0,1,3);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPCorrelationFilter),G__get_linked_tagnum(&G__BaseDictLN_TDSPRating),(long)G__2vbo_TDSPCorrelationFilter_TDSPRating_1,1,2);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPJakes))) {
     TDSPJakes *G__Lderived;
     G__Lderived=(TDSPJakes*)0x1000;
     {
       TDSPCorrelationFilter *G__Lpbase=(TDSPCorrelationFilter*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPJakes),G__get_linked_tagnum(&G__BaseDictLN_TDSPCorrelationFilter),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPJakes),G__get_linked_tagnum(&G__BaseDictLN_TDSPFilter),(long)G__2vbo_TDSPJakes_TDSPFilter_1,1,2);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPJakes),G__get_linked_tagnum(&G__BaseDictLN_TDSPRating),(long)G__2vbo_TDSPJakes_TDSPRating_2,1,2);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPFunction))) {
     TDSPFunction *G__Lderived;
     G__Lderived=(TDSPFunction*)0x1000;
     {
       TDSPOutput1 *G__Lpbase=(TDSPOutput1*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFunction),G__get_linked_tagnum(&G__BaseDictLN_TDSPOutput1),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDSPOperator *G__Lpbase=(TDSPOperator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFunction),G__get_linked_tagnum(&G__BaseDictLN_TDSPOperator),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQQObject *G__Lpbase=(TQQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFunction),G__get_linked_tagnum(&G__BaseDictLN_TQQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFunction),G__get_linked_tagnum(&G__BaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFunction),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObjSender *G__Lpbase=(TQObjSender*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFunction),G__get_linked_tagnum(&G__BaseDictLN_TQObjSender),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFunction),G__get_linked_tagnum(&G__BaseDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPClip))) {
     TDSPClip *G__Lderived;
     G__Lderived=(TDSPClip*)0x1000;
     {
       TDSPFunction *G__Lpbase=(TDSPFunction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPClip),G__get_linked_tagnum(&G__BaseDictLN_TDSPFunction),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDSPOutput1 *G__Lpbase=(TDSPOutput1*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPClip),G__get_linked_tagnum(&G__BaseDictLN_TDSPOutput1),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TDSPOperator *G__Lpbase=(TDSPOperator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPClip),G__get_linked_tagnum(&G__BaseDictLN_TDSPOperator),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQQObject *G__Lpbase=(TQQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPClip),G__get_linked_tagnum(&G__BaseDictLN_TQQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPClip),G__get_linked_tagnum(&G__BaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPClip),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObjSender *G__Lpbase=(TQObjSender*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPClip),G__get_linked_tagnum(&G__BaseDictLN_TQObjSender),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPClip),G__get_linked_tagnum(&G__BaseDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockSolve))) {
     TDSPBlockSolve *G__Lderived;
     G__Lderived=(TDSPBlockSolve*)0x1000;
     {
       TDSPOutput1 *G__Lpbase=(TDSPOutput1*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockSolve),G__get_linked_tagnum(&G__BaseDictLN_TDSPOutput1),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDSPOperator *G__Lpbase=(TDSPOperator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockSolve),G__get_linked_tagnum(&G__BaseDictLN_TDSPOperator),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQQObject *G__Lpbase=(TQQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockSolve),G__get_linked_tagnum(&G__BaseDictLN_TQQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockSolve),G__get_linked_tagnum(&G__BaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockSolve),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObjSender *G__Lpbase=(TQObjSender*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockSolve),G__get_linked_tagnum(&G__BaseDictLN_TQObjSender),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockSolve),G__get_linked_tagnum(&G__BaseDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TDSPBlockOperation *G__Lpbase=(TDSPBlockOperation*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockSolve),G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockOperation),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPEstimator))) {
     TDSPEstimator *G__Lderived;
     G__Lderived=(TDSPEstimator*)0x1000;
     {
       TQQObject *G__Lpbase=(TQQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPEstimator),G__get_linked_tagnum(&G__BaseDictLN_TQQObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPEstimator),G__get_linked_tagnum(&G__BaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPEstimator),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObjSender *G__Lpbase=(TQObjSender*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPEstimator),G__get_linked_tagnum(&G__BaseDictLN_TQObjSender),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPEstimator),G__get_linked_tagnum(&G__BaseDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPLmmse))) {
     TDSPLmmse *G__Lderived;
     G__Lderived=(TDSPLmmse*)0x1000;
     {
       TDSPEstimator *G__Lpbase=(TDSPEstimator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPLmmse),G__get_linked_tagnum(&G__BaseDictLN_TDSPEstimator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TQQObject *G__Lpbase=(TQQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPLmmse),G__get_linked_tagnum(&G__BaseDictLN_TQQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPLmmse),G__get_linked_tagnum(&G__BaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPLmmse),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObjSender *G__Lpbase=(TQObjSender*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPLmmse),G__get_linked_tagnum(&G__BaseDictLN_TQObjSender),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPLmmse),G__get_linked_tagnum(&G__BaseDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPFastBpsk))) {
     TDSPFastBpsk *G__Lderived;
     G__Lderived=(TDSPFastBpsk*)0x1000;
     {
       TDSPPsk *G__Lpbase=(TDSPPsk*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFastBpsk),G__get_linked_tagnum(&G__BaseDictLN_TDSPPsk),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDSPSymbolGenerator *G__Lpbase=(TDSPSymbolGenerator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFastBpsk),G__get_linked_tagnum(&G__BaseDictLN_TDSPSymbolGenerator),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TDSPOutput1 *G__Lpbase=(TDSPOutput1*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFastBpsk),G__get_linked_tagnum(&G__BaseDictLN_TDSPOutput1),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TDSPOperator *G__Lpbase=(TDSPOperator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFastBpsk),G__get_linked_tagnum(&G__BaseDictLN_TDSPOperator),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQQObject *G__Lpbase=(TQQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFastBpsk),G__get_linked_tagnum(&G__BaseDictLN_TQQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFastBpsk),G__get_linked_tagnum(&G__BaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFastBpsk),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObjSender *G__Lpbase=(TQObjSender*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFastBpsk),G__get_linked_tagnum(&G__BaseDictLN_TQObjSender),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFastBpsk),G__get_linked_tagnum(&G__BaseDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPFastQpsk))) {
     TDSPFastQpsk *G__Lderived;
     G__Lderived=(TDSPFastQpsk*)0x1000;
     {
       TDSPPsk *G__Lpbase=(TDSPPsk*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFastQpsk),G__get_linked_tagnum(&G__BaseDictLN_TDSPPsk),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDSPSymbolGenerator *G__Lpbase=(TDSPSymbolGenerator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFastQpsk),G__get_linked_tagnum(&G__BaseDictLN_TDSPSymbolGenerator),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TDSPOutput1 *G__Lpbase=(TDSPOutput1*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFastQpsk),G__get_linked_tagnum(&G__BaseDictLN_TDSPOutput1),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TDSPOperator *G__Lpbase=(TDSPOperator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFastQpsk),G__get_linked_tagnum(&G__BaseDictLN_TDSPOperator),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQQObject *G__Lpbase=(TQQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFastQpsk),G__get_linked_tagnum(&G__BaseDictLN_TQQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFastQpsk),G__get_linked_tagnum(&G__BaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFastQpsk),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObjSender *G__Lpbase=(TQObjSender*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFastQpsk),G__get_linked_tagnum(&G__BaseDictLN_TQObjSender),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFastQpsk),G__get_linked_tagnum(&G__BaseDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPModulation))) {
     TDSPModulation *G__Lderived;
     G__Lderived=(TDSPModulation*)0x1000;
     {
       TDSPOutput1 *G__Lpbase=(TDSPOutput1*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPModulation),G__get_linked_tagnum(&G__BaseDictLN_TDSPOutput1),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDSPOperator *G__Lpbase=(TDSPOperator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPModulation),G__get_linked_tagnum(&G__BaseDictLN_TDSPOperator),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQQObject *G__Lpbase=(TQQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPModulation),G__get_linked_tagnum(&G__BaseDictLN_TQQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPModulation),G__get_linked_tagnum(&G__BaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPModulation),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObjSender *G__Lpbase=(TQObjSender*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPModulation),G__get_linked_tagnum(&G__BaseDictLN_TQObjSender),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPModulation),G__get_linked_tagnum(&G__BaseDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TDSPBlockOperation *G__Lpbase=(TDSPBlockOperation*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPModulation),G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockOperation),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPWienerProcess))) {
     TDSPWienerProcess *G__Lderived;
     G__Lderived=(TDSPWienerProcess*)0x1000;
     {
       TDSPOutput1 *G__Lpbase=(TDSPOutput1*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPWienerProcess),G__get_linked_tagnum(&G__BaseDictLN_TDSPOutput1),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDSPOperator *G__Lpbase=(TDSPOperator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPWienerProcess),G__get_linked_tagnum(&G__BaseDictLN_TDSPOperator),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQQObject *G__Lpbase=(TQQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPWienerProcess),G__get_linked_tagnum(&G__BaseDictLN_TQQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPWienerProcess),G__get_linked_tagnum(&G__BaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPWienerProcess),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObjSender *G__Lpbase=(TQObjSender*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPWienerProcess),G__get_linked_tagnum(&G__BaseDictLN_TQObjSender),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPWienerProcess),G__get_linked_tagnum(&G__BaseDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPMonitor))) {
     TDSPMonitor *G__Lderived;
     G__Lderived=(TDSPMonitor*)0x1000;
     {
       TDSPOperator *G__Lpbase=(TDSPOperator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPMonitor),G__get_linked_tagnum(&G__BaseDictLN_TDSPOperator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TQQObject *G__Lpbase=(TQQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPMonitor),G__get_linked_tagnum(&G__BaseDictLN_TQQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPMonitor),G__get_linked_tagnum(&G__BaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPMonitor),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObjSender *G__Lpbase=(TQObjSender*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPMonitor),G__get_linked_tagnum(&G__BaseDictLN_TQObjSender),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPMonitor),G__get_linked_tagnum(&G__BaseDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TDSPBlockOperation *G__Lpbase=(TDSPBlockOperation*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPMonitor),G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockOperation),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPSource))) {
     TDSPSource *G__Lderived;
     G__Lderived=(TDSPSource*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSource),G__get_linked_tagnum(&G__BaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSource),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPFilterMap))) {
     TDSPFilterMap *G__Lderived;
     G__Lderived=(TDSPFilterMap*)0x1000;
     {
       TDSPOperator *G__Lpbase=(TDSPOperator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFilterMap),G__get_linked_tagnum(&G__BaseDictLN_TDSPOperator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TQQObject *G__Lpbase=(TQQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFilterMap),G__get_linked_tagnum(&G__BaseDictLN_TQQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFilterMap),G__get_linked_tagnum(&G__BaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFilterMap),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObjSender *G__Lpbase=(TQObjSender*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFilterMap),G__get_linked_tagnum(&G__BaseDictLN_TQObjSender),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFilterMap),G__get_linked_tagnum(&G__BaseDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TDSPBlockOperation *G__Lpbase=(TDSPBlockOperation*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFilterMap),G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockOperation),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TDSPFMT))) {
     TDSPFMT *G__Lderived;
     G__Lderived=(TDSPFMT*)0x1000;
     {
       TDSPFilterMap *G__Lpbase=(TDSPFilterMap*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFMT),G__get_linked_tagnum(&G__BaseDictLN_TDSPFilterMap),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDSPOperator *G__Lpbase=(TDSPOperator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFMT),G__get_linked_tagnum(&G__BaseDictLN_TDSPOperator),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQQObject *G__Lpbase=(TQQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFMT),G__get_linked_tagnum(&G__BaseDictLN_TQQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFMT),G__get_linked_tagnum(&G__BaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFMT),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObjSender *G__Lpbase=(TQObjSender*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFMT),G__get_linked_tagnum(&G__BaseDictLN_TQObjSender),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFMT),G__get_linked_tagnum(&G__BaseDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TDSPBlockOperation *G__Lpbase=(TDSPBlockOperation*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFMT),G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockOperation),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BaseDictLN_TMaple))) {
     TMaple *G__Lderived;
     G__Lderived=(TMaple*)0x1000;
     {
       TQQObject *G__Lpbase=(TQQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TMaple),G__get_linked_tagnum(&G__BaseDictLN_TQQObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TMaple),G__get_linked_tagnum(&G__BaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TMaple),G__get_linked_tagnum(&G__BaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObjSender *G__Lpbase=(TQObjSender*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TMaple),G__get_linked_tagnum(&G__BaseDictLN_TQObjSender),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BaseDictLN_TMaple),G__get_linked_tagnum(&G__BaseDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableBaseDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,
-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,
-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Double_t",100,-1,0,
-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,
-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,
-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,
-1);
   G__setnewtype(-1,"Option string (const char)",0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TDSPData */
static void G__setup_memvarTDSPData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPData));
   { TDSPData *p; p=(TDSPData*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* eXCorr_Options */

   /* TDSPSignal */
static void G__setup_memvarTDSPSignal(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal));
   { TDSPSignal *p; p=(TDSPSignal*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TString),-1,-1,2,"fName=",0,"signal name");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TString),-1,-1,2,"fTitle=",0,"signal title");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPFifo */
static void G__setup_memvarTDSPFifo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFifo));
   { TDSPFifo *p; p=(TDSPFifo*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fDepth=",0,"The Size/Depth of the Fifo");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIndex=",0,"The actual index in the Fifo (is the top value)");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fFill=",0,"The Fill Status of the Fifo");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TComplex),-1,-1,2,"fBlock=",0,"! The Fifo Memory itself");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-2,2,"fPerLine=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPOperator */
static void G__setup_memvarTDSPOperator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPOperator));
   { TDSPOperator *p; p=(TDSPOperator*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fInitialized=",0,"Is this Operator already initialized ?");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TCanvas),-1,-1,2,"fDebugWindow=",0,"/< For Debugging ...");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPGenerator */
static void G__setup_memvarTDSPGenerator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPGenerator));
   { TDSPGenerator *p; p=(TDSPGenerator*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPSpectrum */
static void G__setup_memvarTDSPSpectrum(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSpectrum));
   { TDSPSpectrum *p; p=(TDSPSpectrum*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Num=",0,"!");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TComplex),-1,-1,4,"Frequencies=",0,"!");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TComplex),-1,-1,4,"Amplitudes=",0,"!");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMinAlloc=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fAllocHighScale=",0,"Alloc more memory we really need to avoid many alloc if we resize the block ");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fAllocLowScale=",0,"Alloc more memory we really need to avoid many alloc if we resize the block ");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fAllocedNum=",0,"! Size of intern alloced data blocks");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TComplex),-1,-1,4,"fAllocedFrequencies=",0,"! ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TComplex),-1,-1,4,"fAllocedAmplitudes=",0,"!");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPOutput1 */
static void G__setup_memvarTDSPOutput1(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPOutput1));
   { TDSPOutput1 *p; p=(TDSPOutput1*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsActive=",0,"Active / InActive");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fBits=",0,"Some Option Bits");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,-1,2,"fSignal=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TString),-1,-1,2,"Signal_NewData=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TString),-1,-1,2,"Slot_Update=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPHarmonicGenerator */
static void G__setup_memvarTDSPHarmonicGenerator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPHarmonicGenerator));
   { TDSPHarmonicGenerator *p; p=(TDSPHarmonicGenerator*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPSpectrum),-1,-1,4,"Spectrum=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TString),-1,-1,2,"Slot_Generate=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPRating */
static void G__setup_memvarTDSPRating(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPRating));
   { TDSPRating *p; p=(TDSPRating*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRate=",0,"The Rate of the Process");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fRelativeRate=",0,"what was the last relative rate (input-rate/fRate)                 ");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRelativeRateMean=",0,"what is the mean relative rate");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRelativeRateSigma=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fRateIndex=",0,"Counter (due to diffenent sampling rates, Representation holds)");
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPFilter */
static void G__setup_memvarTDSPFilter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFilter));
   { TDSPFilter *p; p=(TDSPFilter*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fNorm=",0,"the Norm of the filter ");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fNormalized=",0,"is the Filter already normalized ?");
   G__memvar_setup((void*)((long)(&p->fFIR)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,-1,1,"fFIR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fIIR)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,-1,1,"fIIR=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPFifoFilter */
static void G__setup_memvarTDSPFifoFilter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFifoFilter));
   { TDSPFifoFilter *p; p=(TDSPFifoFilter*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPFilter),-1,-1,2,"fFilter=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPFifo),-1,-1,2,"fInput=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPFifo),-1,-1,2,"fOutput=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* eStochasticType */

   /* eEstimateNumSymbols */

   /* TDSPSymbolGenerator */
static void G__setup_memvarTDSPSymbolGenerator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSymbolGenerator));
   { TDSPSymbolGenerator *p; p=(TDSPSymbolGenerator*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fAnalysed=",0,"Is there Analysed Data already ?");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fDumpOptions=",0,"Dump options during simnulation");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fOptions=",0,"Options");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_G__longlong),G__defined_typename("Long64_t"),-1,2,"fAnalyseGrid=",0,"how many detected symbols should analysed together ");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_G__longlong),G__defined_typename("Long64_t"),-1,2,"fNumAnalysed=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNumSymbols=",0,"Number of possible Symbols ");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fProbs=",0,"!  the probs of their occurence");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDetectSigmas=",0,"!  the variance ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,-1,2,"fDecisionSignal=",0,"! Signal on what the final decision was made (after corrections)");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNumISymbols=",0,"!  the number of last generated symbol indicies");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNumISymbolsAlloc=",0,"!  really alloced space fISymbols");
   G__memvar_setup((void*)NULL,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fISymbols=",0,"!  the last generated Symbol indices");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDetectProbs=",0,"!  the props of the last detection");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TComplex),-1,-1,2,"fGlobalCorrection=",0,"/< global correction (for phase+gain control)");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TComplex),-1,-1,2,"fCorrection=",0,"/<   dynamic correction (updated via tracking)");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fCorrectionTrackingInterval=",0,"/< correction tracking interval");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fCorrectionTrackingIndex=",0,"/< the actual correction tracking index");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,-1,2,"fReferenceSignal=",0,"/< A reference signal - normally the clean signal without noise");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TString),-1,-1,2,"Slot_Generate=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TString),-1,-1,2,"Slot_Update=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TString),-1,-1,2,"Slot_ReferenceUpdate=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMinDistance=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMeanDistance=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fVarianceDistance=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fQWeightedDistance=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fQWeightedVarianceDistance=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"_recalc_distances=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fSymbols)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TComplex),-1,-1,1,"fSymbols=",0,"!  The Symbol Alphabet");
   G__memvar_setup((void*)((long)(&p->fYields)-(long)(p)),73,0,0,-1,G__defined_typename("Int_t"),-1,1,"fYields=",0,"!  fNumSymbols x fNumSymbols Matrix ");
   G__memvar_setup((void*)((long)(&p->fMisIdentified)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fMisIdentified=",0,"number of misidentifications");
   G__memvar_setup((void*)((long)(&p->fInEfficiency)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fInEfficiency=",0,"Inefficiency");
   G__memvar_setup((void*)((long)(&p->fdInEfficiency)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fdInEfficiency=",0,"abs. Error of Inefficiency");
   G__memvar_setup((void*)((long)(&p->fNoisePower)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fNoisePower=",0,"Noise Power");
   G__memvar_setup((void*)((long)(&p->fSignalPower)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fSignalPower=",0,"sent Signal Power");
   G__memvar_setup((void*)((long)(&p->fReceivedPower)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fReceivedPower=",0,"received Signal Power");
   G__memvar_setup((void*)((long)(&p->fAttentuation)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TComplex),-1,-1,1,"fAttentuation=",0,"the mean attentuation and phase rotation");
   G__memvar_setup((void*)((long)(&p->fSINR)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fSINR=",0,"SINR in dB");
   G__memvar_setup((void*)((long)(&p->fLogSER)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fLogSER=",0,"LogSER ");
   G__memvar_setup((void*)((long)(&p->fdLogSER)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fdLogSER=",0,"Error of LogSER");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPStochasticProcess */
static void G__setup_memvarTDSPStochasticProcess(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPStochasticProcess));
   { TDSPStochasticProcess *p; p=(TDSPStochasticProcess*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,G__get_linked_tagnum(&G__BaseDictLN_eStochasticType),-1,-1,2,"fMode=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TComplex),-1,-1,2,"fSigmas=",0,"!");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TComplex),-1,-1,2,"fMeans=",0,"!  (means)/offsets of Stochastic Signals(additiv) / or the filter input");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPStochasticScalar */
static void G__setup_memvarTDSPStochasticScalar(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPStochasticScalar));
   { TDSPStochasticScalar *p; p=(TDSPStochasticScalar*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TComplex),-1,-1,2,"fValue=",0,"The actual Representation of the Scalar ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPFifoFilter),-1,-1,2,"fFifoFilter=",0,"Fifo Filter for correlated output");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPStatistics */
static void G__setup_memvarTDSPStatistics(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPStatistics));
   { TDSPStatistics *p; p=(TDSPStatistics*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPBlockFifo */
static void G__setup_memvarTDSPBlockFifo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockFifo));
   { TDSPBlockFifo *p; p=(TDSPBlockFifo*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fWidth=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPBlockFifoFilter */
static void G__setup_memvarTDSPBlockFifoFilter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockFifoFilter));
   { TDSPBlockFifoFilter *p; p=(TDSPBlockFifoFilter*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPFilter),-1,-1,2,"fFilter=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fWidth=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockFifo),-1,-1,2,"fInput=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockFifo),-1,-1,2,"fOutput=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPStochasticSignal */
static void G__setup_memvarTDSPStochasticSignal(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPStochasticSignal));
   { TDSPStochasticSignal *p; p=(TDSPStochasticSignal*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,-1,2,"fARMAInput=",0,"the place for the ARMA Filter input");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockFifoFilter),-1,-1,2,"fFifoFilter=",0,"a Filter to produce correlated Stochastics");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fAllocedNumMeans=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRepresentation=",0,"the actual representation");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fVecChanged=",0,"Does fVec really has been changed (or its size) ?");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPfft */
static void G__setup_memvarTDSPfft(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPfft));
   { TDSPfft *p; p=(TDSPfft*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-2,2,"fFFTW=",0,"/< do we have the fftw-library ? ");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fDim=",0,"/< The Dimension ('r','R',1 or 'c','C',2) for the fft of incoming signals");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fOverSampling=",0,"/< Oversampling factor (zeropadding in ifft for >1)");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fCyclicPrefix=",0,"/< The Cyclic Prefix = number of element from end inserted at the beginning ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,-1,2,"fFFT_Signal=",0,"/< the fft signal-vector");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,-1,2,"fIFFT_Signal=",0,"/< the ifft signal-vector");
   G__memvar_setup((void*)NULL,89,0,0,-1,-1,-1,2,"fftw_vec=",0,"!");
   G__memvar_setup((void*)NULL,89,0,0,-1,-1,-1,2,"fftw_plan_forward=",0,"!");
   G__memvar_setup((void*)NULL,89,0,0,-1,-1,-1,2,"fftw_plan_backward=",0,"!");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TString),-1,-1,2,"Slot_FFT=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TString),-1,-1,2,"Slot_IFFT=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TString),-1,-1,2,"Signal_FFT=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TString),-1,-1,2,"Signal_IFFT=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,103,0,0,-1,G__defined_typename("Bool_t"),-2,1,"_fftw_destroy_plans=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPGroup */
static void G__setup_memvarTDSPGroup(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPGroup));
   { TDSPGroup *p; p=(TDSPGroup*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TList),-1,-1,4,"fListOfOperators=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPConvolution */
static void G__setup_memvarTDSPConvolution(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPConvolution));
   { TDSPConvolution *p; p=(TDSPConvolution*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fBlockLen=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fConvOptions=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TString),-1,-1,2,"Slot_Response=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TString),-1,-1,2,"Slot_StochasticResponse=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ResponseFunction)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,-1,1,"ResponseFunction=",0,"/< fixed impulse response for convolution");
   G__memvar_setup((void*)((long)(&p->StochasticResponseFunction)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPStochasticSignal),-1,-1,1,"StochasticResponseFunction=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPChop */
static void G__setup_memvarTDSPChop(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPChop));
   { TDSPChop *p; p=(TDSPChop*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fSignalLength=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fFilled=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPBlockfft */
static void G__setup_memvarTDSPBlockfft(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockfft));
   { TDSPBlockfft *p; p=(TDSPBlockfft*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fBlockLen=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPBlockMap */
static void G__setup_memvarTDSPBlockMap(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockMap));
   { TDSPBlockMap *p; p=(TDSPBlockMap*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,G__get_linked_tagnum(&G__BaseDictLN_eMatrixApplyMode),-1,-1,2,"fMAMode=",0,"How to apply the Matrix");
   G__memvar_setup((void*)NULL,105,0,0,G__get_linked_tagnum(&G__BaseDictLN_eMatrixApplyMode),-1,-1,2,"fMAModeInverse=",0,"How to apply the Inverse Matrix");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TString),-1,-1,2,"Signal_Update=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TString),-1,-1,2,"Signal_InverseUpdate=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TString),-1,-1,2,"Slot_Update=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TString),-1,-1,2,"Slot_InverseUpdate=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,-1,2,"fSignal=",0,"The Output Signal return by a Apply-Call");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,-1,2,"fInverseSignal=",0,"The Output Signal return by a InverseApply-Call");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix),-1,-1,2,"fMatrix=",0,"The Matrix to multiply on the input stream");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix),-1,-1,2,"fPseudoInverseMatrix=",0,"The Matrix to multiply on the return stream");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* eSignalDumpMode */

   /* TDSPSignalDump */
static void G__setup_memvarTDSPSignalDump(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSignalDump));
   { TDSPSignalDump *p; p=(TDSPSignalDump*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ostream"),-1,4,"os=",0,"!");
   G__memvar_setup((void*)NULL,105,0,0,G__get_linked_tagnum(&G__BaseDictLN_eSignalDumpMode),-1,-1,2,"fMode=",0,"Dump Mode");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPause=",0,"Pause (<0 - infinity , >0 in seconds)");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TString),-1,-1,2,"Slot_Update=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPReadSignal */
static void G__setup_memvarTDSPReadSignal(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPReadSignal));
   { TDSPReadSignal *p; p=(TDSPReadSignal*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_basic_istreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("istream"),-1,4,"is=",0,"!");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TString),-1,-1,2,"Slot_Generate=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPPsk */
static void G__setup_memvarTDSPPsk(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPPsk));
   { TDSPPsk *p; p=(TDSPPsk*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPSignalStudy */
static void G__setup_memvarTDSPSignalStudy(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSignalStudy));
   { TDSPSignalStudy *p; p=(TDSPSignalStudy*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fWhat=",0,"What to do ?");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fBlockLen=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,-1,4,"fMean=",0,"!");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,-1,4,"fMaxAbs=",0,"!");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,-1,4,"fCrest=",0,"!");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPQam */
static void G__setup_memvarTDSPQam(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPQam));
   { TDSPQam *p; p=(TDSPQam*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPPam */
static void G__setup_memvarTDSPPam(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPPam));
   { TDSPPam *p; p=(TDSPPam*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPOfdm */
static void G__setup_memvarTDSPOfdm(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPOfdm));
   { TDSPOfdm *p; p=(TDSPOfdm*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fAutoEqualization=",0,"/< Automatic Equalization after FFT ?");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,-1,4,"fEqualization=",0,"/< Contains the equalization vector(for inverse update)  ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPStft */
static void G__setup_memvarTDSPStft(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPStft));
   { TDSPStft *p; p=(TDSPStft*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,-1,2,"fSTFT_Signal=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,-1,2,"fISTFT_Signal=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,-1,2,"fWindow=",0,"The Window-Vector");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,-1,2,"fDualWindow=",0,"The Dual-Window-Vector");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMulti=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fBlockLen=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPNofdm */
static void G__setup_memvarTDSPNofdm(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPNofdm));
   { TDSPNofdm *p; p=(TDSPNofdm*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TString),-1,-1,4,"Delegation_Transmit=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TString),-1,-1,4,"Delegation_Receive=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TString),-1,-1,4,"Delegation_Transmitted=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TString),-1,-1,4,"Delegation_Received=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMode=",0,"Mode BFDM/CORR etc.");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fDual=",0,"Use Dual system ?");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fTight=",0,"Make system tight ?");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fOptions=",0,"Some Options");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNumCarriers=",0,"Number of Carriers / or equivalents");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNumTime=",0,"Number of Time-steps / or equivalents");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTimePad=",0,"/< Timepad \"T\"");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fFreqPad=",0,"/< Freqpad \"F\"");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fLength=",0,"/< Length  \"L\"");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TString),-1,-1,2,"fPulseName=",0,"The Name of pulse");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPulseNumParams=",0,"Number of Parameters to put into the pulse");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPulseParams[4]=",0,"The Pulse-Parameters");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TString),-1,-1,2,"fPulseFile=",0,"The Name of the last used pulse file");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix),-1,-1,2,"fMapping=",0,"/< The complete Mapping (incl. channel) from input to output (G^*H Gamma)");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix),-1,-1,2,"fMappingPart1=",0,"/< The partial Mapping (incl. channel) from input to received (H Gamma)");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix),-1,-1,2,"fCorrelation=",0,"the input<->output correlation");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix),-1,-1,2,"fNoiseCorrelation=",0,"the input<->output correlation for Noise between transmitter and receiver");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix),-1,-1,2,"fTransmitMatrix=",0,"The Transmit Filter");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix),-1,-1,2,"fReceiverMatrix=",0,"The Receiver Filter");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix),-1,-1,2,"fChannel=",0,"A Channel Model ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix),-1,-1,2,"f_PseudoInverseMatrix=",0,"if the class allocs itself the pseudo-inv. matrix we need a copy of the pointer");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"_recalc_correlations=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"_recalc_mapping=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fHistogram_all)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TH1F),-1,-1,1,"fHistogram_all=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fHistogram_diag)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TH1F),-1,-1,1,"fHistogram_diag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fHistogram_nondiag)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TH1F),-1,-1,1,"fHistogram_nondiag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fHistogram_corr_all)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TH1F),-1,-1,1,"fHistogram_corr_all=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fHistogram_corr_diag)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TH1F),-1,-1,1,"fHistogram_corr_diag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fHistogram_corr_nondiag)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TH1F),-1,-1,1,"fHistogram_corr_nondiag=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPInt */
static void G__setup_memvarTDSPInt(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPInt));
   { TDSPInt *p; p=(TDSPInt*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TString),-1,-2,2,"fVersionStr=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPFilterBank */
static void G__setup_memvarTDSPFilterBank(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFilterBank));
   { TDSPFilterBank *p; p=(TDSPFilterBank*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fZero=",0,"/< The Position of the zero in the filters");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNumActive=",0,"/< counts here the number of active filters");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fOpt=",0,"/< several options");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix),-1,-1,2,"fFilterBank=",0,"/< The filters of the filterbank in matrix form");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TArrayI),-1,-1,2,"fSubSamplings=",0,"/< The Subsampling factors (=timepads)");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fMinSubSampling=",0,"/< Minimal Subsampling");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fMaxSubSampling=",0,"/< Maximal Subsampling");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TArrayI),-1,-1,2,"fFilterOptions=",0,"/< Several Options per Filter ");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TString),-1,-1,2,"fMethodStr=",0,"/< a method string describing the method of filter allocation");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fFreqPad=",0,"/< The discrete-time frequency pad");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* eCorrFilterMethod */

   /* TDSPCorrelationFilter */
static void G__setup_memvarTDSPCorrelationFilter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPCorrelationFilter));
   { TDSPCorrelationFilter *p; p=(TDSPCorrelationFilter*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,G__get_linked_tagnum(&G__BaseDictLN_eCorrFilterMethod),-1,-1,2,"fMethod=",0,"The Method");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fAR=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fMA=",0,"Filter-Dimension AR=FIR, MA=IIR (=0 defaults)");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,-1,2,"fCorrelation=",0,"the Signal vector containing the discrete correlation function");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fOptions=",0,"Options");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPMath */
static void G__setup_memvarTDSPMath(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPMath));
   { TDSPMath *p; p=(TDSPMath*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPJakes */
static void G__setup_memvarTDSPJakes(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPJakes));
   { TDSPJakes *p; p=(TDSPJakes*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSpeed=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDopplerFrequency=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCarrierFrequency=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPFunction */
static void G__setup_memvarTDSPFunction(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFunction));
   { TDSPFunction *p; p=(TDSPFunction*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fInputSamplingRate=",0,"The Sampling Rate of the actual input signal");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPClip */
static void G__setup_memvarTDSPClip(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPClip));
   { TDSPClip *p; p=(TDSPClip*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fClipAmplitude=",0,"The Amplitude where to start clipping;");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPBlockSolve */
static void G__setup_memvarTDSPBlockSolve(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockSolve));
   { TDSPBlockSolve *p; p=(TDSPBlockSolve*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPSolver),-1,-1,4,"fSolver=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPEstimator */
static void G__setup_memvarTDSPEstimator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPEstimator));
   { TDSPEstimator *p; p=(TDSPEstimator*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,-1,2,"fEstimate=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPLmmse */
static void G__setup_memvarTDSPLmmse(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPLmmse));
   { TDSPLmmse *p; p=(TDSPLmmse*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix),-1,-1,4,"fEstimatorMatrix=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TComplex),-1,-1,4,"fNoiseScaler=",0,"a Scaler to the Noise Covariance-Matrix scale * E[nn*]");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix),-1,-1,4,"fNoiseCovariance=",0,"The Noise Covariance-Matrix E[nn*]");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix),-1,-1,4,"fXCovariance=",0,"The Covariance-Matrix of the input data E[xx*] ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix),-1,-1,4,"fH=",0,"The Matrix H in y=Hx+n");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix),-1,-1,4,"fHCxHStar=",0,"this H Cx H^*");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix),-1,-1,4,"fPost=",0,"Postmultiplication (from right) ...");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"_recalc1=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"_recalc2=",0,"several recalculation steps");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"_my_x_matrix=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"_my_noise_matrix=",0,"internal or external matrices ??");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPFastBpsk */
static void G__setup_memvarTDSPFastBpsk(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFastBpsk));
   { TDSPFastBpsk *p; p=(TDSPFastBpsk*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPFastQpsk */
static void G__setup_memvarTDSPFastQpsk(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFastQpsk));
   { TDSPFastQpsk *p; p=(TDSPFastQpsk*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPModulation */
static void G__setup_memvarTDSPModulation(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPModulation));
   { TDSPModulation *p; p=(TDSPModulation*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fBlockLen=",0,"Burst len");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TComplex),-1,-1,2,"fFrequency=",0,"The Modulation Frequency");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhase=",0,"the initial phase");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fBurstOff=",0,"the burst offset");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPWienerProcess */
static void G__setup_memvarTDSPWienerProcess(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPWienerProcess));
   { TDSPWienerProcess *p; p=(TDSPWienerProcess*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fVariance=",0,"the Variance");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fBurstlen=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fBurstOff=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhase=",0,"Start Phase");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPMonitor */
static void G__setup_memvarTDSPMonitor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPMonitor));
   { TDSPMonitor *p; p=(TDSPMonitor*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TString),-1,-1,2,"Slot_Update=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TList),-1,-1,2,"fSignalList=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fBlockLen=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fMSE)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,-1,1,"fMSE=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPSource */
static void G__setup_memvarTDSPSource(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSource));
   { TDSPSource *p; p=(TDSPSource*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TQQObject),-1,-1,2,"fSender=",0,"!");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,-1,2,"fSignal=",0,"!");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPFilterMap */
static void G__setup_memvarTDSPFilterMap(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFilterMap));
   { TDSPFilterMap *p; p=(TDSPFilterMap*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fOpt=",0,"Options");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPFilterBank),-1,-1,2,"fSynthesisBank=",0,"! Synthesis Filterbank");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPFilterBank),-1,-1,2,"fAnalysisBank=",0,"! Analysis Filterbank ");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TString),-1,-1,2,"Signal_Update=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TString),-1,-1,2,"Signal_InverseUpdate=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TString),-1,-1,2,"Slot_Update=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TString),-1,-1,2,"Slot_InverseUpdate=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,-1,2,"fSignal=",0,"The Output Signal return by a Apply-Call");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,-1,2,"fInverseSignal=",0,"The Output Signal return by a InverseApply-Call");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPFMT */
static void G__setup_memvarTDSPFMT(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFMT));
   { TDSPFMT *p; p=(TDSPFMT*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TString),-1,-1,4,"Delegation_Transmit=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TString),-1,-1,4,"Delegation_Receive=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TString),-1,-1,4,"Delegation_Transmitted=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__BaseDictLN_TString),-1,-1,4,"Delegation_Received=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMaple */
static void G__setup_memvarTMaple(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BaseDictLN_TMaple));
   { TMaple *p; p=(TMaple*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fd_in=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fd_out=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPid=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,67,0,0,-1,-1,-1,4,"fBuffer=",0,"!");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarBaseDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTDSPData(void) {
   /* TDSPData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPData));
   G__memfunc_setup("TDSPData",693,G__BaseDict_205_0_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPData),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__BaseDict_205_2_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_205_3_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_205_4_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_205_5_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_205_6_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_205_7_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_205_8_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_205_9_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_205_0_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_205_1_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_205_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_205_3_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPData",693,G__BaseDict_205_4_1,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPData),-1,0,1,1,1,0,"u 'TDSPData' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPData",819,G__BaseDict_205_5_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPSignal(void) {
   /* TDSPSignal */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal));
   G__memfunc_setup("TDSPSignal",921,G__BaseDict_255_0_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,1,1,1,0,"i - 'Int_t' 0 0 len",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDSPSignal",921,G__BaseDict_255_1_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,2,1,1,0,
"i - 'Int_t' 0 - rows i - 'Int_t' 0 - cols",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDSPSignal",921,G__BaseDict_255_2_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,1,1,1,0,"C - - 0 - name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetName",685,G__BaseDict_255_4_0,121,-1,-1,0,1,1,1,0,"C - - 10 - name","*MENU*",(void*)NULL,1);
   G__memfunc_setup("SetNameTitle",1199,G__BaseDict_255_5_0,121,-1,-1,0,2,1,1,0,
"C - - 10 - name C - - 10 - title",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetTitle",814,G__BaseDict_255_6_0,121,-1,-1,0,1,1,1,0,"C - - 10 \"\" title","*MENU*",(void*)NULL,1);
   G__memfunc_setup("ls",223,G__BaseDict_255_7_0,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Print",525,G__BaseDict_255_8_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetName",673,G__BaseDict_255_9_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetTitle",802,G__BaseDict_255_0_1,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator=",937,G__BaseDict_255_1_1,117,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,1,1,1,1,0,"u 'TDSPFifo' - 1 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__BaseDict_255_2_1,117,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,1,1,1,1,0,"U 'TDSPFifo' - 0 - f",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__BaseDict_255_3_1,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_255_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_255_5_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_255_6_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_255_7_1,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_255_8_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_255_9_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_255_0_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_255_1_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_255_2_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_255_3_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_255_4_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPSignal",921,G__BaseDict_255_5_2,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,1,1,1,0,"u 'TDSPSignal' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPSignal",1047,G__BaseDict_255_6_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPFifo(void) {
   /* TDSPFifo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFifo));
   G__memfunc_setup("Fill",391,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"","Update the Fill Status",(void*)NULL,0);
   G__memfunc_setup("TDSPFifo",703,G__BaseDict_256_1_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPFifo),-1,0,1,1,1,0,"i - 'Int_t' 0 0 depth",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ValuesPerLine",1311,G__BaseDict_256_3_0,121,-1,-1,0,1,3,1,0,"h - 'UInt_t' 0 - p","How many Values to Print per line (using cout...)",(void*)NULL,0);
   G__memfunc_setup("GetIndex",792,G__BaseDict_256_4_0,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"i - 'Int_t' 0 - i","Transform a index into a cyclic index",(void*)NULL,0);
   G__memfunc_setup("GetDepth",789,G__BaseDict_256_5_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"","return the depth of the fifo",(void*)NULL,0);
   G__memfunc_setup("GetFill",679,G__BaseDict_256_6_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"","return the fill depth of the fifo",(void*)NULL,0);
   G__memfunc_setup("GetBlock",779,G__BaseDict_256_7_0,85,G__get_linked_tagnum(&G__BaseDictLN_TComplex),-1,0,0,1,1,8,"","return the Block address of the fifo",(void*)NULL,0);
   G__memfunc_setup("WasFull",702,G__BaseDict_256_8_0,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"","Is and was the Fifo full (for requests after shifts)",(void*)NULL,0);
   G__memfunc_setup("IsFull",591,G__BaseDict_256_9_0,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"","Is the Fifo full now (for request before shifts)",(void*)NULL,0);
   G__memfunc_setup("Reset",515,G__BaseDict_256_0_1,121,-1,-1,0,0,1,1,0,"","reset the fifo",(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__BaseDict_256_1_1,117,G__get_linked_tagnum(&G__BaseDictLN_TComplex),-1,1,0,1,1,0,"","Get/Set the Top Value of the Fifo",(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__BaseDict_256_2_1,117,G__get_linked_tagnum(&G__BaseDictLN_TComplex),-1,1,1,1,1,0,"i - 'Int_t' 0 - i","Get/Set the Value at Depth of \"i\" of the Fifo",(void*)NULL,0);
   G__memfunc_setup("operator[]",1060,G__BaseDict_256_3_1,117,G__get_linked_tagnum(&G__BaseDictLN_TComplex),-1,1,1,1,1,0,"i - 'Int_t' 0 - i","Get/Set the Value at direct position in the fifo (not cycled)",(void*)NULL,0);
   G__memfunc_setup("Print",525,G__BaseDict_256_4_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Input",528,G__BaseDict_256_5_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetIndex",792,G__BaseDict_256_6_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"","return the actual cyclic index (eq. to GetIndex(0))",(void*)NULL,0);
   G__memfunc_setup("Next",415,G__BaseDict_256_7_1,121,-1,-1,0,0,1,1,0,"","next with intern cyclic Index",(void*)NULL,0);
   G__memfunc_setup("Next",415,G__BaseDict_256_8_1,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"i - 'Int_t' 0 - current","next with extern cyclic Index",(void*)NULL,0);
   G__memfunc_setup("Back",369,G__BaseDict_256_9_1,121,-1,-1,0,0,1,1,0,"","back with intern cyclic Index",(void*)NULL,0);
   G__memfunc_setup("Back",369,G__BaseDict_256_0_2,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"i - 'Int_t' 0 - current","back with extern cyclic Index",(void*)NULL,0);
   G__memfunc_setup("Shift",510,G__BaseDict_256_1_2,117,G__get_linked_tagnum(&G__BaseDictLN_TComplex),-1,1,1,1,1,0,"d - 'Double_t' 0 - x",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Shift",510,G__BaseDict_256_2_2,117,G__get_linked_tagnum(&G__BaseDictLN_TComplex),-1,1,1,1,1,0,"u 'TComplex' - 0 - c","Put a new Value on the top of the  Fifo and return the lowest value ",(void*)NULL,0);
   G__memfunc_setup("Shift",510,G__BaseDict_256_3_2,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,0,2,1,1,0,
"U 'TDSPVector' - 0 - input U 'TDSPVector' - 0 - output","Fills from a vector, returns into a vector",(void*)NULL,0);
   G__memfunc_setup("FillFrom",795,G__BaseDict_256_4_2,121,-1,-1,0,1,1,1,0,"U 'TDSPVector' - 0 - input","Fills the fifo from a vector",(void*)NULL,0);
   G__memfunc_setup("FillTo",586,G__BaseDict_256_5_2,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,0,1,1,1,0,"U 'TDSPVector' - 0 NULL output","Fills the content into a vector",(void*)NULL,0);
   G__memfunc_setup("SetDepth",801,G__BaseDict_256_6_2,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - depth","Set the Depth of the Fifo",(void*)NULL,0);
   G__memfunc_setup("Set",300,G__BaseDict_256_7_2,121,-1,-1,0,1,1,1,0,"u 'TComplex' - 11 - c","Set all values of the fifo to c",(void*)NULL,0);
   G__memfunc_setup("Set",300,G__BaseDict_256_8_2,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - d","Set all values of the fifo to c",(void*)NULL,0);
   G__memfunc_setup("Zeros",531,G__BaseDict_256_9_2,121,-1,-1,0,0,1,1,0,"","Set all values of the fifo to 0",(void*)NULL,0);
   G__memfunc_setup("Ones",405,G__BaseDict_256_0_3,121,-1,-1,0,0,1,1,0,"","Set all values of the fifo to 1",(void*)NULL,0);
   G__memfunc_setup("Dot",295,G__BaseDict_256_1_3,117,G__get_linked_tagnum(&G__BaseDictLN_TComplex),-1,0,3,1,1,0,
"U 'TComplex' - 0 - fir_vec g - 'Bool_t' 0 kTRUE conj "
"i - 'Int_t' 0 0 l","Dot-product (conj this?) <this fifo, compl.array> (l=length with 0=fifofill)",(void*)NULL,0);
   G__memfunc_setup("Dot",295,G__BaseDict_256_2_3,117,G__get_linked_tagnum(&G__BaseDictLN_TComplex),-1,0,2,1,1,0,
"U 'TDSPVector' - 0 - fir g - 'Bool_t' 0 kTRUE conj","Dot-product (conj this?) <this fifo, TDSPVector> ",(void*)NULL,0);
   G__memfunc_setup("Dot",295,G__BaseDict_256_3_3,117,G__get_linked_tagnum(&G__BaseDictLN_TComplex),-1,0,2,1,1,0,
"U 'TDSPFifo' - 0 - fir g - 'Bool_t' 0 kTRUE conj","Dot-product (conj this?) <this fifo, other fifo>",(void*)NULL,0);
   G__memfunc_setup("filter",646,G__BaseDict_256_4_3,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,0,3,1,1,0,
"U 'TDSPVector' - 0 - out U 'TDSPVector' - 0 - fir "
"U 'TDSPVector' - 0 NULL iir","Use the fifo-content as a filter input",(void*)NULL,0);
   G__memfunc_setup("Graph",498,G__BaseDict_256_5_3,85,G__get_linked_tagnum(&G__BaseDictLN_TGraph),-1,0,4,1,1,0,
"C - 'Option_t' 10 \"complex\" - U 'TGraph' - 0 NULL in "
"d - 'Double_t' 0 1.0 dx d - 'Double_t' 0 0.0 xoff",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Draw",398,G__BaseDict_256_6_3,121,-1,-1,0,3,1,1,0,
"C - 'Option_t' 10 \"\" - d - 'Double_t' 0 1.0 dx "
"d - 'Double_t' 0 0.0 xoff","*MENU*",(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__BaseDict_256_7_3,117,G__get_linked_tagnum(&G__BaseDictLN_TDSPFifo),-1,1,1,1,1,0,"d - 'Double_t' 10 - x",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__BaseDict_256_8_3,117,G__get_linked_tagnum(&G__BaseDictLN_TDSPFifo),-1,1,1,1,1,0,"u 'TComplex' - 11 - c",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__BaseDict_256_9_3,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_256_0_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_256_1_4,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_256_2_4,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_256_3_4,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_256_4_4,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_256_5_4,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_256_6_4,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_256_7_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_256_8_4,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_256_9_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_256_0_5,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPFifo",703,G__BaseDict_256_1_5,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPFifo),-1,0,1,1,1,0,"u 'TDSPFifo' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPFifo",829,G__BaseDict_256_2_5,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPOperator(void) {
   /* TDSPOperator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPOperator));
   G__memfunc_setup("CheckInitialization",1958,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"","Init the Operator if not yet done already",(void*)NULL,0);
   G__memfunc_setup("DebugGetWindow",1407,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__BaseDictLN_TCanvas),-1,0,1,1,2,0,"C - - 0 - title","/< Opens the debug window    ",(void*)NULL,0);
   G__memfunc_setup("DebugWaitToContinue",1924,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,0,1,2,0,"","/< Waiting for continue (return kFALSE to break the debug mode)",(void*)NULL,0);
   G__memfunc_setup("TDSPOperator",1159,G__BaseDict_333_3_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPOperator),-1,0,1,1,1,0,"C - - 0 NULL name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Emit",399,G__BaseDict_333_5_0,121,-1,-1,0,1,1,1,0,"C - - 10 - signal_name",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Emit",399,G__BaseDict_333_6_0,121,-1,-1,0,2,1,1,0,
"C - - 10 - signal_name U 'TDSPData' - 0 - f",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Emit",399,G__BaseDict_333_7_0,121,-1,-1,0,2,1,1,0,
"C - - 10 - signal_name U 'TDSPVector' - 0 - f",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Emit",399,G__BaseDict_333_8_0,121,-1,-1,0,2,1,1,0,
"C - - 10 - signal_name U 'TDSPMatrix' - 0 - f",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Emit",399,G__BaseDict_333_9_0,121,-1,-1,0,2,1,1,0,
"C - - 10 - signal_name U 'TDSPSignal' - 0 - f",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Emit",399,G__BaseDict_333_0_1,121,-1,-1,0,2,1,1,0,
"C - - 10 - signal_name U 'TDSPOperator' - 0 - o",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("New",298,G__BaseDict_333_1_1,121,-1,-1,0,1,1,1,0,"U 'TDSPOperator' - 0 - o","*SIGNAL*",(void*)NULL,1);
   G__memfunc_setup("Delete",595,G__BaseDict_333_2_1,121,-1,-1,0,1,1,1,0,"U 'TDSPOperator' - 0 - o","*SIGNAL*",(void*)NULL,1);
   G__memfunc_setup("Paint",508,G__BaseDict_333_3_1,121,-1,-1,0,0,1,1,0,"","*SIGNAL*",(void*)NULL,1);
   G__memfunc_setup("NewGControl",1106,G__BaseDict_333_4_1,85,G__get_linked_tagnum(&G__BaseDictLN_TQQGControl),-1,0,0,1,1,0,"","/< opens a new control ",(void*)NULL,1);
   G__memfunc_setup("Reset",515,G__BaseDict_333_5_1,121,-1,-1,0,0,1,1,0,"","*SIGNAL*",(void*)NULL,1);
   G__memfunc_setup("Init",404,G__BaseDict_333_6_1,121,-1,-1,0,0,1,1,0,"","*SIGNAL*",(void*)NULL,1);
   G__memfunc_setup("Class",502,G__BaseDict_333_7_1,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_333_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_333_9_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_333_0_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_333_1_2,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_333_2_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_333_3_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_333_4_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_333_5_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_333_6_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_333_7_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_333_8_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPOperator",1159,G__BaseDict_333_9_2,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPOperator),-1,0,1,1,1,0,"u 'TDSPOperator' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPOperator",1285,G__BaseDict_333_0_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPGenerator(void) {
   /* TDSPGenerator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPGenerator));
   G__memfunc_setup("TDSPGenerator",1250,G__BaseDict_334_0_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPGenerator),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Generate",811,G__BaseDict_334_2_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__BaseDict_334_3_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_334_4_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_334_5_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_334_6_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_334_7_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_334_8_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_334_9_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_334_0_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_334_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_334_2_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_334_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_334_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPGenerator",1250,G__BaseDict_334_5_1,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPGenerator),-1,0,1,1,1,0,"u 'TDSPGenerator' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPGenerator",1376,G__BaseDict_334_6_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPSpectrum(void) {
   /* TDSPSpectrum */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSpectrum));
   G__memfunc_setup("TDSPSpectrum",1166,G__BaseDict_335_0_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPSpectrum),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddFreqAmp",949,G__BaseDict_335_2_0,121,-1,-1,0,2,1,1,0,
"u 'TComplex' - 0 - f u 'TComplex' - 0 - a",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetFreqAmp",984,G__BaseDict_335_3_0,121,-1,-1,0,3,1,1,0,
"i - 'Int_t' 0 - num U 'TComplex' - 0 - f "
"U 'TComplex' - 0 - a",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetNum",604,G__BaseDict_335_4_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNum",592,G__BaseDict_335_5_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetFrequencies",1434,G__BaseDict_335_6_0,85,G__get_linked_tagnum(&G__BaseDictLN_TComplex),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetAmplitudes",1336,G__BaseDict_335_7_0,85,G__get_linked_tagnum(&G__BaseDictLN_TComplex),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__BaseDict_335_8_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_335_9_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_335_0_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_335_1_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_335_2_1,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_335_3_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_335_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_335_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_335_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_335_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_335_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_335_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPSpectrum",1166,G__BaseDict_335_0_2,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPSpectrum),-1,0,1,1,1,0,"u 'TDSPSpectrum' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPSpectrum",1292,G__BaseDict_335_1_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPOutput1(void) {
   /* TDSPOutput1 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPOutput1));
   G__memfunc_setup("TDSPOutput1",1021,G__BaseDict_336_0_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPOutput1),-1,0,1,1,1,0,"C - - 0 NULL name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Print",525,G__BaseDict_336_2_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetCanOverwrite",1541,G__BaseDict_336_3_0,121,-1,-1,0,0,1,1,0,"","Set - overwrite of the output is possible",(void*)NULL,0);
   G__memfunc_setup("ClearCanOverwrite",1728,G__BaseDict_336_4_0,121,-1,-1,0,0,1,1,0,"","Clear - overwrite of the output is not possible",(void*)NULL,0);
   G__memfunc_setup("CanOverWrite",1209,G__BaseDict_336_5_0,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"","overwriting of the output possible ?",(void*)NULL,0);
   G__memfunc_setup("Connect",714,G__BaseDict_336_6_0,103,-1,G__defined_typename("Bool_t"),0,3,1,1,0,
"C - - 10 - signal U 'TNamed' - 0 - receiver "
"C - - 10 - slot",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Connect",714,G__BaseDict_336_7_0,103,-1,G__defined_typename("Bool_t"),0,2,1,1,0,
"U 'TQQObject' - 0 - receiver C - - 10 NULL slot",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Connect",714,G__BaseDict_336_8_0,103,-1,G__defined_typename("Bool_t"),0,3,1,1,0,
"C - - 10 - signal U 'TQQObject' - 0 - receiver "
"C - - 10 NULL slot",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Update",611,G__BaseDict_336_9_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,1,1,1,0,"U 'TDSPSignal' - 0 - input",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Browse",626,G__BaseDict_336_0_1,121,-1,-1,0,1,1,1,0,"U 'TBrowser' - 0 NULL b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetSignal",894,G__BaseDict_336_1_1,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetSignal",906,G__BaseDict_336_2_1,121,-1,-1,0,1,1,1,0,"U 'TDSPSignal' - 0 - s",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Activate",817,G__BaseDict_336_3_1,121,-1,-1,0,0,1,1,0,"","*MENU*",(void*)NULL,0);
   G__memfunc_setup("Deactivate",1018,G__BaseDict_336_4_1,121,-1,-1,0,0,1,1,0,"","*MENU*",(void*)NULL,0);
   G__memfunc_setup("Class",502,G__BaseDict_336_5_1,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_336_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_336_7_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_336_8_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_336_9_1,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_336_0_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_336_1_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_336_2_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_336_3_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_336_4_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_336_5_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_336_6_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPOutput1",1021,G__BaseDict_336_7_2,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPOutput1),-1,0,1,1,1,0,"u 'TDSPOutput1' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPOutput1",1147,G__BaseDict_336_8_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPHarmonicGenerator(void) {
   /* TDSPHarmonicGenerator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPHarmonicGenerator));
   G__memfunc_setup("Fill",391,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDSPHarmonicGenerator",2067,G__BaseDict_337_1_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPHarmonicGenerator),-1,0,1,1,1,0,"C - - 0 - name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("RegisterSignalsAndSlots",2366,G__BaseDict_337_3_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetSpectrum",1139,G__BaseDict_337_4_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSpectrum),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetSignalLength",1516,G__BaseDict_337_5_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - num",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Generate",811,G__BaseDict_337_6_0,121,-1,-1,0,0,1,1,0,"","*SIGNAL*",(void*)NULL,0);
   G__memfunc_setup("Class",502,G__BaseDict_337_7_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_337_8_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_337_9_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_337_0_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_337_1_1,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_337_2_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_337_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_337_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_337_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_337_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_337_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_337_8_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPHarmonicGenerator",2067,G__BaseDict_337_9_1,(int)('i'),
G__get_linked_tagnum(&G__BaseDictLN_TDSPHarmonicGenerator),-1,0,1,1,1,0,"u 'TDSPHarmonicGenerator' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPHarmonicGenerator",2193,G__BaseDict_337_0_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPRating(void) {
   /* TDSPRating */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPRating));
   G__memfunc_setup("Next",415,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"","Next entry",(void*)NULL,0);
   G__memfunc_setup("NewRelativeRate",1522,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,0,1,2,0,"","New Relative Rate",(void*)NULL,0);
   G__memfunc_setup("TDSPRating",928,G__BaseDict_338_2_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPRating),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetRate",696,G__BaseDict_338_4_0,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - -","Set the Rate for the Stochastic Process",(void*)NULL,0);
   G__memfunc_setup("GetRate",684,G__BaseDict_338_5_0,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"","Get the Rate for the Stochastic Process",(void*)NULL,0);
   G__memfunc_setup("GetRelativeRate",1512,G__BaseDict_338_6_0,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"","Get mean of the relative ratings",(void*)NULL,0);
   G__memfunc_setup("SetRateSigma",1193,G__BaseDict_338_7_0,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - s","Set the Sigma",(void*)NULL,0);
   G__memfunc_setup("GetRateSigma",1181,G__BaseDict_338_8_0,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"","Get the Sigma",(void*)NULL,0);
   G__memfunc_setup("GetLastRelativeRate",1916,G__BaseDict_338_9_0,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"","get the last relative rating",(void*)NULL,0);
   G__memfunc_setup("ResetRating",1128,G__BaseDict_338_0_1,121,-1,-1,0,0,1,1,0,"","Reset the Rating",(void*)NULL,0);
   G__memfunc_setup("IsRate",584,G__BaseDict_338_1_1,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"","Do we have to change the representation ",(void*)NULL,0);
   G__memfunc_setup("PrepareRate",1115,G__BaseDict_338_2_1,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - r","Prepare the Rating to application on a signal sampled at a rate \"r\"",(void*)NULL,1);
   G__memfunc_setup("Class",502,G__BaseDict_338_3_1,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_338_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_338_5_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_338_6_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_338_7_1,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_338_8_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_338_9_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_338_0_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_338_1_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_338_2_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_338_3_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_338_4_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPRating",928,G__BaseDict_338_5_2,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPRating),-1,0,1,1,1,0,"u 'TDSPRating' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPRating",1054,G__BaseDict_338_6_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPFilter(void) {
   /* TDSPFilter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFilter));
   G__memfunc_setup("GetNorm",700,G__BaseDict_339_0_0,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"","Return the Norm of the Filter",(void*)NULL,0);
   G__memfunc_setup("SetNorm",712,G__BaseDict_339_1_0,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - n","Set the Norm of the Filter",(void*)NULL,0);
   G__memfunc_setup("Normalize",945,G__BaseDict_339_2_0,121,-1,-1,0,0,1,1,0,"","Normalize the Filter",(void*)NULL,0);
   G__memfunc_setup("IsNormalized",1233,G__BaseDict_339_3_0,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"","Is the Filter already normalized ?",(void*)NULL,0);
   G__memfunc_setup("TDSPFilter",929,G__BaseDict_339_4_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPFilter),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetFIR",513,G__BaseDict_339_6_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetIIR",516,G__BaseDict_339_7_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("FIR",225,G__BaseDict_339_8_0,121,-1,-1,0,1,1,1,0,"U 'TDSPVector' - 0 - fir","specify the FIR Filter (vector of coefficients)",(void*)NULL,0);
   G__memfunc_setup("IIR",228,G__BaseDict_339_9_0,121,-1,-1,0,1,1,1,0,"U 'TDSPVector' - 0 - iir","specify the IIR Filter (vector of coefficients)",(void*)NULL,0);
   G__memfunc_setup("filter",646,G__BaseDict_339_0_1,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,0,2,1,1,0,
"U 'TDSPVector' - 0 - input U 'TDSPVector' - 0 NULL output",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("filter",646,G__BaseDict_339_1_1,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,0,2,1,1,0,
"U 'TDSPFifo' - 0 - input U 'TDSPVector' - 0 NULL output",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("filter",646,G__BaseDict_339_2_1,117,G__get_linked_tagnum(&G__BaseDictLN_TComplex),-1,0,2,1,1,0,
"U 'TDSPFifo' - 0 - input U 'TDSPFifo' - 0 - output",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__BaseDict_339_3_1,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_339_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_339_5_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_339_6_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_339_7_1,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_339_8_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_339_9_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_339_0_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_339_1_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_339_2_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_339_3_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_339_4_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPFilter",929,G__BaseDict_339_5_2,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPFilter),-1,0,1,1,1,0,"u 'TDSPFilter' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPFilter",1055,G__BaseDict_339_6_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPFifoFilter(void) {
   /* TDSPFifoFilter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFifoFilter));
   G__memfunc_setup("TDSPFifoFilter",1317,G__BaseDict_340_0_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPFifoFilter),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetInputFifo",1204,G__BaseDict_340_2_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPFifo),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetOutputFifo",1333,G__BaseDict_340_3_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPFifo),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetFilter",914,G__BaseDict_340_4_0,121,-1,-1,0,1,1,1,0,"U 'TDSPFilter' - 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetFilter",902,G__BaseDict_340_5_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPFilter),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Reset",515,G__BaseDict_340_6_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("filter",646,G__BaseDict_340_7_0,117,G__get_linked_tagnum(&G__BaseDictLN_TComplex),-1,0,1,1,1,0,"u 'TComplex' - 0 - input",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetRate",684,G__BaseDict_340_8_0,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__BaseDict_340_9_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_340_0_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_340_1_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_340_2_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_340_3_1,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_340_4_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_340_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_340_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_340_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_340_8_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_340_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_340_0_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("filter",646,G__BaseDict_340_1_2,117,G__get_linked_tagnum(&G__BaseDictLN_TComplex),-1,0,1,1,1,0,"u 'TComplex' - 10 - input",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPFifoFilter",1317,G__BaseDict_340_2_2,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPFifoFilter),-1,0,1,1,1,0,"u 'TDSPFifoFilter' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPFifoFilter",1443,G__BaseDict_340_3_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPSymbolGenerator(void) {
   /* TDSPSymbolGenerator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSymbolGenerator));
   G__memfunc_setup("NormalizeProbs",1463,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("BookSymbols",1140,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"i - 'Int_t' 0 - num",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("InitSymbols",1149,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GenerateSymbols",1556,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,2,0,
"i - 'Int_t' 0 - num U 'TComplex' - 0 - c","Generate a lot of symbols ",(void*)NULL,1);
   G__memfunc_setup("GenerateSymbol",1441,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,1,1,2,0,"U 'TComplex' - 0 - c","returns the symbol index",(void*)NULL,1);
   G__memfunc_setup("DetectSymbol",1231,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,1,1,2,0,"u 'TComplex' - 1 - s","returns the symbol index",(void*)NULL,1);
   G__memfunc_setup("Analyse_Reset",1327,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Analyse_Finish",1421,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Analyse_Symbol",1442,(G__InterfaceMethod)NULL,121,-1,-1,0,4,1,2,0,
"i - 'Int_t' 0 - - U 'TComplex' - 0 - - "
"i - 'Int_t' 0 - - U 'TComplex' - 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("_calc_distances",1551,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("_check_distances",1658,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DumpStep",818,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SER",234,G__BaseDict_343_4_1,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"d - 'Double_t' 0 - SNR",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LogSER_dB",785,G__BaseDict_343_5_1,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"d - 'Double_t' 0 - SNRdB",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSymbols",1033,G__BaseDict_343_6_1,85,G__get_linked_tagnum(&G__BaseDictLN_TComplex),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNumSymbols",1337,G__BaseDict_343_7_1,104,-1,G__defined_typename("UInt_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetAnalyseGrid",1407,G__BaseDict_343_8_1,121,-1,-1,0,1,1,1,0,"h - 'UInt_t' 0 - a",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetSignalLength",1516,G__BaseDict_343_9_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - num",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ReduceSignalLength",1816,G__BaseDict_343_0_2,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - num",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSignalLength",1504,G__BaseDict_343_1_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsAnalysed",1005,G__BaseDict_343_2_2,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetOption",933,G__BaseDict_343_3_2,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSignalPower",1419,G__BaseDict_343_4_2,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetReceivedPower",1620,G__BaseDict_343_5_2,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetIntNoisePower",1622,G__BaseDict_343_6_2,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSINR",604,G__BaseDict_343_7_2,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetAttentuation",1568,G__BaseDict_343_8_2,117,G__get_linked_tagnum(&G__BaseDictLN_TComplex),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDistance",1099,G__BaseDict_343_9_2,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"C - 'Option_t' 10 - opt","Get several distances from the alphabet",(void*)NULL,0);
   G__memfunc_setup("GetDecisionSignal",1708,G__BaseDict_343_0_3,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,0,1,1,0,"","Get the signal used for decision",(void*)NULL,0);
   G__memfunc_setup("GetGlobalCorrection",1929,G__BaseDict_343_1_3,117,G__get_linked_tagnum(&G__BaseDictLN_TComplex),-1,1,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetGlobalCorrection",1941,G__BaseDict_343_2_3,121,-1,-1,0,1,1,1,0,"u 'TComplex' - 0 - c",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetCorrection",1336,G__BaseDict_343_3_3,117,G__get_linked_tagnum(&G__BaseDictLN_TComplex),-1,1,0,1,1,0,"","/< Get the actual tracked correction",(void*)NULL,0);
   G__memfunc_setup("SetCorrection",1348,G__BaseDict_343_4_3,121,-1,-1,0,1,1,1,0,"u 'TComplex' - 0 - c","/< Set the actual correction (will be overwritten during tracking)",(void*)NULL,0);
   G__memfunc_setup("GetCorrectionTrackingInterval",2992,G__BaseDict_343_5_3,104,-1,G__defined_typename("UInt_t"),0,0,1,1,8,"","/< Get the Interval for correction tracking",(void*)NULL,0);
   G__memfunc_setup("SetCorrectionTrackingInterval",3004,G__BaseDict_343_6_3,121,-1,-1,0,1,1,1,0,"h - 'UInt_t' 0 - i","/< Set the Interval for correction tracking",(void*)NULL,0);
   G__memfunc_setup("EstimateNumSymbols",1877,G__BaseDict_343_7_3,104,-1,G__defined_typename("UInt_t"),0,4,1,1,0,
"d - 'Double_t' 0 - dError h - 'UInt_t' 0 - d "
"i 'eEstimateNumSymbols' - 0 - method h - 'UInt_t' 0 0 min","Estimates the needed Number of Symbols",(void*)NULL,0);
   G__memfunc_setup("EstimateNumSymbols",1877,G__BaseDict_343_8_3,104,-1,G__defined_typename("UInt_t"),0,4,1,1,0,
"d - 'Double_t' 0 - dError h - 'UInt_t' 0 10000 d "
"C - - 0 \"\" method h - 'UInt_t' 0 0 min","Estimates the needed Number of Symbols",(void*)NULL,0);
   G__memfunc_setup("Generate",811,G__BaseDict_343_9_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Update",611,G__BaseDict_343_0_4,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,1,1,1,0,"U 'TDSPSignal' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReferenceUpdate",1522,G__BaseDict_343_1_4,121,-1,-1,0,1,1,1,0,"U 'TDSPSignal' - 0 - s",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__BaseDict_343_2_4,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_343_3_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_343_4_4,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_343_5_4,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_343_6_4,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_343_7_4,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_343_8_4,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_343_9_4,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_343_0_5,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_343_1_5,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_343_2_5,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_343_3_5,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPSymbolGenerator",2006,G__BaseDict_343_4_5,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPStochasticProcess(void) {
   /* TDSPStochasticProcess */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPStochasticProcess));
   G__memfunc_setup("ChangeRepresentation",2073,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"","This function has really to change the Representation",(void*)NULL,1);
   G__memfunc_setup("SetMode",689,G__BaseDict_344_3_0,121,-1,-1,0,1,1,1,0,"i 'eStochasticType' - 0 - mode","Set the Stochatistic Mode                   ",(void*)NULL,0);
   G__memfunc_setup("GetMode",677,G__BaseDict_344_4_0,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"i 'eStochasticType' - 0 - mode","Get the Stochatistic Mode ",(void*)NULL,0);
   G__memfunc_setup("SetRepresentation",1791,G__BaseDict_344_5_0,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"d - 'Double_t' 0 1 rate",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetMean",685,G__BaseDict_344_6_0,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - mean",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetSigma",797,G__BaseDict_344_7_0,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - sigma",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetSigmas",912,G__BaseDict_344_8_0,121,-1,-1,0,2,1,1,0,
"d - 'Double_t' 0 - sigma i - 'Int_t' 0 0 index",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetSigmas",912,G__BaseDict_344_9_0,121,-1,-1,0,2,1,1,0,
"u 'TComplex' - 0 - sigma i - 'Int_t' 0 0 index",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetMeans",800,G__BaseDict_344_0_1,121,-1,-1,0,2,1,1,0,
"d - 'Double_t' 0 - mean i - 'Int_t' 0 0 index",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetMeans",800,G__BaseDict_344_1_1,121,-1,-1,0,2,1,1,0,
"u 'TComplex' - 0 - mean i - 'Int_t' 0 0 index",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SER",234,G__BaseDict_344_2_1,100,-1,G__defined_typename("Double_t"),0,2,1,1,0,
"d - 'Double_t' 0 - SNR U 'TDSPSymbolGenerator' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetSigmas",900,G__BaseDict_344_3_1,117,G__get_linked_tagnum(&G__BaseDictLN_TComplex),-1,0,1,1,1,0,"i - 'Int_t' 0 0 index","Get Sigmas for Gaussian Process",(void*)NULL,0);
   G__memfunc_setup("GetMeans",788,G__BaseDict_344_4_1,117,G__get_linked_tagnum(&G__BaseDictLN_TComplex),-1,0,1,1,1,0,"i - 'Int_t' 0 0 index","Get Means for Gaussian Process",(void*)NULL,0);
   G__memfunc_setup("Reset",515,G__BaseDict_344_5_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Class",502,G__BaseDict_344_6_1,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_344_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_344_8_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_344_9_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_344_0_2,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_344_1_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_344_2_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_344_3_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_344_4_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_344_5_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_344_6_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_344_7_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPStochasticProcess",2221,G__BaseDict_344_8_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPStochasticScalar(void) {
   /* TDSPStochasticScalar */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPStochasticScalar));
   G__memfunc_setup("TDSPStochasticScalar",1958,G__BaseDict_345_0_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPStochasticScalar),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetMode",689,G__BaseDict_345_2_0,121,-1,-1,0,1,1,1,0,"i 'eStochasticType' - 0 - mode",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Value",509,G__BaseDict_345_3_0,117,G__get_linked_tagnum(&G__BaseDictLN_TComplex),-1,1,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ChangeRepresentation",2073,G__BaseDict_345_4_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetFifoFilter",1302,G__BaseDict_345_5_0,121,-1,-1,0,1,1,1,0,"U 'TDSPFifoFilter' - 0 - f",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetFifoFilter",1290,G__BaseDict_345_6_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPFifoFilter),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("PrepareRate",1115,G__BaseDict_345_7_0,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - rate",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Reset",515,G__BaseDict_345_8_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__BaseDict_345_9_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_345_0_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_345_1_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_345_2_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_345_3_1,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_345_4_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_345_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_345_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_345_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_345_8_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_345_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_345_0_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPStochasticScalar",1958,G__BaseDict_345_1_2,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPStochasticScalar),-1,0,1,1,1,0,"u 'TDSPStochasticScalar' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPStochasticScalar",2084,G__BaseDict_345_2_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPStatistics(void) {
   /* TDSPStatistics */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPStatistics));
   G__memfunc_setup("EstimateNumSymbols",1877,G__BaseDict_346_0_0,104,-1,G__defined_typename("UInt_t"),0,5,3,1,0,
"d - 'Double_t' 0 - SER d - 'Double_t' 0 - dError "
"h - 'UInt_t' 0 - Default i 'eEstimateNumSymbols' - 0 - method "
"h - 'UInt_t' 0 0 Min",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("EstimateNumSymbols",1877,G__BaseDict_346_1_0,104,-1,G__defined_typename("UInt_t"),0,5,3,1,0,
"d - 'Double_t' 0 - SER d - 'Double_t' 0 - dError "
"h - 'UInt_t' 0 - Default C - - 0 - method "
"h - 'UInt_t' 0 0 Min",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__BaseDict_346_2_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_346_3_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_346_4_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_346_5_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_346_6_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_346_7_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_346_8_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_346_9_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_346_0_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_346_1_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_346_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_346_3_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic default constructor
   G__memfunc_setup("TDSPStatistics",1382,G__BaseDict_346_4_1,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPStatistics),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPStatistics",1382,G__BaseDict_346_5_1,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPStatistics),-1,0,1,1,1,0,"u 'TDSPStatistics' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPStatistics",1508,G__BaseDict_346_6_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPBlockFifo(void) {
   /* TDSPBlockFifo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockFifo));
   G__memfunc_setup("TDSPBlockFifo",1194,G__BaseDict_347_0_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockFifo),-1,0,1,1,1,0,"C - - 0 NULL name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetBlock",779,G__BaseDict_347_2_0,85,G__get_linked_tagnum(&G__BaseDictLN_TComplex),-1,0,1,1,1,0,"i - 'Int_t' 0 0 i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetDepth",801,G__BaseDict_347_3_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - depth",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetSize",711,G__BaseDict_347_4_0,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 - width i - 'Int_t' 0 - depth",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetWidth",800,G__BaseDict_347_5_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Shift",510,G__BaseDict_347_6_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,2,1,1,0,
"U 'TDSPSignal' - 0 NULL input U 'TDSPSignal' - 0 NULL output",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Update",611,G__BaseDict_347_7_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,1,1,1,0,"U 'TDSPSignal' - 0 - input",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__BaseDict_347_8_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_347_9_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_347_0_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_347_1_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_347_2_1,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_347_3_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_347_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_347_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_347_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_347_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_347_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_347_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPBlockFifo",1194,G__BaseDict_347_0_2,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockFifo),-1,0,1,1,1,0,"u 'TDSPBlockFifo' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPBlockFifo",1320,G__BaseDict_347_1_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPBlockFifoFilter(void) {
   /* TDSPBlockFifoFilter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockFifoFilter));
   G__memfunc_setup("ConfigFifos",1101,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDSPBlockFifoFilter",1808,G__BaseDict_348_1_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockFifoFilter),-1,0,1,1,1,0,"C - - 0 NULL name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetInputFifo",1204,G__BaseDict_348_3_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockFifo),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetOutputFifo",1333,G__BaseDict_348_4_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockFifo),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetFilter",914,G__BaseDict_348_5_0,121,-1,-1,0,1,1,1,0,"U 'TDSPFilter' - 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetFilter",902,G__BaseDict_348_6_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPFilter),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetWidth",812,G__BaseDict_348_7_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("filter",646,G__BaseDict_348_8_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,2,1,1,0,
"U 'TDSPSignal' - 0 - input U 'TDSPSignal' - 0 - output",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__BaseDict_348_9_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_348_0_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_348_1_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_348_2_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_348_3_1,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_348_4_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_348_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_348_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_348_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_348_8_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_348_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_348_0_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPBlockFifoFilter",1808,G__BaseDict_348_1_2,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockFifoFilter),-1,0,1,1,1,0,"u 'TDSPBlockFifoFilter' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPBlockFifoFilter",1934,G__BaseDict_348_2_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPStochasticSignal(void) {
   /* TDSPStochasticSignal */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPStochasticSignal));
   G__memfunc_setup("TDSPStochasticSignal",1966,G__BaseDict_349_0_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPStochasticSignal),-1,0,1,1,1,0,"i - 'Int_t' 0 0 len",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Conv",406,G__BaseDict_349_2_0,121,-1,-1,0,3,1,1,0,
"U 'TDSPVector' - 0 - input U 'TDSPVector' - 0 - output "
"i - 'Int_t' 0 kTDSPVector_Conv_Defaults opt","Convolution ",(void*)NULL,0);
   G__memfunc_setup("SetAsModel",977,G__BaseDict_349_3_0,121,-1,-1,0,0,1,1,0,"","Switch the Meaning of fVec and fModel",(void*)NULL,0);
   G__memfunc_setup("SetFifoFilter",1302,G__BaseDict_349_4_0,121,-1,-1,0,1,1,1,0,"U 'TDSPBlockFifoFilter' - 0 - f","Set a FifoFilter ",(void*)NULL,0);
   G__memfunc_setup("ChangeRepresentation",2073,G__BaseDict_349_5_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Reset",515,G__BaseDict_349_6_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__BaseDict_349_7_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_349_8_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_349_9_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_349_0_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_349_1_1,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_349_2_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_349_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_349_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_349_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_349_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_349_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_349_8_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPStochasticSignal",1966,G__BaseDict_349_9_1,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPStochasticSignal),-1,0,1,1,1,0,"u 'TDSPStochasticSignal' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPStochasticSignal",2092,G__BaseDict_349_0_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPfft(void) {
   /* TDSPfft */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPfft));
   G__memfunc_setup("LoadFFTW",695,G__BaseDict_350_0_0,103,-1,G__defined_typename("Bool_t"),0,0,3,1,0,"","/< loads the atlas library",(void*)NULL,0);
   G__memfunc_setup("EnableFFTW",894,G__BaseDict_350_1_0,121,-1,-1,0,0,3,1,0,"","/< disable the use of the atlas library",(void*)NULL,0);
   G__memfunc_setup("DisableFFTW",1003,G__BaseDict_350_2_0,121,-1,-1,0,0,3,1,0,"","/< enable the use of atlas library",(void*)NULL,0);
   G__memfunc_setup("UsingFFTW",829,G__BaseDict_350_3_0,103,-1,G__defined_typename("Bool_t"),0,0,3,1,0,"","/< Using FFTW ?",(void*)NULL,0);
   G__memfunc_setup("do_fft",626,G__BaseDict_350_4_0,121,-1,-1,0,7,1,1,0,
"U 'TComplex' - 0 - - U 'TComplex' - 0 - - "
"i - 'Int_t' 0 - ndat i - 'Int_t' 0 1 stepin "
"i - 'Int_t' 0 1 stepout i - 'Int_t' 0 0 cp "
"d - 'Double_t' 0 1.0 oversampling",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("do_ifft",731,G__BaseDict_350_5_0,121,-1,-1,0,7,1,1,0,
"U 'TComplex' - 0 - - U 'TComplex' - 0 - - "
"i - 'Int_t' 0 - ndat i - 'Int_t' 0 1 stepin "
"i - 'Int_t' 0 1 stepout i - 'Int_t' 0 0 cp "
"d - 'Double_t' 0 1.0 oversampling",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDSPfft",635,G__BaseDict_350_6_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPfft),-1,0,1,1,1,0,"C - - 0 NULL name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetDim",582,G__BaseDict_350_8_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - d","/< Set the Dimension for fft/ifft-processing (see member fDim ...)",(void*)NULL,0);
   G__memfunc_setup("GetDim",570,G__BaseDict_350_9_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetFFTSignal",1118,G__BaseDict_350_0_1,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetIFFTSignal",1191,G__BaseDict_350_1_1,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("RegisterSignalsAndSlots",2366,G__BaseDict_350_2_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("fft",320,G__BaseDict_350_3_1,121,-1,-1,0,5,1,1,0,
"U 'TComplex' - 0 - in U 'TComplex' - 0 - out "
"i - 'Int_t' 0 - l i - 'Int_t' 0 1 stepin "
"i - 'Int_t' 0 1 stepout",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ifft",425,G__BaseDict_350_4_1,121,-1,-1,0,5,1,1,0,
"U 'TComplex' - 0 - in U 'TComplex' - 0 - out "
"i - 'Int_t' 0 - l i - 'Int_t' 0 1 stepin "
"i - 'Int_t' 0 1 stepout",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("fft",320,G__BaseDict_350_5_1,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,0,2,1,1,0,
"U 'TDSPVector' - 0 - in U 'TDSPVector' - 0 NULL out","/< the fft of \"in\"",(void*)NULL,0);
   G__memfunc_setup("fft",320,G__BaseDict_350_6_1,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix),-1,0,3,1,1,0,
"U 'TDSPMatrix' - 0 - in i - 'Int_t' 0 - dim "
"U 'TDSPMatrix' - 0 NULL out","/< the fft of the rows(dim=1,'R') or cols(dim=2,'C') of \"in\"",(void*)NULL,0);
   G__memfunc_setup("ifft",425,G__BaseDict_350_7_1,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,0,2,1,1,0,
"U 'TDSPVector' - 0 - in U 'TDSPVector' - 0 NULL out","/< the ifft of \"in\"",(void*)NULL,0);
   G__memfunc_setup("ifft",425,G__BaseDict_350_8_1,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix),-1,0,3,1,1,0,
"U 'TDSPMatrix' - 0 - in i - 'Int_t' 0 - dim "
"U 'TDSPMatrix' - 0 NULL out","/< the ifft of the rows(dim=1,'R') or cols(dim=2,'C') of \"in\"",(void*)NULL,0);
   G__memfunc_setup("FFT",224,G__BaseDict_350_9_1,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,1,1,1,0,"U 'TDSPSignal' - 0 - input",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IFFT",297,G__BaseDict_350_0_2,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,1,1,1,0,"U 'TDSPSignal' - 0 - input",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetIFFTLen",872,G__BaseDict_350_1_2,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"i - 'Int_t' 0 - len","IFFT-outputlen translation",(void*)NULL,0);
   G__memfunc_setup("GetFFTLen",799,G__BaseDict_350_2_2,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"i - 'Int_t' 0 - len","FFT-outputlen translation",(void*)NULL,0);
   G__memfunc_setup("SetOverSampling",1539,G__BaseDict_350_3_2,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - o","/< Set the Oversampling factor",(void*)NULL,0);
   G__memfunc_setup("GetOverSampling",1527,G__BaseDict_350_4_2,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"","/< Get the Oversampling factor",(void*)NULL,0);
   G__memfunc_setup("SetCyclicPrefix",1521,G__BaseDict_350_5_2,121,-1,-1,0,1,1,1,0,"h - 'UInt_t' 0 - c","/< Set the length of the cyclic prefix",(void*)NULL,0);
   G__memfunc_setup("GetCyclicPrefix",1509,G__BaseDict_350_6_2,104,-1,G__defined_typename("UInt_t"),0,0,1,1,8,"","/< Get the length of the cyclic prefix",(void*)NULL,0);
   G__memfunc_setup("Class",502,G__BaseDict_350_7_2,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_350_8_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_350_9_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_350_0_3,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_350_1_3,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_350_2_3,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_350_3_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_350_4_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_350_5_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_350_6_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_350_7_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_350_8_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPfft",635,G__BaseDict_350_9_3,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPfft),-1,0,1,1,1,0,"u 'TDSPfft' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPfft",761,G__BaseDict_350_0_4,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPGroup(void) {
   /* TDSPGroup */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPGroup));
   G__memfunc_setup("TDSPGroup",840,G__BaseDict_351_0_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPGroup),-1,0,1,1,1,0,"C - - 0 NULL name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetListOfOperators",1840,G__BaseDict_351_2_0,85,G__get_linked_tagnum(&G__BaseDictLN_TList),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Add",265,G__BaseDict_351_3_0,121,-1,-1,0,1,1,1,0,"U 'TDSPOperator' - 0 - o",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Remove",622,G__BaseDict_351_4_0,121,-1,-1,0,1,1,1,0,"U 'TDSPOperator' - 0 - o",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Print",525,G__BaseDict_351_5_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("NewGControl",1106,G__BaseDict_351_6_0,85,G__get_linked_tagnum(&G__BaseDictLN_TQQGControl),-1,0,0,1,1,0,"","/< opens a new graphical control ",(void*)NULL,1);
   G__memfunc_setup("Class",502,G__BaseDict_351_7_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_351_8_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_351_9_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_351_0_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_351_1_1,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_351_2_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_351_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_351_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_351_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_351_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_351_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_351_8_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPGroup",840,G__BaseDict_351_9_1,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPGroup),-1,0,1,1,1,0,"u 'TDSPGroup' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPGroup",966,G__BaseDict_351_0_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPConvolution(void) {
   /* TDSPConvolution */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPConvolution));
   G__memfunc_setup("TDSPConvolution",1499,G__BaseDict_353_0_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPConvolution),-1,0,1,1,1,0,"C - - 0 NULL name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Response",847,G__BaseDict_353_2_0,121,-1,-1,0,1,1,1,0,"U 'TDSPVector' - 0 - r",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Response",847,G__BaseDict_353_3_0,121,-1,-1,0,1,1,1,0,"U 'TDSPStochasticSignal' - 0 - r",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetOption",933,G__BaseDict_353_4_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 - opt",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetBlockLen",1078,G__BaseDict_353_5_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetBlockLen",1066,G__BaseDict_353_6_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Conv",406,G__BaseDict_353_7_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,0,1,1,1,0,"U 'TDSPVector' - 0 - input",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Update",611,G__BaseDict_353_8_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,1,1,1,0,"U 'TDSPSignal' - 0 - input",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__BaseDict_353_9_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_353_0_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_353_1_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_353_2_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_353_3_1,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_353_4_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_353_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_353_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_353_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_353_8_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_353_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_353_0_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPConvolution",1499,G__BaseDict_353_1_2,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPConvolution),-1,0,1,1,1,0,"u 'TDSPConvolution' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPConvolution",1625,G__BaseDict_353_2_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPChop(void) {
   /* TDSPChop */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPChop));
   G__memfunc_setup("TDSPChop",709,G__BaseDict_354_0_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPChop),-1,0,1,1,1,0,"C - - 0 - name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetSignalLength",1516,G__BaseDict_354_2_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - len",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("RegisterSignalsAndSlots",2366,G__BaseDict_354_3_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Update",611,G__BaseDict_354_4_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,1,1,1,0,"U 'TDSPSignal' - 0 - input",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__BaseDict_354_5_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_354_6_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_354_7_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_354_8_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_354_9_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_354_0_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_354_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_354_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_354_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_354_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_354_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_354_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPChop",709,G__BaseDict_354_7_1,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPChop),-1,0,1,1,1,0,"u 'TDSPChop' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPChop",835,G__BaseDict_354_8_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPBlockfft(void) {
   /* TDSPBlockfft */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockfft));
   G__memfunc_setup("TDSPBlockfft",1126,G__BaseDict_355_0_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockfft),-1,0,1,1,1,0,"C - - 0 NULL name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetBlockLen",1078,G__BaseDict_355_2_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetBlockLen",1066,G__BaseDict_355_3_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("fft",320,G__BaseDict_355_4_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,0,2,1,1,0,
"U 'TDSPVector' - 0 - in U 'TDSPVector' - 0 NULL out",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ifft",425,G__BaseDict_355_5_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,0,2,1,1,0,
"U 'TDSPVector' - 0 - in U 'TDSPVector' - 0 NULL out",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("FFT",224,G__BaseDict_355_6_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,1,1,1,0,"U 'TDSPSignal' - 0 - input",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IFFT",297,G__BaseDict_355_7_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,1,1,1,0,"U 'TDSPSignal' - 0 - input",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__BaseDict_355_8_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_355_9_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_355_0_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_355_1_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_355_2_1,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_355_3_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_355_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_355_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_355_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_355_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_355_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_355_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPBlockfft",1126,G__BaseDict_355_0_2,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockfft),-1,0,1,1,1,0,"u 'TDSPBlockfft' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPBlockfft",1252,G__BaseDict_355_1_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPBlockMap(void) {
   /* TDSPBlockMap */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockMap));
   G__memfunc_setup("TDSPBlockMap",1092,G__BaseDict_356_0_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockMap),-1,0,1,1,1,0,"C - - 0 NULL name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSignal",894,G__BaseDict_356_2_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetInverseSignal",1626,G__BaseDict_356_3_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetMatrix",929,G__BaseDict_356_4_0,121,-1,-1,0,1,1,1,0,"U 'TDSPMatrix' - 0 - m",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetInverseMatrix",1661,G__BaseDict_356_5_0,121,-1,-1,0,1,1,1,0,"U 'TDSPMatrix' - 0 - m",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TestError",938,G__BaseDict_356_6_0,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"h - 'UInt_t' 0 1 num","multiply n random vectors with Matrix and inverse and return the Error",(void*)NULL,0);
   G__memfunc_setup("GetBlockLen",1066,G__BaseDict_356_7_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMatrix",917,G__BaseDict_356_8_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetInverseMatrix",1649,G__BaseDict_356_9_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Apply",518,G__BaseDict_356_0_1,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,1,1,1,0,"U 'TDSPSignal' - 0 - input",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("InverseApply",1250,G__BaseDict_356_1_1,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,1,1,1,0,"U 'TDSPSignal' - 0 - input",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetApplyMode",1207,G__BaseDict_356_2_1,121,-1,-1,0,1,1,1,0,"i 'eMatrixApplyMode' - 0 - m","Set Mode for Apply",(void*)NULL,0);
   G__memfunc_setup("SetApplyMode",1207,G__BaseDict_356_3_1,121,-1,-1,0,2,1,1,0,
"i 'eMatrixApplyMode' - 0 - m1 i 'eMatrixApplyMode' - 0 - m2",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetInverseApplyMode",1939,G__BaseDict_356_4_1,121,-1,-1,0,1,1,1,0,"i 'eMatrixApplyMode' - 0 - m","Set Mode for InverseApply",(void*)NULL,0);
   G__memfunc_setup("GetApplyMode",1195,G__BaseDict_356_5_1,105,G__get_linked_tagnum(&G__BaseDictLN_eMatrixApplyMode),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetInverseApplyMode",1927,G__BaseDict_356_6_1,105,G__get_linked_tagnum(&G__BaseDictLN_eMatrixApplyMode),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Update",611,G__BaseDict_356_7_1,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,1,1,1,0,"U 'TDSPSignal' - 0 - input","Calls Apply and Emits \"Update(TDSPSignal*)\"",(void*)NULL,0);
   G__memfunc_setup("InverseUpdate",1343,G__BaseDict_356_8_1,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,1,1,1,0,"U 'TDSPSignal' - 0 - input","Calls InverseApply and Emits \"InverseUpdate(TDSPSignal*)\"",(void*)NULL,0);
   G__memfunc_setup("Class",502,G__BaseDict_356_9_1,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_356_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_356_1_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_356_2_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_356_3_2,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_356_4_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_356_5_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_356_6_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_356_7_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_356_8_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_356_9_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_356_0_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPBlockMap",1092,G__BaseDict_356_1_3,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockMap),-1,0,1,1,1,0,"u 'TDSPBlockMap' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPBlockMap",1218,G__BaseDict_356_2_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPSignalDump(void) {
   /* TDSPSignalDump */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSignalDump));
   G__memfunc_setup("TDSPSignalDump",1327,G__BaseDict_358_0_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignalDump),-1,0,1,1,1,0,"C - - 0 NULL name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetMode",689,G__BaseDict_358_2_0,121,-1,-1,0,1,1,1,0,"i 'eSignalDumpMode' - 0 - e",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMode",677,G__BaseDict_358_3_0,105,G__get_linked_tagnum(&G__BaseDictLN_eSignalDumpMode),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetPause",810,G__BaseDict_358_4_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - sec",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPause",798,G__BaseDict_358_5_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Update",611,G__BaseDict_358_6_0,121,-1,-1,0,1,1,1,0,"U 'TDSPSignal' - 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__BaseDict_358_7_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_358_8_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_358_9_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_358_0_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_358_1_1,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_358_2_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_358_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_358_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_358_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_358_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_358_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_358_8_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPSignalDump",1327,G__BaseDict_358_9_1,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPSignalDump),-1,0,1,1,1,0,"u 'TDSPSignalDump' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPSignalDump",1453,G__BaseDict_358_0_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPReadSignal(void) {
   /* TDSPReadSignal */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPReadSignal));
   G__memfunc_setup("TDSPReadSignal",1301,G__BaseDict_359_0_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPReadSignal),-1,0,1,1,1,0,"C - - 0 - name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Generate",811,G__BaseDict_359_2_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__BaseDict_359_3_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_359_4_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_359_5_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_359_6_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_359_7_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_359_8_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_359_9_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_359_0_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_359_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_359_2_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_359_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_359_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPReadSignal",1301,G__BaseDict_359_5_1,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPReadSignal),-1,0,1,1,1,0,"u 'TDSPReadSignal' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPReadSignal",1427,G__BaseDict_359_6_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPPsk(void) {
   /* TDSPPsk */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPPsk));
   G__memfunc_setup("InitSymbols",1149,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TDSPPsk",617,G__BaseDict_360_1_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPPsk),-1,0,3,1,1,0,
"C - - 0 - name i - 'Int_t' 0 4 - "
"h - 'UInt_t' 0 kDEFAULT_OPTIONS -","default is Qpsk",(void*)NULL,0);
   G__memfunc_setup("SER",234,G__BaseDict_360_3_0,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"d - 'Double_t' 0 - SNR",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__BaseDict_360_4_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_360_5_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_360_6_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_360_7_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_360_8_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_360_9_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_360_0_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_360_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_360_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_360_3_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_360_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_360_5_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPPsk",617,G__BaseDict_360_6_1,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPPsk),-1,0,1,1,1,0,"u 'TDSPPsk' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPPsk",743,G__BaseDict_360_7_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPSignalStudy(void) {
   /* TDSPSignalStudy */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSignalStudy));
   G__memfunc_setup("TDSPSignalStudy",1458,G__BaseDict_361_0_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignalStudy),-1,0,1,1,1,0,"C - - 0 NULL name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Analyse",717,G__BaseDict_361_2_0,121,-1,-1,0,1,1,1,0,"U 'TDSPSignal' - 0 - input",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBlockLen",1066,G__BaseDict_361_3_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetBlockLen",1078,G__BaseDict_361_4_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - bl",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("EnableCrestFactor",1703,G__BaseDict_361_5_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DisableCrestFactor",1812,G__BaseDict_361_6_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsCrestFactor",1308,G__BaseDict_361_7_0,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMean",673,G__BaseDict_361_8_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMaxAbs",860,G__BaseDict_361_9_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetCrestFactor",1408,G__BaseDict_361_0_1,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Update",611,G__BaseDict_361_1_1,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,1,1,1,0,"U 'TDSPSignal' - 0 - input",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__BaseDict_361_2_1,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_361_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_361_4_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_361_5_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_361_6_1,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_361_7_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_361_8_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_361_9_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_361_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_361_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_361_2_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_361_3_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPSignalStudy",1458,G__BaseDict_361_4_2,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPSignalStudy),-1,0,1,1,1,0,"u 'TDSPSignalStudy' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPSignalStudy",1584,G__BaseDict_361_5_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPQam(void) {
   /* TDSPQam */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPQam));
   G__memfunc_setup("InitSymbols",1149,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TDSPQam",602,G__BaseDict_362_1_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPQam),-1,0,3,1,1,0,
"C - - 0 - name i - 'Int_t' 0 4 - "
"h - 'UInt_t' 0 kDEFAULT_OPTIONS -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SER",234,G__BaseDict_362_3_0,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"d - 'Double_t' 0 - SNR",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__BaseDict_362_4_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_362_5_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_362_6_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_362_7_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_362_8_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_362_9_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_362_0_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_362_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_362_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_362_3_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_362_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_362_5_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPQam",602,G__BaseDict_362_6_1,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPQam),-1,0,1,1,1,0,"u 'TDSPQam' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPQam",728,G__BaseDict_362_7_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPPam(void) {
   /* TDSPPam */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPPam));
   G__memfunc_setup("InitSymbols",1149,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TDSPPam",601,G__BaseDict_363_1_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPPam),-1,0,3,1,1,0,
"C - - 0 - name i - 'Int_t' 0 4 - "
"h - 'UInt_t' 0 kDEFAULT_OPTIONS -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SER",234,G__BaseDict_363_3_0,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"d - 'Double_t' 0 - SNR",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__BaseDict_363_4_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_363_5_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_363_6_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_363_7_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_363_8_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_363_9_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_363_0_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_363_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_363_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_363_3_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_363_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_363_5_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPPam",601,G__BaseDict_363_6_1,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPPam),-1,0,1,1,1,0,"u 'TDSPPam' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPPam",727,G__BaseDict_363_7_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPOfdm(void) {
   /* TDSPOfdm */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPOfdm));
   G__memfunc_setup("TDSPOfdm",705,G__BaseDict_364_0_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPOfdm),-1,0,1,1,1,0,"C - - 0 NULL name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNumCarriers",1419,G__BaseDict_364_2_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetNumCarriers",1431,G__BaseDict_364_3_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetEqualization",1570,G__BaseDict_364_4_0,121,-1,-1,0,1,1,1,0,"U 'TDSPVector' - 0 - e",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetEqualization",1558,G__BaseDict_364_5_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetOption",933,G__BaseDict_364_6_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 - opt",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetTransmitSignal",1744,G__BaseDict_364_7_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetReceivedSignal",1701,G__BaseDict_364_8_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetBandWidthEfficiency",2186,G__BaseDict_364_9_0,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CalcEqualization",1641,G__BaseDict_364_0_1,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"U 'TDSPVector' - 0 - r","/< Calculate the Equalization vector from the channel response r",(void*)NULL,1);
   G__memfunc_setup("EqualizeMe",1010,G__BaseDict_364_1_1,121,-1,-1,0,1,1,1,0,"U 'TDSPVector' - 0 NULL in","/< Equalize an incoming vector (if =NULL - equalize this->fFFTSignal)",(void*)NULL,1);
   G__memfunc_setup("Receive",707,G__BaseDict_364_2_1,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,1,1,1,0,"U 'TDSPSignal' - 0 - in","/< Receive and (see fAutoEqualization) Equalize ",(void*)NULL,1);
   G__memfunc_setup("Transmit",850,G__BaseDict_364_3_1,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,1,1,1,0,"U 'TDSPSignal' - 0 - in","/< Transmit ",(void*)NULL,1);
   G__memfunc_setup("Received",807,G__BaseDict_364_4_1,121,-1,-1,0,1,1,1,0,"U 'TDSPSignal' - 0 - r","/< Emit a new received (and probably equalized) signal",(void*)NULL,0);
   G__memfunc_setup("Transmitted",1167,G__BaseDict_364_5_1,121,-1,-1,0,1,1,1,0,"U 'TDSPSignal' - 0 - r","/< Emit a new transmitted signal",(void*)NULL,0);
   G__memfunc_setup("Class",502,G__BaseDict_364_6_1,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_364_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_364_8_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_364_9_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_364_0_2,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_364_1_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_364_2_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_364_3_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_364_4_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_364_5_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_364_6_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_364_7_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPOfdm",705,G__BaseDict_364_8_2,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPOfdm),-1,0,1,1,1,0,"u 'TDSPOfdm' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPOfdm",831,G__BaseDict_364_9_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPStft(void) {
   /* TDSPStft */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPStft));
   G__memfunc_setup("TDSPStft",732,G__BaseDict_365_0_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPStft),-1,0,1,1,1,0,"C - - 0 - name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetBlockLen",1078,G__BaseDict_365_2_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetBlockLen",1066,G__BaseDict_365_3_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetMultiplikator",1693,G__BaseDict_365_4_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMultiplikator",1681,G__BaseDict_365_5_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Window",632,G__BaseDict_365_6_0,121,-1,-1,0,1,1,1,0,"U 'TDSPSignal' - 0 - input",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DualWindow",1022,G__BaseDict_365_7_0,121,-1,-1,0,1,1,1,0,"U 'TDSPSignal' - 0 - input",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__BaseDict_365_8_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_365_9_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_365_0_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_365_1_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_365_2_1,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_365_3_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_365_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_365_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_365_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_365_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_365_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_365_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPStft",732,G__BaseDict_365_0_2,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPStft),-1,0,1,1,1,0,"u 'TDSPStft' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPStft",858,G__BaseDict_365_1_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPNofdm(void) {
   /* TDSPNofdm */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPNofdm));
   G__memfunc_setup("_build_pulse_param_string",2653,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__BaseDictLN_TString),-1,1,1,1,4,0,"u 'TString' - 1 - start",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("_free_mode",1029,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"i - 'Int_t' 0 - -","Clean up a mode",(void*)NULL,0);
   G__memfunc_setup("_new_mode",941,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"i - 'Int_t' 0 - -","Set a new mode",(void*)NULL,0);
   G__memfunc_setup("_calc_correlations",1894,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("_calc_mapping",1341,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDSPNofdm",815,G__BaseDict_366_5_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPNofdm),-1,0,1,1,1,0,"C - - 0 NULL name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNumCarriers",1419,G__BaseDict_366_7_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetNumCarriers",1431,G__BaseDict_366_8_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetLength",898,G__BaseDict_366_9_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetLength",910,G__BaseDict_366_0_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - l",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetTimePad",964,G__BaseDict_366_1_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetTimePad",976,G__BaseDict_366_2_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - t",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetFreqPad",963,G__BaseDict_366_3_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetFreqPad",975,G__BaseDict_366_4_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - t",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetPads",692,G__BaseDict_366_5_1,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 - time i - 'Int_t' 0 - freq",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetTransmitMatrix",1779,G__BaseDict_366_6_1,121,-1,-1,0,1,1,1,0,"U 'TDSPMatrix' - 0 - h",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetReceiverMatrix",1750,G__BaseDict_366_7_1,121,-1,-1,0,1,1,1,0,"U 'TDSPMatrix' - 0 - h",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetTransmitPulse",1659,G__BaseDict_366_8_1,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,0,1,1,1,0,"U 'TDSPVector' - 0 NULL p",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetReceiverPulse",1630,G__BaseDict_366_9_1,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,0,1,1,1,0,"U 'TDSPVector' - 0 NULL p",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetTransmitMatrix",1767,G__BaseDict_366_0_2,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetReceiverMatrix",1738,G__BaseDict_366_1_2,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetPulseName",1206,G__BaseDict_366_2_2,121,-1,-1,0,1,1,1,0,"u 'TString' - 0 - n",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetPulseParam",1318,G__BaseDict_366_3_2,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 - num d - 'Double_t' 0 - v",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPulseParam",1306,G__BaseDict_366_4_2,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"i - 'Int_t' 0 - num",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPulseFile",1193,G__BaseDict_366_5_2,67,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Print",525,G__BaseDict_366_6_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Draw",398,G__BaseDict_366_7_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetChannel",997,G__BaseDict_366_8_2,121,-1,-1,0,1,1,1,0,"U 'TDSPMatrix' - 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetChannel",985,G__BaseDict_366_9_2,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetMode",689,G__BaseDict_366_0_3,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - mode",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetOption",933,G__BaseDict_366_1_3,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 - opt",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMapping",1004,G__BaseDict_366_2_3,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMappingPart1",1460,G__BaseDict_366_3_3,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetCorrelation",1442,G__BaseDict_366_4_3,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNoiseCorrelation",1952,G__BaseDict_366_5_3,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetTransmitSignal",1744,G__BaseDict_366_6_3,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetReceivedSignal",1701,G__BaseDict_366_7_3,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetBandWidthEfficiency",2186,G__BaseDict_366_8_3,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CreatePulses",1232,G__BaseDict_366_9_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("LoadPulses",1020,G__BaseDict_366_0_4,121,-1,-1,0,3,1,1,0,
"C - - 0 - fname C - - 0 \"TransmitMatrix\" transmitname "
"C - - 0 \"ReceiverMatrix\" receivername",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SavePulses",1035,G__BaseDict_366_1_4,121,-1,-1,0,3,1,1,0,
"C - - 0 - fname C - - 0 \"TransmitMatrix\" transmitname "
"C - - 0 \"ReceiverMatrix\" receivername",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CalcMappingFromChannel",2188,G__BaseDict_366_2_4,121,-1,-1,0,1,1,1,0,"U 'TDSPMatrix' - 0 - channel","/< Calculate the Mapping from a Channel-Matrix",(void*)NULL,0);
   G__memfunc_setup("CalcCorrelationFromChannel",2626,G__BaseDict_366_3_4,121,-1,-1,0,1,1,1,0,"U 'TDSPMatrix' - 0 - channel","/< Calculate the Correlation matrix from a Channel-Matrix",(void*)NULL,0);
   G__memfunc_setup("Correlation",1154,G__BaseDict_366_4_4,121,-1,-1,0,1,1,1,0,"U 'TDSPMatrix' - 0 - c","/< Emit a new correlation matrix",(void*)NULL,0);
   G__memfunc_setup("Mapping",716,G__BaseDict_366_5_4,121,-1,-1,0,1,1,1,0,"U 'TDSPMatrix' - 0 - c","/< Emit a new mapping matrix (G^* H Gamma)",(void*)NULL,0);
   G__memfunc_setup("MappingPart1",1172,G__BaseDict_366_6_4,121,-1,-1,0,1,1,1,0,"U 'TDSPMatrix' - 0 - c","/< Emit a new partial mapping matrix (H Gamma)",(void*)NULL,0);
   G__memfunc_setup("Class",502,G__BaseDict_366_7_4,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_366_8_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_366_9_4,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_366_0_5,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_366_1_5,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_366_2_5,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_366_3_5,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_366_4_5,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_366_5_5,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_366_6_5,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_366_7_5,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_366_8_5,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPNofdm",815,G__BaseDict_366_9_5,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPNofdm),-1,0,1,1,1,0,"u 'TDSPNofdm' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPNofdm",941,G__BaseDict_366_0_6,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPInt(void) {
   /* TDSPInt */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPInt));
   G__memfunc_setup("TDSPInt",614,G__BaseDict_371_0_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPInt),-1,0,6,1,1,0,
"C - - 10 - appClassName I - - 0 - argc "
"C - - 2 - argv Y - - 0 0 options "
"i - - 0 0 numOptions g - 'Bool_t' 0 kFALSE noLogo",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetVersion",1030,G__BaseDict_371_2_0,117,G__get_linked_tagnum(&G__BaseDictLN_TString),-1,1,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("PrintLogo",926,G__BaseDict_371_3_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__BaseDict_371_4_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_371_5_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_371_6_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_371_7_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_371_8_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_371_9_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_371_0_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_371_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_371_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_371_3_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_371_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_371_5_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPInt",614,G__BaseDict_371_6_1,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPInt),-1,0,1,1,1,0,"u 'TDSPInt' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPInt",740,G__BaseDict_371_7_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPFilterBank(void) {
   /* TDSPFilterBank */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFilterBank));
   G__memfunc_setup("_isMyMatrix",1142,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("_enableMyMatrix",1537,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("_disableMyMatrix",1646,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("_isDFT",537,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("_enableDFT",932,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("_disableDFT",1041,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("_IsReady",784,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,0,1,4,0,"","/< Check that the filterbank is ready to use !",(void*)NULL,0);
   G__memfunc_setup("_CleanMe",756,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"","/< Clean all blocks etc.",(void*)NULL,0);
   G__memfunc_setup("_MinMaxSubSampling",1806,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"","/< Update min/max-subsamplings",(void*)NULL,0);
   G__memfunc_setup("_reset_options",1517,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"","/< reset the activation for each filter to \"active\"",(void*)NULL,0);
   G__memfunc_setup("TDSPFilterBank",1309,G__BaseDict_372_0_1,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPFilterBank),-1,0,2,1,1,0,
"h - 'UInt_t' 0 0 N h - 'UInt_t' 0 0 L","/< Init with N filters of common length L",(void*)NULL,0);
   G__memfunc_setup("SetFilter",914,G__BaseDict_372_2_1,121,-1,-1,0,2,1,1,0,
"h - 'UInt_t' 0 - n U 'TDSPVector' - 0 - f","/< Set the response for filter n from a vector f",(void*)NULL,0);
   G__memfunc_setup("GetFilter",902,G__BaseDict_372_3_1,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,0,2,1,1,0,
"h - 'UInt_t' 0 - n U 'TDSPVector' - 0 NULL f","/< Return the response of filter n as a vector",(void*)NULL,0);
   G__memfunc_setup("SetMatrix",929,G__BaseDict_372_4_1,121,-1,-1,0,1,1,1,0,"U 'TDSPMatrix' - 0 - a","/< set the filter matrix",(void*)NULL,0);
   G__memfunc_setup("GetMatrix",917,G__BaseDict_372_5_1,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix),-1,0,0,1,1,8,"","/< return the filter matrix",(void*)NULL,0);
   G__memfunc_setup("LoadMatrix",1013,G__BaseDict_372_6_1,121,-1,-1,0,2,1,1,0,
"C - - 0 - fname C - - 0 - key","/< Load the matrix from file \"fname\" under the key \"key\"",(void*)NULL,0);
   G__memfunc_setup("SetSize",711,G__BaseDict_372_7_1,121,-1,-1,0,2,1,1,0,
"h - 'UInt_t' 0 - N h - 'UInt_t' 0 - L","/< Set the number of filters and the common length",(void*)NULL,0);
   G__memfunc_setup("SetSubSampling",1425,G__BaseDict_372_8_1,121,-1,-1,0,2,1,1,0,
"h - 'UInt_t' 0 - n h - 'UInt_t' 0 - T","/< Set the subsampling for filter n",(void*)NULL,0);
   G__memfunc_setup("SetSubSamplings",1540,G__BaseDict_372_9_1,121,-1,-1,0,1,1,1,0,"h - 'UInt_t' 0 - T","/< Set the subsampling for all filters",(void*)NULL,0);
   G__memfunc_setup("SetTimePad",976,G__BaseDict_372_0_2,121,-1,-1,0,1,1,1,0,"h - 'UInt_t' 0 - T","/< Set the subsampling for all filters",(void*)NULL,0);
   G__memfunc_setup("SetFilterOption",1547,G__BaseDict_372_1_2,121,-1,-1,0,1,1,1,0,"h - 'UInt_t' 0 - opt","/< Set all options for all filters",(void*)NULL,0);
   G__memfunc_setup("SetFilterOption",1547,G__BaseDict_372_2_2,121,-1,-1,0,2,1,1,0,
"h - 'UInt_t' 0 - n h - 'UInt_t' 0 - opt","/< Set all options for that filter",(void*)NULL,0);
   G__memfunc_setup("GetFilterOption",1535,G__BaseDict_372_3_2,104,-1,G__defined_typename("UInt_t"),0,1,1,1,0,"h - 'UInt_t' 0 - n","/< Get all options for that filter",(void*)NULL,0);
   G__memfunc_setup("IsActive",792,G__BaseDict_372_4_2,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"h - 'UInt_t' 0 - n","/< Is this filter activated",(void*)NULL,0);
   G__memfunc_setup("Activate",817,G__BaseDict_372_5_2,121,-1,-1,0,1,1,1,0,"h - 'UInt_t' 0 - n","/< Activate this filter",(void*)NULL,0);
   G__memfunc_setup("Deactivate",1018,G__BaseDict_372_6_2,121,-1,-1,0,1,1,1,0,"h - 'UInt_t' 0 - n","/< Deactivate this filter",(void*)NULL,0);
   G__memfunc_setup("IsCommonSubSampling",1930,G__BaseDict_372_7_2,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"","/< Is the Subsampling for all filters the same ?",(void*)NULL,0);
   G__memfunc_setup("GetSubSampling",1413,G__BaseDict_372_8_2,104,-1,G__defined_typename("UInt_t"),0,1,1,1,0,"h - 'UInt_t' 0 - n","/< Get the subsampling for filter n",(void*)NULL,0);
   G__memfunc_setup("GetSubSamplings",1528,G__BaseDict_372_9_2,104,-1,G__defined_typename("UInt_t"),0,0,1,1,0,"","/< Get the subsamplings if their are equal for all filters !!",(void*)NULL,0);
   G__memfunc_setup("GetMaxSubSampling",1707,G__BaseDict_372_0_3,104,-1,G__defined_typename("UInt_t"),0,0,1,1,8,"","/< Get the largest Subsampling factor",(void*)NULL,0);
   G__memfunc_setup("GetMinSubSampling",1705,G__BaseDict_372_1_3,104,-1,G__defined_typename("UInt_t"),0,0,1,1,8,"","/< Get the lowest Subsampling factor",(void*)NULL,0);
   G__memfunc_setup("GetLength",898,G__BaseDict_372_2_3,104,-1,G__defined_typename("UInt_t"),0,0,1,1,0,"","/< Return the common length of filter response",(void*)NULL,0);
   G__memfunc_setup("GetNum",592,G__BaseDict_372_3_3,104,-1,G__defined_typename("UInt_t"),0,0,1,1,0,"","/< Return the number of filters in the bank",(void*)NULL,0);
   G__memfunc_setup("SetLength",910,G__BaseDict_372_4_3,121,-1,-1,0,1,1,1,0,"h - 'UInt_t' 0 - -","/< Set the length of the filters",(void*)NULL,0);
   G__memfunc_setup("SetNum",604,G__BaseDict_372_5_3,121,-1,-1,0,1,1,1,0,"h - 'UInt_t' 0 - -","/< Set the number of the filters",(void*)NULL,0);
   G__memfunc_setup("SetZero",716,G__BaseDict_372_6_3,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - z","/< Set the index of the zero-point in the filters",(void*)NULL,0);
   G__memfunc_setup("GetZero",704,G__BaseDict_372_7_3,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"","/< Get the index of the zero-point in the filters",(void*)NULL,0);
   G__memfunc_setup("Synthesize",1078,G__BaseDict_372_8_3,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,0,2,1,1,0,
"U 'TDSPVector' - 0 - input U 'TDSPVector' - 0 NULL output","/< Perform the synthesis operation",(void*)NULL,0);
   G__memfunc_setup("Analyze",724,G__BaseDict_372_9_3,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,0,2,1,1,0,
"U 'TDSPVector' - 0 - input U 'TDSPVector' - 0 NULL output","/< Perform the analysis operation",(void*)NULL,0);
   G__memfunc_setup("InitFromProtoType",1758,G__BaseDict_372_0_4,121,-1,-1,0,2,1,1,0,
"C - 'Option_t' 10 - method U 'TDSPVector' - 0 - input","/< Init the filters by a method and a prototyp",(void*)NULL,1);
   G__memfunc_setup("LoadAndInitFromProtoType",2417,G__BaseDict_372_1_4,121,-1,-1,0,3,1,1,0,
"C - 'Option_t' 10 - method C - - 0 - fname "
"C - - 0 NULL key","/< Load \"fname\" and Init the filters by a method and a prototyp",(void*)NULL,1);
   G__memfunc_setup("GetFreqPad",963,G__BaseDict_372_2_4,104,-1,G__defined_typename("UInt_t"),0,0,1,1,8,"","/< Get the frequency pad (only for DFT-Filterbanks)",(void*)NULL,0);
   G__memfunc_setup("SetFreqPad",975,G__BaseDict_372_3_4,121,-1,-1,0,1,1,1,0,"h - 'UInt_t' 0 - f","/< Set the frequency pad (only for DFT-Filterbanks)",(void*)NULL,0);
   G__memfunc_setup("GetNumActiveFilters",1925,G__BaseDict_372_4_4,104,-1,G__defined_typename("UInt_t"),0,0,1,1,8,"","/< Return the number of active filters",(void*)NULL,0);
   G__memfunc_setup("Print",525,G__BaseDict_372_5_4,121,-1,-1,0,0,1,1,0,"","/< Print out the settings",(void*)NULL,0);
   G__memfunc_setup("GetBandWidthEfficiency",2186,G__BaseDict_372_6_4,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDualMatrix",1307,G__BaseDict_372_7_4,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix),-1,0,1,1,1,0,"C - 'Option_t' 10 \"pseudoinverse\" method",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__BaseDict_372_8_4,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_372_9_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_372_0_5,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_372_1_5,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_372_2_5,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_372_3_5,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_372_4_5,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_372_5_5,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_372_6_5,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_372_7_5,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_372_8_5,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_372_9_5,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPFilterBank",1309,G__BaseDict_372_0_6,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPFilterBank),-1,0,1,1,1,0,"u 'TDSPFilterBank' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPFilterBank",1435,G__BaseDict_372_1_6,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPCorrelationFilter(void) {
   /* TDSPCorrelationFilter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPCorrelationFilter));
   G__memfunc_setup("TDSPCorrelationFilter",2083,G__BaseDict_375_0_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPCorrelationFilter),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Init",404,G__BaseDict_375_2_0,121,-1,-1,0,2,1,1,0,
"d - 'Double_t' 0 1 MaxTime i - 'Int_t' 0 100 Entries","Initialize the Filter / Calculate the Filter",(void*)NULL,0);
   G__memfunc_setup("Correlation",1154,G__BaseDict_375_3_0,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"d - 'Double_t' 0 - -","Calculates the Correlation for a given time delay",(void*)NULL,1);
   G__memfunc_setup("GetCorrelation",1442,G__BaseDict_375_4_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMethod",897,G__BaseDict_375_5_0,105,G__get_linked_tagnum(&G__BaseDictLN_eCorrFilterMethod),-1,0,0,1,1,0,"","Get the Current Method",(void*)NULL,0);
   G__memfunc_setup("SetMethod",909,G__BaseDict_375_6_0,121,-1,-1,0,1,1,1,0,"i 'eCorrFilterMethod' - 0 - m","Set the Method",(void*)NULL,0);
   G__memfunc_setup("SetAR",447,G__BaseDict_375_7_0,121,-1,-1,0,1,1,1,0,"h - 'UInt_t' 0 - ar","Set the Number of AR-Parameters",(void*)NULL,0);
   G__memfunc_setup("GetAR",435,G__BaseDict_375_8_0,104,-1,G__defined_typename("UInt_t"),0,0,1,1,0,"","Get the Number of AR-Parameters",(void*)NULL,0);
   G__memfunc_setup("SetMA",442,G__BaseDict_375_9_0,121,-1,-1,0,1,1,1,0,"h - 'UInt_t' 0 - ma","Set the Number of AM-Parameters",(void*)NULL,0);
   G__memfunc_setup("GetMA",430,G__BaseDict_375_0_1,104,-1,G__defined_typename("UInt_t"),0,0,1,1,0,"","Get the Number of AM-Parameters",(void*)NULL,0);
   G__memfunc_setup("SetARMA",589,G__BaseDict_375_1_1,121,-1,-1,0,2,1,1,0,
"h - 'UInt_t' 0 - ar h - 'UInt_t' 0 - ma","Set the Number of AR- and MA-Parameters",(void*)NULL,0);
   G__memfunc_setup("EnableOption",1216,G__BaseDict_375_2_1,121,-1,-1,0,1,1,1,0,"i 'eCorrFilterOptions' - 0 - o",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DisableOption",1325,G__BaseDict_375_3_1,121,-1,-1,0,1,1,1,0,"i 'eCorrFilterOptions' - 0 - o",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Test",416,G__BaseDict_375_4_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__BaseDict_375_5_1,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_375_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_375_7_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_375_8_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_375_9_1,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_375_0_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_375_1_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_375_2_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_375_3_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_375_4_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_375_5_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_375_6_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPCorrelationFilter",2083,G__BaseDict_375_7_2,(int)('i'),
G__get_linked_tagnum(&G__BaseDictLN_TDSPCorrelationFilter),-1,0,1,1,1,0,"u 'TDSPCorrelationFilter' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPCorrelationFilter",2209,G__BaseDict_375_8_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPMath(void) {
   /* TDSPMath */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPMath));
   G__memfunc_setup("BesselJ0",728,G__BaseDict_376_0_0,100,-1,G__defined_typename("Double_t"),0,1,3,1,0,"d - 'Double_t' 0 - x",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Q",81,G__BaseDict_376_1_0,100,-1,G__defined_typename("Double_t"),0,1,3,1,0,"d - 'Double_t' 0 - x",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("QSqrt",507,G__BaseDict_376_2_0,100,-1,G__defined_typename("Double_t"),0,1,3,1,0,"d - 'Double_t' 0 - x",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Rayleigh",821,G__BaseDict_376_3_0,100,-1,G__defined_typename("Double_t"),0,2,3,1,0,
"d - 'Double_t' 0 - x d - 'Double_t' 0 1 sigma",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("dB",166,G__BaseDict_376_4_0,100,-1,G__defined_typename("Double_t"),0,1,3,1,0,"d - 'Double_t' 0 - x",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("FromdB",570,G__BaseDict_376_5_0,100,-1,G__defined_typename("Double_t"),0,1,3,1,0,"d - 'Double_t' 0 - x",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Lorentz",750,G__BaseDict_376_6_0,100,-1,G__defined_typename("Double_t"),0,2,3,1,0,
"d - 'Double_t' 0 - x d - 'Double_t' 0 1 sigma",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__BaseDict_376_7_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_376_8_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_376_9_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_376_0_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_376_1_1,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_376_2_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_376_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_376_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_376_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_376_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_376_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_376_8_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic default constructor
   G__memfunc_setup("TDSPMath",709,G__BaseDict_376_9_1,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPMath),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPMath",709,G__BaseDict_376_0_2,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPMath),-1,0,1,1,1,0,"u 'TDSPMath' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPMath",835,G__BaseDict_376_1_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPJakes(void) {
   /* TDSPJakes */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPJakes));
   G__memfunc_setup("TDSPJakes",809,G__BaseDict_377_0_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPJakes),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetSpeed",797,G__BaseDict_377_2_0,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - -","Set the Speed in m/s",(void*)NULL,0);
   G__memfunc_setup("SetSpeedKMH",1021,G__BaseDict_377_3_0,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - -","Set the Speed in km/h",(void*)NULL,0);
   G__memfunc_setup("SetCarrierFrequency",1958,G__BaseDict_377_4_0,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - -","Set the Carrier Frequency in Hz",(void*)NULL,0);
   G__memfunc_setup("GetDopplerFrequency",1960,G__BaseDict_377_5_0,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"","Return the Doppler Frequency in Hz",(void*)NULL,0);
   G__memfunc_setup("SetDopplerFrequency",1972,G__BaseDict_377_6_0,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - -","Set direct the Doppler Frequency and correct the speed",(void*)NULL,0);
   G__memfunc_setup("Correlation",1154,G__BaseDict_377_7_0,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"d - 'Double_t' 0 - -","Calculates the Correlation for a given time delay",(void*)NULL,1);
   G__memfunc_setup("Class",502,G__BaseDict_377_8_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_377_9_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_377_0_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_377_1_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_377_2_1,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_377_3_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_377_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_377_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_377_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_377_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_377_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_377_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPJakes",809,G__BaseDict_377_0_2,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPJakes),-1,0,1,1,1,0,"u 'TDSPJakes' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPJakes",935,G__BaseDict_377_1_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPFunction(void) {
   /* TDSPFunction */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFunction));
   G__memfunc_setup("TDSPFunction",1153,G__BaseDict_378_0_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPFunction),-1,0,1,1,1,0,"C - - 0 NULL name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("F",70,G__BaseDict_378_2_0,117,G__get_linked_tagnum(&G__BaseDictLN_TComplex),-1,0,1,1,1,0,"u 'TComplex' - 0 - in",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Apply",518,G__BaseDict_378_3_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,1,1,1,0,"U 'TDSPSignal' - 0 - input",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Update",611,G__BaseDict_378_4_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,1,1,1,0,"U 'TDSPSignal' - 0 - input",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__BaseDict_378_5_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_378_6_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_378_7_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_378_8_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_378_9_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_378_0_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_378_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_378_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_378_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_378_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_378_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_378_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPFunction",1153,G__BaseDict_378_7_1,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPFunction),-1,0,1,1,1,0,"u 'TDSPFunction' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPFunction",1279,G__BaseDict_378_8_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPClip(void) {
   /* TDSPClip */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPClip));
   G__memfunc_setup("TDSPClip",707,G__BaseDict_379_0_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPClip),-1,0,1,1,1,0,"C - - 0 NULL name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetClip",692,G__BaseDict_379_2_0,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - c",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetClip",680,G__BaseDict_379_3_0,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("F",70,G__BaseDict_379_4_0,117,G__get_linked_tagnum(&G__BaseDictLN_TComplex),-1,0,1,1,1,0,"u 'TComplex' - 0 - in",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__BaseDict_379_5_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_379_6_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_379_7_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_379_8_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_379_9_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_379_0_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_379_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_379_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_379_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_379_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_379_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_379_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPClip",707,G__BaseDict_379_7_1,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPClip),-1,0,1,1,1,0,"u 'TDSPClip' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPClip",833,G__BaseDict_379_8_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPBlockSolve(void) {
   /* TDSPBlockSolve */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockSolve));
   G__memfunc_setup("TDSPBlockSolve",1327,G__BaseDict_381_0_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockSolve),-1,0,1,1,1,0,"C - - 0 NULL name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetBlockLen",1066,G__BaseDict_381_2_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Print",525,G__BaseDict_381_3_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetSolver",923,G__BaseDict_381_4_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSolver),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetSolver",935,G__BaseDict_381_5_0,121,-1,-1,0,1,1,1,0,"U 'TDSPSolver' - 0 - s",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Solve",521,G__BaseDict_381_6_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,1,1,1,0,"U 'TDSPSignal' - 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Update",611,G__BaseDict_381_7_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,1,1,1,0,"U 'TDSPSignal' - 0 - input",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__BaseDict_381_8_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_381_9_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_381_0_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_381_1_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_381_2_1,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_381_3_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_381_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_381_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_381_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_381_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_381_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_381_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPBlockSolve",1327,G__BaseDict_381_0_2,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockSolve),-1,0,1,1,1,0,"u 'TDSPBlockSolve' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPBlockSolve",1453,G__BaseDict_381_1_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPEstimator(void) {
   /* TDSPEstimator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPEstimator));
   G__memfunc_setup("GetEstimate",1116,G__BaseDict_382_2_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Estimate",828,G__BaseDict_382_3_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,0,1,1,1,0,"U 'TDSPVector' - 0 - y",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Calculate",910,G__BaseDict_382_4_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Class",502,G__BaseDict_382_5_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_382_6_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_382_7_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_382_8_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_382_9_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_382_0_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_382_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_382_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_382_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_382_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_382_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_382_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPEstimator",1393,G__BaseDict_382_7_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPLmmse(void) {
   /* TDSPLmmse */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPLmmse));
   G__memfunc_setup("_init",531,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("recalc1",667,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("recalc2",668,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("default_noise_covariance",2524,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,4,0,
"i - 'Int_t' 0 - rows i - 'Int_t' 0 - cols","Set default noise covariance (unit matrix)",(void*)NULL,0);
   G__memfunc_setup("default_x_covariance",2102,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,4,0,
"i - 'Int_t' 0 - rows i - 'Int_t' 0 - cols","Set default x covariance (unit matrix)",(void*)NULL,0);
   G__memfunc_setup("updatefHCxHStar",1486,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDSPLmmse",825,G__BaseDict_383_6_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPLmmse),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDSPLmmse",825,G__BaseDict_383_7_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPLmmse),-1,0,1,1,1,0,"U 'TDSPMatrix' - 0 - H",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDSPLmmse",825,G__BaseDict_383_8_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPLmmse),-1,0,3,1,1,0,
"U 'TDSPMatrix' - 0 - H U 'TDSPMatrix' - 0 - Cx "
"U 'TDSPMatrix' - 0 - Cn",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Estimate",828,G__BaseDict_383_0_1,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,0,1,1,1,0,"U 'TDSPVector' - 0 - y","Estimate ",(void*)NULL,1);
   G__memfunc_setup("Calculate",910,G__BaseDict_383_1_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetMatrix",929,G__BaseDict_383_2_1,121,-1,-1,0,1,1,1,0,"U 'TDSPMatrix' - 0 - h",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMatrix",917,G__BaseDict_383_3_1,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetPostMatrix",1351,G__BaseDict_383_4_1,121,-1,-1,0,1,1,1,0,"U 'TDSPMatrix' - 0 - h",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPostMatrix",1339,G__BaseDict_383_5_1,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetXCovariance",1407,G__BaseDict_383_6_1,121,-1,-1,0,1,1,1,0,"U 'TDSPMatrix' - 0 - c",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetXCovariance",1395,G__BaseDict_383_7_1,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetNoiseCovariance",1829,G__BaseDict_383_8_1,121,-1,-1,0,1,1,1,0,"U 'TDSPMatrix' - 0 - c",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNoiseCovariance",1817,G__BaseDict_383_9_1,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetNoise",810,G__BaseDict_383_0_2,121,-1,-1,0,1,1,1,0,"u 'TComplex' - 0 - sigma2",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNoise",798,G__BaseDict_383_1_2,117,G__get_linked_tagnum(&G__BaseDictLN_TComplex),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetEstimatorMatrix",1869,G__BaseDict_383_2_2,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__BaseDict_383_3_2,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_383_4_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_383_5_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_383_6_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_383_7_2,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_383_8_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_383_9_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_383_0_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_383_1_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_383_2_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_383_3_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_383_4_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPLmmse",825,G__BaseDict_383_5_3,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPLmmse),-1,0,1,1,1,0,"u 'TDSPLmmse' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPLmmse",951,G__BaseDict_383_6_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPFastBpsk(void) {
   /* TDSPFastBpsk */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFastBpsk));
   G__memfunc_setup("GenerateSymbols",1556,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,2,0,
"i - 'Int_t' 0 - num U 'TComplex' - 0 - c","Generate a lot of symbols ",(void*)NULL,1);
   G__memfunc_setup("GenerateSymbol",1441,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,1,1,2,0,"U 'TComplex' - 0 - c",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DetectSymbol",1231,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,1,1,2,0,"u 'TComplex' - 1 - s",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TDSPFastBpsk",1113,G__BaseDict_384_3_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPFastBpsk),-1,0,1,1,1,0,"C - - 0 NULL name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__BaseDict_384_5_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_384_6_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_384_7_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_384_8_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_384_9_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_384_0_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_384_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_384_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_384_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_384_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_384_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_384_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPFastBpsk",1113,G__BaseDict_384_7_1,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPFastBpsk),-1,0,1,1,1,0,"u 'TDSPFastBpsk' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPFastBpsk",1239,G__BaseDict_384_8_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPFastQpsk(void) {
   /* TDSPFastQpsk */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFastQpsk));
   G__memfunc_setup("GenerateSymbols",1556,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,2,0,
"i - 'Int_t' 0 - num U 'TComplex' - 0 - c","Generate a lot of symbols ",(void*)NULL,1);
   G__memfunc_setup("GenerateSymbol",1441,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,1,1,2,0,"U 'TComplex' - 0 - c",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DetectSymbol",1231,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,1,1,2,0,"u 'TComplex' - 1 - s",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TDSPFastQpsk",1128,G__BaseDict_385_3_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPFastQpsk),-1,0,1,1,1,0,"C - - 0 NULL name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__BaseDict_385_5_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_385_6_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_385_7_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_385_8_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_385_9_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_385_0_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_385_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_385_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_385_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_385_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_385_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_385_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPFastQpsk",1128,G__BaseDict_385_7_1,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPFastQpsk),-1,0,1,1,1,0,"u 'TDSPFastQpsk' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPFastQpsk",1254,G__BaseDict_385_8_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPModulation(void) {
   /* TDSPModulation */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPModulation));
   G__memfunc_setup("TDSPModulation",1367,G__BaseDict_386_0_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPModulation),-1,0,1,1,1,0,"C - - 0 NULL name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetFrequency",1246,G__BaseDict_386_2_0,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - f",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetFrequency",1246,G__BaseDict_386_3_0,121,-1,-1,0,1,1,1,0,"u 'TComplex' - 1 - f",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetFrequency",1234,G__BaseDict_386_4_0,117,G__get_linked_tagnum(&G__BaseDictLN_TComplex),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetPhase",797,G__BaseDict_386_5_0,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - phase",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPhase",785,G__BaseDict_386_6_0,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetBlockLen",1078,G__BaseDict_386_7_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBlockLen",1066,G__BaseDict_386_8_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetBurstOffset",1443,G__BaseDict_386_9_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - bu",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetBurstOffset",1431,G__BaseDict_386_0_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Modulate",827,G__BaseDict_386_1_1,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,0,1,1,1,0,"U 'TDSPVector' - 0 - in",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Update",611,G__BaseDict_386_2_1,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,1,1,1,0,"U 'TDSPSignal' - 0 - -","Update-Slot",(void*)NULL,1);
   G__memfunc_setup("Reset",515,G__BaseDict_386_3_1,121,-1,-1,0,0,1,1,0,"","Reset-Slot",(void*)NULL,1);
   G__memfunc_setup("Class",502,G__BaseDict_386_4_1,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_386_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_386_6_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_386_7_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_386_8_1,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_386_9_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_386_0_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_386_1_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_386_2_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_386_3_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_386_4_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_386_5_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPModulation",1367,G__BaseDict_386_6_2,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPModulation),-1,0,1,1,1,0,"u 'TDSPModulation' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPModulation",1493,G__BaseDict_386_7_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPWienerProcess(void) {
   /* TDSPWienerProcess */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPWienerProcess));
   G__memfunc_setup("TDSPWienerProcess",1668,G__BaseDict_387_0_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPWienerProcess),-1,0,1,1,1,0,"C - - 0 NULL name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MultRandPhase",1304,G__BaseDict_387_2_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,0,6,3,1,0,
"U 'TDSPVector' - 0 - input d - 'Double_t' 0 1 B "
"d - 'Double_t' 0 0 burstlen d - 'Double_t' 0 0 burstoff "
"d - 'Double_t' 0 0 Phase U 'TDSPVector' - 0 NULL output","init with rand. wiener phase noise mult. on an input v",(void*)NULL,0);
   G__memfunc_setup("Apply",518,G__BaseDict_387_3_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,0,2,1,1,0,
"U 'TDSPVector' - 0 - input U 'TDSPVector' - 0 NULL output",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Update",611,G__BaseDict_387_4_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,1,1,1,0,"U 'TDSPSignal' - 0 - input",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetVariance",1109,G__BaseDict_387_5_0,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - v",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetVariance",1097,G__BaseDict_387_6_0,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetBurstLen",1115,G__BaseDict_387_7_0,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - r",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetBurstLen",1103,G__BaseDict_387_8_0,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetPhase",797,G__BaseDict_387_9_0,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - p",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPhase",785,G__BaseDict_387_0_1,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetBurstOffset",1443,G__BaseDict_387_1_1,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - o",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetBurstOffset",1431,G__BaseDict_387_2_1,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__BaseDict_387_3_1,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_387_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_387_5_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_387_6_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_387_7_1,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_387_8_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_387_9_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_387_0_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_387_1_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_387_2_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_387_3_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_387_4_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPWienerProcess",1668,G__BaseDict_387_5_2,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPWienerProcess),-1,0,1,1,1,0,"u 'TDSPWienerProcess' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPWienerProcess",1794,G__BaseDict_387_6_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPMonitor(void) {
   /* TDSPMonitor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPMonitor));
   G__memfunc_setup("TDSPMonitor",1059,G__BaseDict_388_0_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPMonitor),-1,0,1,1,1,0,"C - - 0 NULL name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetBlockLen",1078,G__BaseDict_388_2_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetBlockLen",1066,G__BaseDict_388_3_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNamedSignal",1379,G__BaseDict_388_4_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,1,1,1,0,"C - - 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Monitor",744,G__BaseDict_388_5_0,121,-1,-1,0,1,1,1,0,"C - - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Update",611,G__BaseDict_388_6_0,121,-1,-1,0,1,1,1,0,"U 'TDSPSignal' - 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__BaseDict_388_7_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_388_8_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_388_9_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_388_0_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_388_1_1,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_388_2_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_388_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_388_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_388_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_388_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_388_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_388_8_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPMonitor",1185,G__BaseDict_388_9_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPSource(void) {
   /* TDSPSource */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSource));
   G__memfunc_setup("TDSPSource",940,G__BaseDict_389_0_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPSource),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetSender",909,G__BaseDict_389_2_0,121,-1,-1,0,1,1,1,0,"U 'TQQObject' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetSender",897,G__BaseDict_389_3_0,85,G__get_linked_tagnum(&G__BaseDictLN_TQQObject),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetSignal",906,G__BaseDict_389_4_0,121,-1,-1,0,1,1,1,0,"U 'TDSPSignal' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetSignal",894,G__BaseDict_389_5_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__BaseDict_389_6_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_389_7_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_389_8_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_389_9_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_389_0_1,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_389_1_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_389_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_389_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_389_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_389_5_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_389_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_389_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPSource",940,G__BaseDict_389_8_1,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPSource),-1,0,1,1,1,0,"u 'TDSPSource' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPSource",1066,G__BaseDict_389_9_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPFilterMap(void) {
   /* TDSPFilterMap */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFilterMap));
   G__memfunc_setup("_isMySynthesisBank",1863,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("_isMyAnalysisBank",1729,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("_enableMySynthesisBank",2258,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("_enableMyAnalysisBank",2124,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("_disableMySynthesisBank",2367,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("_disableMyAnalysisBank",2233,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("_cleanSynthesisBank",1960,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("_cleanAnalysisBank",1826,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("_createMySynthesisBank",2271,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("_createMyAnalysisBank",2137,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("_provideBanks",1351,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDSPFilterMap",1215,G__BaseDict_390_1_1,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPFilterMap),-1,0,1,1,1,0,"C - - 0 NULL name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSignal",894,G__BaseDict_390_3_1,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetInverseSignal",1626,G__BaseDict_390_4_1,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetNumFilters",1333,G__BaseDict_390_5_1,121,-1,-1,0,1,1,1,0,"h - 'UInt_t' 0 - n",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNumFilters",1321,G__BaseDict_390_6_1,104,-1,G__defined_typename("UInt_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetSubSamplings",1540,G__BaseDict_390_7_1,121,-1,-1,0,1,1,1,0,"h - 'UInt_t' 0 - s",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetTimePad",976,G__BaseDict_390_8_1,121,-1,-1,0,1,1,1,0,"h - 'UInt_t' 0 - s",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetTimePad",964,G__BaseDict_390_9_1,104,-1,G__defined_typename("UInt_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetFreqPad",975,G__BaseDict_390_0_2,121,-1,-1,0,1,1,1,0,"h - 'UInt_t' 0 - -","/< for DFT-filterbanks ",(void*)NULL,0);
   G__memfunc_setup("GetFreqPad",963,G__BaseDict_390_1_2,104,-1,G__defined_typename("UInt_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetBandWidthEfficiency",2186,G__BaseDict_390_2_2,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSubSamplings",1528,G__BaseDict_390_3_2,104,-1,G__defined_typename("UInt_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Activate",817,G__BaseDict_390_4_2,121,-1,-1,0,1,1,1,0,"h - 'UInt_t' 0 - s","/< Activate the filter \"s\" on analysis+synthesis bank",(void*)NULL,0);
   G__memfunc_setup("Deactivate",1018,G__BaseDict_390_5_2,121,-1,-1,0,1,1,1,0,"h - 'UInt_t' 0 - s","/< Deactivate the filter \"s\" on analysis+synthesis bank",(void*)NULL,0);
   G__memfunc_setup("GetSynthesisFilter",1872,G__BaseDict_390_6_2,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,0,1,1,1,0,"h - 'UInt_t' 0 - s","/< return synthesis filter \"s\"",(void*)NULL,0);
   G__memfunc_setup("GetAnalysisFilter",1738,G__BaseDict_390_7_2,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,0,1,1,1,0,"h - 'UInt_t' 0 - s","/< return analysis filter \"s\"",(void*)NULL,0);
   G__memfunc_setup("GetNumActiveSynthesisFilters",2895,G__BaseDict_390_8_2,104,-1,G__defined_typename("UInt_t"),0,0,1,1,0,"","/< return the number of active Synthesis filter",(void*)NULL,0);
   G__memfunc_setup("GetNumActiveAnalysisFilters",2761,G__BaseDict_390_9_2,104,-1,G__defined_typename("UInt_t"),0,0,1,1,0,"","/< return the number of active Analysis filter",(void*)NULL,0);
   G__memfunc_setup("SetAnalysisBank",1516,G__BaseDict_390_0_3,121,-1,-1,0,1,1,1,0,"U 'TDSPFilterBank' - 0 - m",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetSynthesisBank",1650,G__BaseDict_390_1_3,121,-1,-1,0,1,1,1,0,"U 'TDSPFilterBank' - 0 - m",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetAnalysisBank",1504,G__BaseDict_390_2_3,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPFilterBank),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSynthesisBank",1638,G__BaseDict_390_3_3,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPFilterBank),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetBlockLen",1066,G__BaseDict_390_4_3,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"","/< the input blocklen",(void*)NULL,1);
   G__memfunc_setup("SetMatrix",929,G__BaseDict_390_5_3,121,-1,-1,0,1,1,1,0,"U 'TDSPMatrix' - 0 - a",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMatrix",917,G__BaseDict_390_6_3,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetInverseMatrix",1661,G__BaseDict_390_7_3,121,-1,-1,0,1,1,1,0,"U 'TDSPMatrix' - 0 - a",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetInverseMatrix",1649,G__BaseDict_390_8_3,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Synthesize",1078,G__BaseDict_390_9_3,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,0,2,1,1,0,
"U 'TDSPVector' - 0 - input U 'TDSPVector' - 0 NULL output",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Analyze",724,G__BaseDict_390_0_4,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,0,2,1,1,0,
"U 'TDSPVector' - 0 - input U 'TDSPVector' - 0 NULL output",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("LoadAndInitFromProtoType",2417,G__BaseDict_390_1_4,121,-1,-1,0,2,1,1,0,
"C - 'Option_t' 10 - method C - - 0 - fname","/< Load fname and init the filterbanks",(void*)NULL,0);
   G__memfunc_setup("Print",525,G__BaseDict_390_2_4,121,-1,-1,0,0,1,1,0,"","/< Print information about the setup",(void*)NULL,1);
   G__memfunc_setup("Update",611,G__BaseDict_390_3_4,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,1,1,1,0,"U 'TDSPSignal' - 0 - input","Calls Synthesize and Emits \"Update(TDSPSignal*)\"",(void*)NULL,0);
   G__memfunc_setup("InverseUpdate",1343,G__BaseDict_390_4_4,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,1,1,1,0,"U 'TDSPSignal' - 0 - input","Calls Analyse and Emits \"InverseUpdate(TDSPSignal*)\"",(void*)NULL,0);
   G__memfunc_setup("Class",502,G__BaseDict_390_5_4,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_390_6_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_390_7_4,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_390_8_4,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_390_9_4,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_390_0_5,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_390_1_5,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_390_2_5,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_390_3_5,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_390_4_5,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_390_5_5,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_390_6_5,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPFilterMap",1215,G__BaseDict_390_7_5,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPFilterMap),-1,0,1,1,1,0,"u 'TDSPFilterMap' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPFilterMap",1341,G__BaseDict_390_8_5,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPFMT(void) {
   /* TDSPFMT */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFMT));
   G__memfunc_setup("_build_pulse_param_string",2653,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__BaseDictLN_TString),-1,1,1,1,4,0,"u 'TString' - 1 - start",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDSPFMT",546,G__BaseDict_391_1_0,105,G__get_linked_tagnum(&G__BaseDictLN_TDSPFMT),-1,0,1,1,1,0,"C - - 0 NULL name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNumCarriers",1419,G__BaseDict_391_3_0,104,-1,G__defined_typename("UInt_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetNumCarriers",1431,G__BaseDict_391_4_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - n","Configure the filterbank for the use of \"n\" carriers",(void*)NULL,0);
   G__memfunc_setup("GetTransmitMatrix",1767,G__BaseDict_391_5_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetReceiverMatrix",1738,G__BaseDict_391_6_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetTransmitPulse",1659,G__BaseDict_391_7_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,0,1,1,1,0,"U 'TDSPVector' - 0 NULL p",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetReceiverPulse",1630,G__BaseDict_391_8_0,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,0,1,1,1,0,"U 'TDSPVector' - 0 NULL p",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetTransmitMatrix",1779,G__BaseDict_391_9_0,121,-1,-1,0,1,1,1,0,"U 'TDSPMatrix' - 0 - h",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetReceiverMatrix",1750,G__BaseDict_391_0_1,121,-1,-1,0,1,1,1,0,"U 'TDSPMatrix' - 0 - h",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetOption",933,G__BaseDict_391_1_1,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 - opt",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("LoadPulses",1020,G__BaseDict_391_2_1,121,-1,-1,0,3,1,1,0,
"C - - 0 - fname C - - 0 \"TransmitMatrix\" transmitname "
"C - - 0 \"ReceiverMatrix\" receivername",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SavePulses",1035,G__BaseDict_391_3_1,121,-1,-1,0,3,1,1,0,
"C - - 0 - fname C - - 0 \"TransmitMatrix\" transmitname "
"C - - 0 \"ReceiverMatrix\" receivername",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Update",611,G__BaseDict_391_4_1,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,1,1,1,0,"U 'TDSPSignal' - 0 - input","Calls Synthesize and Emits \"Update(TDSPSignal*)\"",(void*)NULL,0);
   G__memfunc_setup("InverseUpdate",1343,G__BaseDict_391_5_1,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),-1,0,1,1,1,0,"U 'TDSPSignal' - 0 - input","Calls Analyse and Emits \"InverseUpdate(TDSPSignal*)\"",(void*)NULL,0);
   G__memfunc_setup("Class",502,G__BaseDict_391_6_1,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_391_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_391_8_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_391_9_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_391_0_2,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_391_1_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_391_2_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_391_3_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_391_4_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_391_5_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_391_6_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_391_7_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPFMT",546,G__BaseDict_391_8_2,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TDSPFMT),-1,0,1,1,1,0,"u 'TDSPFMT' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPFMT",672,G__BaseDict_391_9_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMaple(void) {
   /* TMaple */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BaseDictLN_TMaple));
   G__memfunc_setup("TMaple",579,G__BaseDict_392_0_0,105,G__get_linked_tagnum(&G__BaseDictLN_TMaple),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Get",288,G__BaseDict_392_2_0,67,-1,-1,0,1,1,1,0,"C - - 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Put",313,G__BaseDict_392_3_0,67,-1,-1,0,1,1,1,0,"C - - 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__BaseDict_392_4_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__BaseDict_392_5_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__BaseDict_392_6_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__BaseDict_392_7_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__BaseDict_392_8_0,85,G__get_linked_tagnum(&G__BaseDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__BaseDict_392_9_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__BaseDict_392_0_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BaseDict_392_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__BaseDict_392_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__BaseDict_392_3_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__BaseDict_392_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__BaseDict_392_5_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TMaple",579,G__BaseDict_392_6_1,(int)('i'),G__get_linked_tagnum(&G__BaseDictLN_TMaple),-1,0,1,1,1,0,"u 'TMaple' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TMaple",705,G__BaseDict_392_7_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncBaseDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseDictLN_eXCorr_Options),-1,-1,1,"kXCorrNone=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseDictLN_eXCorr_Options),-1,-1,1,"kXCorrCoeff=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseDictLN_eXCorr_Options),-1,-1,1,"kXCorrBiased=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseDictLN_eXCorr_Options),-1,-1,1,"kXCorrUnBiased=3",0,(char*)NULL);
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseDictLN_eStochasticType),-1,-1,1,"kNoChange=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseDictLN_eStochasticType),-1,-1,1,"kGauss=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseDictLN_eStochasticType),-1,-1,1,"kRayleigh=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseDictLN_eStochasticType),-1,-1,1,"kFilterGauss=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseDictLN_eStochasticType),-1,-1,1,"kFilterRayleigh=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseDictLN_eEstimateNumSymbols),-1,-1,1,"kEstimateSER=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseDictLN_eEstimateNumSymbols),-1,-1,1,"kEstimateSERlog=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseDictLN_eEstimateNumSymbols),-1,-1,1,"kEstimatedSERlog=2",0,(char*)NULL);
   G__memvar_setup((void*)(&gFFT),85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPfft),-1,-1,1,"gFFT=",0,(char*)NULL);
   G__memvar_setup((void*)(&gBlockFFT),85,0,0,G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockfft),-1,-1,1,"gBlockFFT=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseDictLN_eSignalDumpMode),-1,-1,1,"kSignalDumpAll=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseDictLN_eSignalDumpMode),-1,-1,1,"kSignalDumpParams=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseDictLN_eCorrFilterMethod),-1,-1,1,"kCorrFilterYule=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BaseDictLN_eCorrFilterMethod),-1,-1,1,"kCorrFilterProny=1",0,(char*)NULL);
   G__memvar_setup((void*)(&Pi),100,0,1,-1,G__defined_typename("Double_t"),-1,1,"Pi=",0,(char*)NULL);
}

static void G__cpp_setup_global8() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalBaseDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
  G__cpp_setup_global8();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
   G__memfunc_setup("operator>>",1000,G__BaseDict__7_45,117,G__get_linked_tagnum(&G__BaseDictLN_basic_istreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("istream"),1,2,1,1,0,
"u 'basic_istream<char,char_traits<char> >' 'istream' 1 - - u 'TDSPFifo' - 1 - -",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator<<",996,G__BaseDict__8_45,117,G__get_linked_tagnum(&G__BaseDictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ostream"),1,2,1,1,0,
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - - u 'TDSPFifo' - 1 - -",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator>>",1000,G__BaseDict__9_45,117,G__get_linked_tagnum(&G__BaseDictLN_basic_istreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("istream"),1,2,1,1,0,
"u 'basic_istream<char,char_traits<char> >' 'istream' 1 - - U 'TDSPFifo' - 0 - -",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator<<",996,G__BaseDict__0_46,117,G__get_linked_tagnum(&G__BaseDictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ostream"),1,2,1,1,0,
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - - U 'TDSPFifo' - 0 - -",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("filter",646,G__BaseDict__1_46,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,0,4,1,1,0,
"U 'TDSPFifo' - 0 - in U 'TDSPVector' - 0 - out "
"U 'TDSPVector' - 0 - fir U 'TDSPVector' - 0 NULL iir",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("filter",646,G__BaseDict__2_46,117,G__get_linked_tagnum(&G__BaseDictLN_TComplex),-1,0,4,1,1,0,
"U 'TDSPFifo' - 0 - in U 'TDSPFifo' - 0 - out "
"U 'TDSPVector' - 0 - fir U 'TDSPVector' - 0 NULL iir",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator>>",1000,G__BaseDict__4_46,117,G__get_linked_tagnum(&G__BaseDictLN_basic_istreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("istream"),1,2,1,1,0,
"u 'basic_istream<char,char_traits<char> >' 'istream' 1 - - u 'TDSPSignal' - 1 - -",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator<<",996,G__BaseDict__5_46,117,G__get_linked_tagnum(&G__BaseDictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ostream"),1,2,1,1,0,
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - - u 'TDSPSignal' - 1 - -",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator>>",1000,G__BaseDict__6_46,117,G__get_linked_tagnum(&G__BaseDictLN_basic_istreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("istream"),1,2,1,1,0,
"u 'basic_istream<char,char_traits<char> >' 'istream' 1 - - U 'TDSPSignal' - 0 - -",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator<<",996,G__BaseDict__7_46,117,G__get_linked_tagnum(&G__BaseDictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ostream"),1,2,1,1,0,
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - - U 'TDSPSignal' - 0 - -",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Modulator",951,G__BaseDict__5_47,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPSymbolGenerator),-1,0,2,1,1,0,
"C - 'Option_t' 10 - name i - 'Int_t' 0 0 param",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("fft",320,G__BaseDict__0_48,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,0,3,1,1,0,
"U 'TDSPVector' - 0 - in i - 'Int_t' 0 0 N "
"U 'TDSPVector' - 0 NULL out",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("ifft",425,G__BaseDict__1_48,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,0,3,1,1,0,
"U 'TDSPVector' - 0 - in i - 'Int_t' 0 0 N "
"U 'TDSPVector' - 0 NULL out",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("fft",320,G__BaseDict__2_48,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix),-1,0,3,1,1,0,
"U 'TDSPMatrix' - 0 - in i - 'Int_t' 0 - dim "
"U 'TDSPMatrix' - 0 NULL out",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("ifft",425,G__BaseDict__3_48,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix),-1,0,3,1,1,0,
"U 'TDSPMatrix' - 0 - in i - 'Int_t' 0 - dim "
"U 'TDSPMatrix' - 0 NULL out",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("blockfft",843,G__BaseDict__4_48,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,0,3,1,1,0,
"U 'TDSPVector' - 0 - in i - 'Int_t' 0 - BlockLen "
"U 'TDSPVector' - 0 NULL out",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("blockifft",948,G__BaseDict__5_48,85,G__get_linked_tagnum(&G__BaseDictLN_TDSPVector),-1,0,3,1,1,0,
"U 'TDSPVector' - 0 - in i - 'Int_t' 0 - BlockLen "
"U 'TDSPVector' - 0 NULL out",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("CheckEnter",988,G__BaseDict__6_48,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("dB",166,G__BaseDict__7_48,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"d - 'Double_t' 0 - x",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("FromdB",570,G__BaseDict__8_48,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"d - 'Double_t' 0 - x",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator==",998,G__BaseDict__9_48,103,-1,G__defined_typename("Bool_t"),0,2,1,1,0,
"u 'TDSPSource' - 1 - - u 'TDSPSource' - 1 - -",(char*)NULL
,(void*)NULL,0);

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcBaseDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__BaseDictLN_basic_istreamlEcharcOchar_traitslEchargRsPgR = { "basic_istream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_G__longlong = { "G__longlong" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TBrowser = { "TBrowser" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TApplication = { "TApplication" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TQObject = { "TQObject" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TQObjSender = { "TQObjSender" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TQQObject = { "TQQObject" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TQQGControl = { "TQQGControl" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TComplex = { "TComplex" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPData = { "TDSPData" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TArrayI = { "TArrayI" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TGraph = { "TGraph" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_eXCorr_Options = { "eXCorr_Options" , 101 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPVector = { "TDSPVector" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_eMatrixApplyMode = { "eMatrixApplyMode" , 101 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPMatrix = { "TDSPMatrix" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPSignal = { "TDSPSignal" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPFifo = { "TDSPFifo" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPOperator = { "TDSPOperator" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPGenerator = { "TDSPGenerator" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPSpectrum = { "TDSPSpectrum" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPOutput1 = { "TDSPOutput1" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPHarmonicGenerator = { "TDSPHarmonicGenerator" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPRating = { "TDSPRating" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPFilter = { "TDSPFilter" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPFifoFilter = { "TDSPFifoFilter" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_eStochasticType = { "eStochasticType" , 101 , -1 };
G__linked_taginfo G__BaseDictLN_eEstimateNumSymbols = { "eEstimateNumSymbols" , 101 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPSymbolGenerator = { "TDSPSymbolGenerator" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPStochasticProcess = { "TDSPStochasticProcess" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPStochasticScalar = { "TDSPStochasticScalar" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPStatistics = { "TDSPStatistics" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPBlockFifo = { "TDSPBlockFifo" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPBlockFifoFilter = { "TDSPBlockFifoFilter" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPStochasticSignal = { "TDSPStochasticSignal" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPfft = { "TDSPfft" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPGroup = { "TDSPGroup" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPBlockOperation = { "TDSPBlockOperation" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPConvolution = { "TDSPConvolution" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPChop = { "TDSPChop" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPBlockfft = { "TDSPBlockfft" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPBlockMap = { "TDSPBlockMap" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_eSignalDumpMode = { "eSignalDumpMode" , 101 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPSignalDump = { "TDSPSignalDump" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPReadSignal = { "TDSPReadSignal" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPPsk = { "TDSPPsk" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPSignalStudy = { "TDSPSignalStudy" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPQam = { "TDSPQam" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPPam = { "TDSPPam" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPOfdm = { "TDSPOfdm" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPStft = { "TDSPStft" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPNofdm = { "TDSPNofdm" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TRint = { "TRint" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPInt = { "TDSPInt" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPFilterBank = { "TDSPFilterBank" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_eCorrFilterMethod = { "eCorrFilterMethod" , 101 , -1 };
G__linked_taginfo G__BaseDictLN_eCorrFilterOptions = { "eCorrFilterOptions" , 101 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPCorrelationFilter = { "TDSPCorrelationFilter" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPMath = { "TDSPMath" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPJakes = { "TDSPJakes" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPFunction = { "TDSPFunction" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPClip = { "TDSPClip" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPSolver = { "TDSPSolver" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPBlockSolve = { "TDSPBlockSolve" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPEstimator = { "TDSPEstimator" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPLmmse = { "TDSPLmmse" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPFastBpsk = { "TDSPFastBpsk" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPFastQpsk = { "TDSPFastQpsk" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPModulation = { "TDSPModulation" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPWienerProcess = { "TDSPWienerProcess" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPMonitor = { "TDSPMonitor" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPSource = { "TDSPSource" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPFilterMap = { "TDSPFilterMap" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TDSPFMT = { "TDSPFMT" , 99 , -1 };
G__linked_taginfo G__BaseDictLN_TMaple = { "TMaple" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableBaseDict() {
  G__BaseDictLN_basic_istreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__BaseDictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__BaseDictLN_G__longlong.tagnum = -1 ;
  G__BaseDictLN_TClass.tagnum = -1 ;
  G__BaseDictLN_TBuffer.tagnum = -1 ;
  G__BaseDictLN_TMemberInspector.tagnum = -1 ;
  G__BaseDictLN_TObject.tagnum = -1 ;
  G__BaseDictLN_TNamed.tagnum = -1 ;
  G__BaseDictLN_TList.tagnum = -1 ;
  G__BaseDictLN_TBrowser.tagnum = -1 ;
  G__BaseDictLN_TString.tagnum = -1 ;
  G__BaseDictLN_TApplication.tagnum = -1 ;
  G__BaseDictLN_TQObject.tagnum = -1 ;
  G__BaseDictLN_TQObjSender.tagnum = -1 ;
  G__BaseDictLN_TCanvas.tagnum = -1 ;
  G__BaseDictLN_TH1F.tagnum = -1 ;
  G__BaseDictLN_TQQObject.tagnum = -1 ;
  G__BaseDictLN_TQQGControl.tagnum = -1 ;
  G__BaseDictLN_TComplex.tagnum = -1 ;
  G__BaseDictLN_TDSPData.tagnum = -1 ;
  G__BaseDictLN_TArrayI.tagnum = -1 ;
  G__BaseDictLN_TGraph.tagnum = -1 ;
  G__BaseDictLN_eXCorr_Options.tagnum = -1 ;
  G__BaseDictLN_TDSPVector.tagnum = -1 ;
  G__BaseDictLN_eMatrixApplyMode.tagnum = -1 ;
  G__BaseDictLN_TDSPMatrix.tagnum = -1 ;
  G__BaseDictLN_TDSPSignal.tagnum = -1 ;
  G__BaseDictLN_TDSPFifo.tagnum = -1 ;
  G__BaseDictLN_TDSPOperator.tagnum = -1 ;
  G__BaseDictLN_TDSPGenerator.tagnum = -1 ;
  G__BaseDictLN_TDSPSpectrum.tagnum = -1 ;
  G__BaseDictLN_TDSPOutput1.tagnum = -1 ;
  G__BaseDictLN_TDSPHarmonicGenerator.tagnum = -1 ;
  G__BaseDictLN_TDSPRating.tagnum = -1 ;
  G__BaseDictLN_TDSPFilter.tagnum = -1 ;
  G__BaseDictLN_TDSPFifoFilter.tagnum = -1 ;
  G__BaseDictLN_eStochasticType.tagnum = -1 ;
  G__BaseDictLN_eEstimateNumSymbols.tagnum = -1 ;
  G__BaseDictLN_TDSPSymbolGenerator.tagnum = -1 ;
  G__BaseDictLN_TDSPStochasticProcess.tagnum = -1 ;
  G__BaseDictLN_TDSPStochasticScalar.tagnum = -1 ;
  G__BaseDictLN_TDSPStatistics.tagnum = -1 ;
  G__BaseDictLN_TDSPBlockFifo.tagnum = -1 ;
  G__BaseDictLN_TDSPBlockFifoFilter.tagnum = -1 ;
  G__BaseDictLN_TDSPStochasticSignal.tagnum = -1 ;
  G__BaseDictLN_TDSPfft.tagnum = -1 ;
  G__BaseDictLN_TDSPGroup.tagnum = -1 ;
  G__BaseDictLN_TDSPBlockOperation.tagnum = -1 ;
  G__BaseDictLN_TDSPConvolution.tagnum = -1 ;
  G__BaseDictLN_TDSPChop.tagnum = -1 ;
  G__BaseDictLN_TDSPBlockfft.tagnum = -1 ;
  G__BaseDictLN_TDSPBlockMap.tagnum = -1 ;
  G__BaseDictLN_eSignalDumpMode.tagnum = -1 ;
  G__BaseDictLN_TDSPSignalDump.tagnum = -1 ;
  G__BaseDictLN_TDSPReadSignal.tagnum = -1 ;
  G__BaseDictLN_TDSPPsk.tagnum = -1 ;
  G__BaseDictLN_TDSPSignalStudy.tagnum = -1 ;
  G__BaseDictLN_TDSPQam.tagnum = -1 ;
  G__BaseDictLN_TDSPPam.tagnum = -1 ;
  G__BaseDictLN_TDSPOfdm.tagnum = -1 ;
  G__BaseDictLN_TDSPStft.tagnum = -1 ;
  G__BaseDictLN_TDSPNofdm.tagnum = -1 ;
  G__BaseDictLN_TRint.tagnum = -1 ;
  G__BaseDictLN_TDSPInt.tagnum = -1 ;
  G__BaseDictLN_TDSPFilterBank.tagnum = -1 ;
  G__BaseDictLN_eCorrFilterMethod.tagnum = -1 ;
  G__BaseDictLN_eCorrFilterOptions.tagnum = -1 ;
  G__BaseDictLN_TDSPCorrelationFilter.tagnum = -1 ;
  G__BaseDictLN_TDSPMath.tagnum = -1 ;
  G__BaseDictLN_TDSPJakes.tagnum = -1 ;
  G__BaseDictLN_TDSPFunction.tagnum = -1 ;
  G__BaseDictLN_TDSPClip.tagnum = -1 ;
  G__BaseDictLN_TDSPSolver.tagnum = -1 ;
  G__BaseDictLN_TDSPBlockSolve.tagnum = -1 ;
  G__BaseDictLN_TDSPEstimator.tagnum = -1 ;
  G__BaseDictLN_TDSPLmmse.tagnum = -1 ;
  G__BaseDictLN_TDSPFastBpsk.tagnum = -1 ;
  G__BaseDictLN_TDSPFastQpsk.tagnum = -1 ;
  G__BaseDictLN_TDSPModulation.tagnum = -1 ;
  G__BaseDictLN_TDSPWienerProcess.tagnum = -1 ;
  G__BaseDictLN_TDSPMonitor.tagnum = -1 ;
  G__BaseDictLN_TDSPSource.tagnum = -1 ;
  G__BaseDictLN_TDSPFilterMap.tagnum = -1 ;
  G__BaseDictLN_TDSPFMT.tagnum = -1 ;
  G__BaseDictLN_TMaple.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableBaseDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum(&G__BaseDictLN_basic_istreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum(&G__BaseDictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum(&G__BaseDictLN_G__longlong);
   G__get_linked_tagnum(&G__BaseDictLN_TClass);
   G__get_linked_tagnum(&G__BaseDictLN_TBuffer);
   G__get_linked_tagnum(&G__BaseDictLN_TMemberInspector);
   G__get_linked_tagnum(&G__BaseDictLN_TObject);
   G__get_linked_tagnum(&G__BaseDictLN_TNamed);
   G__get_linked_tagnum(&G__BaseDictLN_TList);
   G__get_linked_tagnum(&G__BaseDictLN_TBrowser);
   G__get_linked_tagnum(&G__BaseDictLN_TString);
   G__get_linked_tagnum(&G__BaseDictLN_TApplication);
   G__get_linked_tagnum(&G__BaseDictLN_TQObject);
   G__get_linked_tagnum(&G__BaseDictLN_TQObjSender);
   G__get_linked_tagnum(&G__BaseDictLN_TCanvas);
   G__get_linked_tagnum(&G__BaseDictLN_TH1F);
   G__get_linked_tagnum(&G__BaseDictLN_TQQObject);
   G__get_linked_tagnum(&G__BaseDictLN_TQQGControl);
   G__get_linked_tagnum(&G__BaseDictLN_TComplex);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPData),sizeof(TDSPData),-1,29952,(char*)NULL,G__setup_memvarTDSPData,G__setup_memfuncTDSPData);
   G__get_linked_tagnum(&G__BaseDictLN_TArrayI);
   G__get_linked_tagnum(&G__BaseDictLN_TGraph);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_eXCorr_Options),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__get_linked_tagnum(&G__BaseDictLN_TDSPVector);
   G__get_linked_tagnum(&G__BaseDictLN_eMatrixApplyMode);
   G__get_linked_tagnum(&G__BaseDictLN_TDSPMatrix);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSignal),sizeof(TDSPSignal),-1,64768,(char*)NULL,G__setup_memvarTDSPSignal,G__setup_memfuncTDSPSignal);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFifo),sizeof(TDSPFifo),-1,3328,(char*)NULL,G__setup_memvarTDSPFifo,G__setup_memfuncTDSPFifo);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPOperator),sizeof(TDSPOperator),-1,62720,(char*)NULL,G__setup_memvarTDSPOperator,G__setup_memfuncTDSPOperator);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPGenerator),sizeof(TDSPGenerator),-1,1280,(char*)NULL,G__setup_memvarTDSPGenerator,G__setup_memfuncTDSPGenerator);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSpectrum),sizeof(TDSPSpectrum),-1,29952,(char*)NULL,G__setup_memvarTDSPSpectrum,G__setup_memfuncTDSPSpectrum);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPOutput1),sizeof(TDSPOutput1),-1,62720,(char*)NULL,G__setup_memvarTDSPOutput1,G__setup_memfuncTDSPOutput1);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPHarmonicGenerator),sizeof(TDSPHarmonicGenerator),-1,62464,(char*)NULL,G__setup_memvarTDSPHarmonicGenerator,G__setup_memfuncTDSPHarmonicGenerator);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPRating),sizeof(TDSPRating),-1,1280,(char*)NULL,G__setup_memvarTDSPRating,G__setup_memfuncTDSPRating);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFilter),sizeof(TDSPFilter),-1,1280,(char*)NULL,G__setup_memvarTDSPFilter,G__setup_memfuncTDSPFilter);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFifoFilter),sizeof(TDSPFifoFilter),-1,1280,(char*)NULL,G__setup_memvarTDSPFifoFilter,G__setup_memfuncTDSPFifoFilter);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_eStochasticType),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_eEstimateNumSymbols),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSymbolGenerator),sizeof(TDSPSymbolGenerator),-1,62465,(char*)NULL,G__setup_memvarTDSPSymbolGenerator,G__setup_memfuncTDSPSymbolGenerator);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPStochasticProcess),sizeof(TDSPStochasticProcess),-1,1281,(char*)NULL,G__setup_memvarTDSPStochasticProcess,G__setup_memfuncTDSPStochasticProcess);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPStochasticScalar),sizeof(TDSPStochasticScalar),-1,1280,(char*)NULL,G__setup_memvarTDSPStochasticScalar,G__setup_memfuncTDSPStochasticScalar);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPStatistics),sizeof(TDSPStatistics),-1,0,(char*)NULL,G__setup_memvarTDSPStatistics,G__setup_memfuncTDSPStatistics);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockFifo),sizeof(TDSPBlockFifo),-1,62720,(char*)NULL,G__setup_memvarTDSPBlockFifo,G__setup_memfuncTDSPBlockFifo);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockFifoFilter),sizeof(TDSPBlockFifoFilter),-1,1280,(char*)NULL,G__setup_memvarTDSPBlockFifoFilter,G__setup_memfuncTDSPBlockFifoFilter);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPStochasticSignal),sizeof(TDSPStochasticSignal),-1,62720,(char*)NULL,G__setup_memvarTDSPStochasticSignal,G__setup_memfuncTDSPStochasticSignal);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPfft),sizeof(TDSPfft),-1,62720,(char*)NULL,G__setup_memvarTDSPfft,G__setup_memfuncTDSPfft);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPGroup),sizeof(TDSPGroup),-1,62720,(char*)NULL,G__setup_memvarTDSPGroup,G__setup_memfuncTDSPGroup);
   G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockOperation);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPConvolution),sizeof(TDSPConvolution),-1,62720,(char*)NULL,G__setup_memvarTDSPConvolution,G__setup_memfuncTDSPConvolution);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPChop),sizeof(TDSPChop),-1,62464,(char*)NULL,G__setup_memvarTDSPChop,G__setup_memfuncTDSPChop);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockfft),sizeof(TDSPBlockfft),-1,62720,(char*)NULL,G__setup_memvarTDSPBlockfft,G__setup_memfuncTDSPBlockfft);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockMap),sizeof(TDSPBlockMap),-1,62720,(char*)NULL,G__setup_memvarTDSPBlockMap,G__setup_memfuncTDSPBlockMap);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_eSignalDumpMode),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSignalDump),sizeof(TDSPSignalDump),-1,62720,(char*)NULL,G__setup_memvarTDSPSignalDump,G__setup_memfuncTDSPSignalDump);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPReadSignal),sizeof(TDSPReadSignal),-1,62464,(char*)NULL,G__setup_memvarTDSPReadSignal,G__setup_memfuncTDSPReadSignal);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPPsk),sizeof(TDSPPsk),-1,62464,(char*)NULL,G__setup_memvarTDSPPsk,G__setup_memfuncTDSPPsk);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSignalStudy),sizeof(TDSPSignalStudy),-1,62720,(char*)NULL,G__setup_memvarTDSPSignalStudy,G__setup_memfuncTDSPSignalStudy);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPQam),sizeof(TDSPQam),-1,62464,(char*)NULL,G__setup_memvarTDSPQam,G__setup_memfuncTDSPQam);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPPam),sizeof(TDSPPam),-1,62464,(char*)NULL,G__setup_memvarTDSPPam,G__setup_memfuncTDSPPam);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPOfdm),sizeof(TDSPOfdm),-1,62720,(char*)NULL,G__setup_memvarTDSPOfdm,G__setup_memfuncTDSPOfdm);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPStft),sizeof(TDSPStft),-1,62464,(char*)NULL,G__setup_memvarTDSPStft,G__setup_memfuncTDSPStft);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPNofdm),sizeof(TDSPNofdm),-1,62720,(char*)NULL,G__setup_memvarTDSPNofdm,G__setup_memfuncTDSPNofdm);
   G__get_linked_tagnum(&G__BaseDictLN_TRint);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPInt),sizeof(TDSPInt),-1,62464,(char*)NULL,G__setup_memvarTDSPInt,G__setup_memfuncTDSPInt);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFilterBank),sizeof(TDSPFilterBank),-1,62720,(char*)NULL,G__setup_memvarTDSPFilterBank,G__setup_memfuncTDSPFilterBank);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_eCorrFilterMethod),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__get_linked_tagnum(&G__BaseDictLN_eCorrFilterOptions);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPCorrelationFilter),sizeof(TDSPCorrelationFilter),-1,1280,(char*)NULL,G__setup_memvarTDSPCorrelationFilter,G__setup_memfuncTDSPCorrelationFilter);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPMath),sizeof(TDSPMath),-1,0,(char*)NULL,G__setup_memvarTDSPMath,G__setup_memfuncTDSPMath);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPJakes),sizeof(TDSPJakes),-1,1280,(char*)NULL,G__setup_memvarTDSPJakes,G__setup_memfuncTDSPJakes);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFunction),sizeof(TDSPFunction),-1,62720,(char*)NULL,G__setup_memvarTDSPFunction,G__setup_memfuncTDSPFunction);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPClip),sizeof(TDSPClip),-1,62720,(char*)NULL,G__setup_memvarTDSPClip,G__setup_memfuncTDSPClip);
   G__get_linked_tagnum(&G__BaseDictLN_TDSPSolver);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPBlockSolve),sizeof(TDSPBlockSolve),-1,62720,(char*)NULL,G__setup_memvarTDSPBlockSolve,G__setup_memfuncTDSPBlockSolve);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPEstimator),sizeof(TDSPEstimator),-1,62721,(char*)NULL,G__setup_memvarTDSPEstimator,G__setup_memfuncTDSPEstimator);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPLmmse),sizeof(TDSPLmmse),-1,62720,(char*)NULL,G__setup_memvarTDSPLmmse,G__setup_memfuncTDSPLmmse);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFastBpsk),sizeof(TDSPFastBpsk),-1,62720,(char*)NULL,G__setup_memvarTDSPFastBpsk,G__setup_memfuncTDSPFastBpsk);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFastQpsk),sizeof(TDSPFastQpsk),-1,62720,(char*)NULL,G__setup_memvarTDSPFastQpsk,G__setup_memfuncTDSPFastQpsk);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPModulation),sizeof(TDSPModulation),-1,62720,(char*)NULL,G__setup_memvarTDSPModulation,G__setup_memfuncTDSPModulation);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPWienerProcess),sizeof(TDSPWienerProcess),-1,62720,(char*)NULL,G__setup_memvarTDSPWienerProcess,G__setup_memfuncTDSPWienerProcess);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPMonitor),sizeof(TDSPMonitor),-1,62720,(char*)NULL,G__setup_memvarTDSPMonitor,G__setup_memfuncTDSPMonitor);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPSource),sizeof(TDSPSource),-1,62720,(char*)NULL,G__setup_memvarTDSPSource,G__setup_memfuncTDSPSource);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFilterMap),sizeof(TDSPFilterMap),-1,62720,(char*)NULL,G__setup_memvarTDSPFilterMap,G__setup_memfuncTDSPFilterMap);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TDSPFMT),sizeof(TDSPFMT),-1,62720,(char*)NULL,G__setup_memvarTDSPFMT,G__setup_memfuncTDSPFMT);
   G__tagtable_setup(G__get_linked_tagnum(&G__BaseDictLN_TMaple),sizeof(TMaple),-1,62720,(char*)NULL,G__setup_memvarTMaple,G__setup_memfuncTMaple);
}
extern "C" void G__cpp_setupBaseDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupBaseDict()");
  G__set_cpp_environmentBaseDict();
  G__cpp_setup_tagtableBaseDict();

  G__cpp_setup_inheritanceBaseDict();

  G__cpp_setup_typetableBaseDict();

  G__cpp_setup_memvarBaseDict();

  G__cpp_setup_memfuncBaseDict();
  G__cpp_setup_globalBaseDict();
  G__cpp_setup_funcBaseDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncBaseDict();
  return;
}
class G__cpp_setup_initBaseDict {
  public:
    G__cpp_setup_initBaseDict() { G__add_setup_func("BaseDict",(G__incsetup)(&G__cpp_setupBaseDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initBaseDict() { G__remove_setup_func("BaseDict"); }
};
G__cpp_setup_initBaseDict G__cpp_setup_initializerBaseDict;

