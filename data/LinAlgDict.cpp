//
// File generated by rootcint at Fri Apr 23 11:57:59 2004.
// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h"
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

#include "LinAlgDict.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;

#include "RtypesImp.h"

#include "TVectorProxy.h"

namespace ROOT {
   namespace Shadow {
   } // Of namespace ROOT::Shadow
} // Of namespace ROOT

namespace ROOT {
   void TComplex_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TComplex_IsA(const void*);
   static void *new_TComplex(void *p = 0);
   static void *newArray_TComplex(Long_t size);
   static void delete_TComplex(void *p);
   static void deleteArray_TComplex(void *p);
   static void destruct_TComplex(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TComplex*)
   {
      TComplex *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TComplex", TComplex::Class_Version(), "TComplex.h", 40,
                  typeid(TComplex), DefineBehavior(ptr, ptr),
                  &::TComplex::Dictionary, &TComplex_IsA, 1,
                  sizeof(TComplex) );
      instance.SetNew(&new_TComplex);
      instance.SetNewArray(&newArray_TComplex);
      instance.SetDelete(&delete_TComplex);
      instance.SetDeleteArray(&deleteArray_TComplex);
      instance.SetDestructor(&destruct_TComplex);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TComplex*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPVector_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPVector_IsA(const void*);
   static void *new_TDSPVector(void *p = 0);
   static void *newArray_TDSPVector(Long_t size);
   static void delete_TDSPVector(void *p);
   static void deleteArray_TDSPVector(void *p);
   static void destruct_TDSPVector(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPVector*)
   {
      TDSPVector *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPVector", TDSPVector::Class_Version(), "TDSPVector.h", 69,
                  typeid(TDSPVector), DefineBehavior(ptr, ptr),
                  &::TDSPVector::Dictionary, &TDSPVector_IsA, 1,
                  sizeof(TDSPVector) );
      instance.SetNew(&new_TDSPVector);
      instance.SetNewArray(&newArray_TDSPVector);
      instance.SetDelete(&delete_TDSPVector);
      instance.SetDeleteArray(&deleteArray_TDSPVector);
      instance.SetDestructor(&destruct_TDSPVector);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPVector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPMatrix_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPMatrix_IsA(const void*);
   static void *new_TDSPMatrix(void *p = 0);
   static void *newArray_TDSPMatrix(Long_t size);
   static void delete_TDSPMatrix(void *p);
   static void deleteArray_TDSPMatrix(void *p);
   static void destruct_TDSPMatrix(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPMatrix*)
   {
      TDSPMatrix *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPMatrix", TDSPMatrix::Class_Version(), "TDSPMatrix.h", 44,
                  typeid(TDSPMatrix), DefineBehavior(ptr, ptr),
                  &::TDSPMatrix::Dictionary, &TDSPMatrix_IsA, 0,
                  sizeof(TDSPMatrix) );
      instance.SetNew(&new_TDSPMatrix);
      instance.SetNewArray(&newArray_TDSPMatrix);
      instance.SetDelete(&delete_TDSPMatrix);
      instance.SetDeleteArray(&deleteArray_TDSPMatrix);
      instance.SetDestructor(&destruct_TDSPMatrix);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPMatrix*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPBlockOperation_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPBlockOperation_IsA(const void*);
   static void delete_TDSPBlockOperation(void *p);
   static void deleteArray_TDSPBlockOperation(void *p);
   static void destruct_TDSPBlockOperation(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPBlockOperation*)
   {
      TDSPBlockOperation *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPBlockOperation", TDSPBlockOperation::Class_Version(), "TDSPBlockOperation.h", 28,
                  typeid(TDSPBlockOperation), DefineBehavior(ptr, ptr),
                  &::TDSPBlockOperation::Dictionary, &TDSPBlockOperation_IsA, 0,
                  sizeof(TDSPBlockOperation) );
      instance.SetDelete(&delete_TDSPBlockOperation);
      instance.SetDeleteArray(&deleteArray_TDSPBlockOperation);
      instance.SetDestructor(&destruct_TDSPBlockOperation);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPBlockOperation*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPSolver_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPSolver_IsA(const void*);
   static void delete_TDSPSolver(void *p);
   static void deleteArray_TDSPSolver(void *p);
   static void destruct_TDSPSolver(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPSolver*)
   {
      TDSPSolver *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPSolver", TDSPSolver::Class_Version(), "TDSPSolver.h", 28,
                  typeid(TDSPSolver), DefineBehavior(ptr, ptr),
                  &::TDSPSolver::Dictionary, &TDSPSolver_IsA, 0,
                  sizeof(TDSPSolver) );
      instance.SetDelete(&delete_TDSPSolver);
      instance.SetDeleteArray(&deleteArray_TDSPSolver);
      instance.SetDestructor(&destruct_TDSPSolver);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPSolver*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPLinearSolver_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPLinearSolver_IsA(const void*);
   static void *new_TDSPLinearSolver(void *p = 0);
   static void *newArray_TDSPLinearSolver(Long_t size);
   static void delete_TDSPLinearSolver(void *p);
   static void deleteArray_TDSPLinearSolver(void *p);
   static void destruct_TDSPLinearSolver(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPLinearSolver*)
   {
      TDSPLinearSolver *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPLinearSolver", TDSPLinearSolver::Class_Version(), "TDSPLinearSolver.h", 40,
                  typeid(TDSPLinearSolver), DefineBehavior(ptr, ptr),
                  &::TDSPLinearSolver::Dictionary, &TDSPLinearSolver_IsA, 0,
                  sizeof(TDSPLinearSolver) );
      instance.SetNew(&new_TDSPLinearSolver);
      instance.SetNewArray(&newArray_TDSPLinearSolver);
      instance.SetDelete(&delete_TDSPLinearSolver);
      instance.SetDeleteArray(&deleteArray_TDSPLinearSolver);
      instance.SetDestructor(&destruct_TDSPLinearSolver);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPLinearSolver*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

//______________________________________________________________________________
TClass *TComplex::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TComplex::Class_Name()
{
   return "TComplex";
}

//______________________________________________________________________________
const char *TComplex::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TComplex*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TComplex::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TComplex*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TComplex::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TComplex*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TComplex::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TComplex*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPVector::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPVector::Class_Name()
{
   return "TDSPVector";
}

//______________________________________________________________________________
const char *TDSPVector::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPVector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPVector::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPVector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPVector::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPVector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPVector::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPVector*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPMatrix::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPMatrix::Class_Name()
{
   return "TDSPMatrix";
}

//______________________________________________________________________________
const char *TDSPMatrix::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPMatrix*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPMatrix::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPMatrix*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPMatrix::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPMatrix*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPMatrix::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPMatrix*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPBlockOperation::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPBlockOperation::Class_Name()
{
   return "TDSPBlockOperation";
}

//______________________________________________________________________________
const char *TDSPBlockOperation::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPBlockOperation*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPBlockOperation::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPBlockOperation*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPBlockOperation::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPBlockOperation*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPBlockOperation::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPBlockOperation*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPSolver::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPSolver::Class_Name()
{
   return "TDSPSolver";
}

//______________________________________________________________________________
const char *TDSPSolver::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPSolver*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPSolver::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPSolver*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPSolver::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPSolver*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPSolver::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPSolver*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPLinearSolver::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPLinearSolver::Class_Name()
{
   return "TDSPLinearSolver";
}

//______________________________________________________________________________
const char *TDSPLinearSolver::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPLinearSolver*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPLinearSolver::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPLinearSolver*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPLinearSolver::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPLinearSolver*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPLinearSolver::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPLinearSolver*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TDSPSolver::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPSolver.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TQQObject::Streamer(R__b);
      R__b >> fHaveSolution;
      R__b >> fNumXAlphabet;
      R__b >> fXAlphabet;
      R__b >> fMinDist;
      R__b.CheckByteCount(R__s, R__c, TDSPSolver::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPSolver::IsA(), kTRUE);
      TQQObject::Streamer(R__b);
      R__b << fHaveSolution;
      R__b << fNumXAlphabet;
      R__b << fXAlphabet;
      R__b << fMinDist;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPSolver::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPSolver.

      TClass *R__cl = TDSPSolver::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fHaveSolution", &fHaveSolution);
      R__insp.Inspect(R__cl, R__parent, "*fY", &fY);
      R__insp.Inspect(R__cl, R__parent, "*fX", &fX);
      R__insp.Inspect(R__cl, R__parent, "fNumXAlphabet", &fNumXAlphabet);
      R__insp.Inspect(R__cl, R__parent, "*fXAlphabet", &fXAlphabet);
      R__insp.Inspect(R__cl, R__parent, "fMinDist", &fMinDist);
      TQQObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPSolver_IsA(const void *obj) {
      return ((::TDSPSolver*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TDSPSolver(void *p) {
      delete ((::TDSPSolver*)p);
   }
   static void deleteArray_TDSPSolver(void *p) {
      delete [] ((::TDSPSolver*)p);
   }
   static void destruct_TDSPSolver(void *p) {
      typedef ::TDSPSolver current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPSolver

//______________________________________________________________________________
void TDSPLinearSolver::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPLinearSolver.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TDSPSolver::Streamer(R__b);
      R__b >> (Int_t&)fMethod;
      fAList.Streamer(R__b);
      R__b >> fIterations;
      R__b >> fMaxIterations;
      R__b >> fMeanIterations;
      R__b >> fStopPrecision;
      R__b >> fPrecision;
      R__b >> fMeanPrecision;
      R__b >> fAccumulation;
      R__b >> fUsingAStack;
      R__b >> fIter_Serial_HD;
      R__b >> fIter_Parallel_HD;
      Xtmp.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, TDSPLinearSolver::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPLinearSolver::IsA(), kTRUE);
      TDSPSolver::Streamer(R__b);
      R__b << (Int_t)fMethod;
      fAList.Streamer(R__b);
      R__b << fIterations;
      R__b << fMaxIterations;
      R__b << fMeanIterations;
      R__b << fStopPrecision;
      R__b << fPrecision;
      R__b << fMeanPrecision;
      R__b << fAccumulation;
      R__b << fUsingAStack;
      R__b << fIter_Serial_HD;
      R__b << fIter_Parallel_HD;
      Xtmp.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPLinearSolver::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPLinearSolver.

      TClass *R__cl = TDSPLinearSolver::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fMethod", &fMethod);
      R__insp.Inspect(R__cl, R__parent, "fAList", &fAList);
      fAList.ShowMembers(R__insp, strcat(R__parent,"fAList.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fIterations", &fIterations);
      R__insp.Inspect(R__cl, R__parent, "fMaxIterations", &fMaxIterations);
      R__insp.Inspect(R__cl, R__parent, "fMeanIterations", &fMeanIterations);
      R__insp.Inspect(R__cl, R__parent, "fStopPrecision", &fStopPrecision);
      R__insp.Inspect(R__cl, R__parent, "fPrecision", &fPrecision);
      R__insp.Inspect(R__cl, R__parent, "fMeanPrecision", &fMeanPrecision);
      R__insp.Inspect(R__cl, R__parent, "fAccumulation", &fAccumulation);
      R__insp.Inspect(R__cl, R__parent, "fUsingAStack", &fUsingAStack);
      R__insp.Inspect(R__cl, R__parent, "*fB", &fB);
      R__insp.Inspect(R__cl, R__parent, "*fA", &fA);
      R__insp.Inspect(R__cl, R__parent, "*fGuessX", &fGuessX);
      R__insp.Inspect(R__cl, R__parent, "fIter_Serial_HD", &fIter_Serial_HD);
      R__insp.Inspect(R__cl, R__parent, "fIter_Parallel_HD", &fIter_Parallel_HD);
      R__insp.Inspect(R__cl, R__parent, "Xtmp", &Xtmp);
      Xtmp.ShowMembers(R__insp, strcat(R__parent,"Xtmp.")); R__parent[R__ncp] = 0;
      TDSPSolver::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPLinearSolver_IsA(const void *obj) {
      return ((::TDSPLinearSolver*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPLinearSolver(void *p) {
      return  p ? new(p) ::TDSPLinearSolver : new ::TDSPLinearSolver;
   }
   static void *newArray_TDSPLinearSolver(Long_t size) {
      return new ::TDSPLinearSolver[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPLinearSolver(void *p) {
      delete ((::TDSPLinearSolver*)p);
   }
   static void deleteArray_TDSPLinearSolver(void *p) {
      delete [] ((::TDSPLinearSolver*)p);
   }
   static void destruct_TDSPLinearSolver(void *p) {
      typedef ::TDSPLinearSolver current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPLinearSolver

//______________________________________________________________________________
void TComplex::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TComplex.

      TClass *R__cl = TComplex::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRe", &fRe);
      R__insp.Inspect(R__cl, R__parent, "fIm", &fIm);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TComplex_IsA(const void *obj) {
      return ((::TComplex*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TComplex(void *p) {
      return  p ? ::new((ROOT::TOperatorNewHelper*)p) ::TComplex : new ::TComplex;
   }
   static void *newArray_TComplex(Long_t size) {
      return new ::TComplex[size];
   }
   // Wrapper around operator delete
   static void delete_TComplex(void *p) {
      delete ((::TComplex*)p);
   }
   static void deleteArray_TComplex(void *p) {
      delete [] ((::TComplex*)p);
   }
   static void destruct_TComplex(void *p) {
      typedef ::TComplex current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TComplex

//______________________________________________________________________________
void TDSPVector::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPVector.

      TClass *R__cl = TDSPVector::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fMinAlloc", &fMinAlloc);
      R__insp.Inspect(R__cl, R__parent, "fAllocHighScale", &fAllocHighScale);
      R__insp.Inspect(R__cl, R__parent, "fAllocLowScale", &fAllocLowScale);
      R__insp.Inspect(R__cl, R__parent, "*fXTitle", &fXTitle);
      R__insp.Inspect(R__cl, R__parent, "*fYTitle", &fYTitle);
      R__insp.Inspect(R__cl, R__parent, "*fVec", &fVec);
      R__insp.Inspect(R__cl, R__parent, "Num", &Num);
      R__insp.Inspect(R__cl, R__parent, "fPos", &fPos);
      R__insp.Inspect(R__cl, R__parent, "*fAllocedVec", &fAllocedVec);
      R__insp.Inspect(R__cl, R__parent, "fAllocedNum", &fAllocedNum);
      R__insp.Inspect(R__cl, R__parent, "fSamplingRate", &fSamplingRate);
      R__insp.Inspect(R__cl, R__parent, "fZero", &fZero);
      TNamed::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPVector_IsA(const void *obj) {
      return ((::TDSPVector*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPVector(void *p) {
      return  p ? new(p) ::TDSPVector : new ::TDSPVector;
   }
   static void *newArray_TDSPVector(Long_t size) {
      return new ::TDSPVector[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPVector(void *p) {
      delete ((::TDSPVector*)p);
   }
   static void deleteArray_TDSPVector(void *p) {
      delete [] ((::TDSPVector*)p);
   }
   static void destruct_TDSPVector(void *p) {
      typedef ::TDSPVector current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPVector

//______________________________________________________________________________
void TDSPMatrix::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPMatrix.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TDSPVector::Streamer(R__b);
      R__b >> fRows;
      R__b >> fCols;
      R__b.CheckByteCount(R__s, R__c, TDSPMatrix::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPMatrix::IsA(), kTRUE);
      TDSPVector::Streamer(R__b);
      R__b << fRows;
      R__b << fCols;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPMatrix::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPMatrix.

      TClass *R__cl = TDSPMatrix::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fZTitle", &fZTitle);
      R__insp.Inspect(R__cl, R__parent, "fRows", &fRows);
      R__insp.Inspect(R__cl, R__parent, "fCols", &fCols);
      TDSPVector::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPMatrix_IsA(const void *obj) {
      return ((::TDSPMatrix*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPMatrix(void *p) {
      return  p ? new(p) ::TDSPMatrix : new ::TDSPMatrix;
   }
   static void *newArray_TDSPMatrix(Long_t size) {
      return new ::TDSPMatrix[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPMatrix(void *p) {
      delete ((::TDSPMatrix*)p);
   }
   static void deleteArray_TDSPMatrix(void *p) {
      delete [] ((::TDSPMatrix*)p);
   }
   static void destruct_TDSPMatrix(void *p) {
      typedef ::TDSPMatrix current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPMatrix

//______________________________________________________________________________
void TDSPBlockOperation::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPBlockOperation.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b.CheckByteCount(R__s, R__c, TDSPBlockOperation::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPBlockOperation::IsA(), kTRUE);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPBlockOperation::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPBlockOperation.

      TClass *R__cl = TDSPBlockOperation::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPBlockOperation_IsA(const void *obj) {
      return ((::TDSPBlockOperation*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TDSPBlockOperation(void *p) {
      delete ((::TDSPBlockOperation*)p);
   }
   static void deleteArray_TDSPBlockOperation(void *p) {
      delete [] ((::TDSPBlockOperation*)p);
   }
   static void destruct_TDSPBlockOperation(void *p) {
      typedef ::TDSPBlockOperation current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPBlockOperation

/********************************************************
* LinAlgDict.cpp
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtableLinAlgDict();

extern "C" void G__set_cpp_environmentLinAlgDict() {
  G__add_compiledheader("TROOT.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("TComplex.h");
  G__add_compiledheader("TDSPVector.h");
  G__add_compiledheader("TDSPMatrix.h");
  G__add_compiledheader("TDSPBlockOperation.h");
  G__add_compiledheader("TDSPSolver.h");
  G__add_compiledheader("TDSPLinearSolver.h");
  G__cpp_reset_tagtableLinAlgDict();
}
class G__LinAlgDictdOcpp_tag {};

void* operator new(size_t size,G__LinAlgDictdOcpp_tag* p) {
  if(p && G__PVOID!=G__getgvp()) return((void*)p);
#ifndef G__ROOT
  return(malloc(size));
#else
  return(::operator new(size));
#endif
}

/* dummy, for exception */
#ifdef G__EH_DUMMY_DELETE
void operator delete(void *p,G__LinAlgDictdOcpp_tag* x) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}
#endif

static void G__operator_delete(void *p) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}

void G__DELDMY_LinAlgDictdOcpp() { G__operator_delete(0); }

extern "C" int G__cpp_dllrevLinAlgDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TComplex */
static int G__LinAlgDict_130_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TComplex *p=NULL;
   if(G__getaryconstruct()) p=new TComplex[G__getaryconstruct()];
   else p=::new((G__LinAlgDictdOcpp_tag*)G__getgvp()) TComplex;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__LinAlgDictLN_TComplex);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TComplex *p=NULL;
   switch(libp->paran) {
   case 2:
      p = ::new((G__LinAlgDictdOcpp_tag*)G__getgvp()) TComplex((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1]));
      break;
   case 1:
      p = ::new((G__LinAlgDictdOcpp_tag*)G__getgvp()) TComplex((Double_t)G__double(libp->para[0]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__LinAlgDictLN_TComplex);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TComplex *p=NULL;
      p=::new((G__LinAlgDictdOcpp_tag*)G__getgvp()) TComplex(*(TComplex*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__LinAlgDictLN_TComplex);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TComplex*)(G__getstructoffset()))->Re());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TComplex*)(G__getstructoffset()))->Im());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TComplex*)(G__getstructoffset()))->Phase());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TComplex*)(G__getstructoffset()))->Set((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TComplex*)(G__getstructoffset()))->SetReal((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TComplex*)(G__getstructoffset()))->SetIm((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TComplex*)(G__getstructoffset()))->C();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TComplex*)(G__getstructoffset()))->PureReal();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TComplex*)(G__getstructoffset()))->PureIm();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TComplex*)(G__getstructoffset()))->SetNeg();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TComplex*)(G__getstructoffset()))->Dump();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TComplex*)(G__getstructoffset()))->operator Bool_t());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TComplex*)(G__getstructoffset()))->operator Double_t());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TComplex*)(G__getstructoffset()))->operator Int_t());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TComplex*)(G__getstructoffset()))->operator!());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TComplex*)(G__getstructoffset()))->operator&&(*(TComplex*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TComplex *pobj,xobj=((TComplex*)(G__getstructoffset()))->operator+(*(TComplex*)libp->para[0].ref);
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TComplex *pobj,xobj=((TComplex*)(G__getstructoffset()))->operator+((const Double_t)G__double(libp->para[0]));
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TComplex *pobj,xobj=((TComplex*)(G__getstructoffset()))->operator+((const Int_t)G__int(libp->para[0]));
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TComplex *pobj,xobj=((TComplex*)(G__getstructoffset()))->operator-();
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TComplex *pobj,xobj=((TComplex*)(G__getstructoffset()))->operator-(*(TComplex*)libp->para[0].ref);
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TComplex *pobj,xobj=((TComplex*)(G__getstructoffset()))->operator-((const Double_t)G__double(libp->para[0]));
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TComplex *pobj,xobj=((TComplex*)(G__getstructoffset()))->operator-((const Int_t)G__int(libp->para[0]));
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TComplex& obj=((TComplex*)(G__getstructoffset()))->operator=(*(TComplex*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TComplex& obj=((TComplex*)(G__getstructoffset()))->operator=((const Double_t)G__double(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TComplex& obj=((TComplex*)(G__getstructoffset()))->operator+=(*(Double_t*)G__Doubleref(&libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TComplex& obj=((TComplex*)(G__getstructoffset()))->operator+=(*(TComplex*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TComplex& obj=((TComplex*)(G__getstructoffset()))->operator-=(*(Double_t*)G__Doubleref(&libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TComplex& obj=((TComplex*)(G__getstructoffset()))->operator-=(*(TComplex*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TComplex& obj=((TComplex*)(G__getstructoffset()))->operator/=(*(Double_t*)G__Doubleref(&libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TComplex& obj=((TComplex*)(G__getstructoffset()))->operator/=(*(TComplex*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TComplex& obj=((TComplex*)(G__getstructoffset()))->operator*=(*(Double_t*)G__Doubleref(&libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TComplex& obj=((TComplex*)(G__getstructoffset()))->operator*=(*(TComplex*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TComplex*)(G__getstructoffset()))->FromRhoPhi(*(TCplxRhoPhi*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TComplex*)(G__getstructoffset()))->IsComplex((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TComplex*)(G__getstructoffset()))->BetterConj(*(TComplex*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TComplex*)(G__getstructoffset()))->CosFromSin();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TComplex*)(G__getstructoffset()))->RPhi(*(Double_t*)G__Doubleref(&libp->para[0]),*(Double_t*)G__Doubleref(&libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TComplex *pobj,xobj=((TComplex*)(G__getstructoffset()))->operator*((const Double_t)G__double(libp->para[0]));
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TComplex *pobj,xobj=((TComplex*)(G__getstructoffset()))->operator*((const Int_t)G__int(libp->para[0]));
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TComplex *pobj,xobj=((TComplex*)(G__getstructoffset()))->operator/(*(TComplex*)libp->para[0].ref);
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TComplex *pobj,xobj=((TComplex*)(G__getstructoffset()))->operator/((const Double_t)G__double(libp->para[0]));
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TComplex *pobj,xobj=((TComplex*)(G__getstructoffset()))->operator/((const Int_t)G__int(libp->para[0]));
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TComplex*)(G__getstructoffset()))->Print();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TComplex*)(G__getstructoffset()))->Test((Double_t)G__double(libp->para[0]),*(TComplex*)libp->para[1].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TComplex::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TComplex::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TComplex::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TComplex::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TComplex*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TComplex*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TComplex*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TComplex*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_6_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TComplex::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_7_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TComplex::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_8_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TComplex::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_130_9_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TComplex::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TComplex G__TTComplex;
static int G__LinAlgDict_130_0_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TComplex *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TComplex *)((G__getstructoffset())+sizeof(TComplex)*i))->~G__TTComplex();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TComplex *)(G__getstructoffset()))->~G__TTComplex();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPVector */
static int G__LinAlgDict_197_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letint(result7,103,(long)TDSPVector::LoadATLAS((char*)G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7,103,(long)TDSPVector::LoadATLAS());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPVector::EnableATLAS();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPVector::DisableATLAS();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)TDSPVector::UsingATLAS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDSPVector*)(G__getstructoffset()))->Lo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDSPVector*)(G__getstructoffset()))->Hi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Swap((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TComplex& obj=((TDSPVector*)(G__getstructoffset()))->Element((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->GetVec());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->MoveVec((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDSPVector*)(G__getstructoffset()))->GetLen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPVector*)(G__getstructoffset()))->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Free();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TDSPVector*)(G__getstructoffset()))->GetZero());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->SetZero((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->SetVec((TComplex*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->SetVec((TComplex*)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->ResetSignal();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->SetLen((Int_t)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->SetLen((Int_t)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->SetMinLen((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Set(*(TComplex*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Set((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Set((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Set((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Set((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->SetReal((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->SetImag((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Zeros();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Ones();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Delta((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Delta();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Step(*(TComplex*)libp->para[0].ref,*(TComplex*)libp->para[1].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Step(*(TComplex*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Step((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Step((Double_t)G__double(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Step();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->ConjugateMe();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->AdjointMe();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->Adjoint((TDSPVector*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->Adjoint());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Append((TDSPVector*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPVector*)(G__getstructoffset()))->Dist((TDSPVector*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPVector*)(G__getstructoffset()))->Dist(*(TDSPVector*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPVector*)(G__getstructoffset()))->Dist2((TDSPVector*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPVector*)(G__getstructoffset()))->Dist2(*(TDSPVector*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      {
        TComplex *pobj,xobj=((TDSPVector*)(G__getstructoffset()))->Dot((TDSPVector*)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1]));
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
        TComplex *pobj,xobj=((TDSPVector*)(G__getstructoffset()))->Dot((TDSPVector*)G__int(libp->para[0]));
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      {
        TComplex *pobj,xobj=((TDSPVector*)(G__getstructoffset()))->Dot(*(TDSPVector*)libp->para[0].ref,(Bool_t)G__int(libp->para[1]));
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
        TComplex *pobj,xobj=((TDSPVector*)(G__getstructoffset()))->Dot(*(TDSPVector*)libp->para[0].ref);
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPVector*)(G__getstructoffset()))->Dot2((TDSPVector*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPVector*)(G__getstructoffset()))->Dot2(*(TDSPVector*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->RandN((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->RandN((Double_t)G__double(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->RandN();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->RandNreal((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->RandNreal((Double_t)G__double(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->RandNreal();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->RandNimag((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->RandNimag((Double_t)G__double(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->RandNimag();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->RandNC((Double_t)G__double(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->RandNC();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->RandNC(*(TComplex*)libp->para[0].ref,(Double_t)G__double(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->RandNC(*(TComplex*)libp->para[0].ref);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->RandNC((TComplex*)G__int(libp->para[0]),(Double_t)G__double(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->RandNC((TComplex*)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->RandNC((TComplex*)G__int(libp->para[0]),(TComplex*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->RandNC((TDSPVector*)G__int(libp->para[0]),(Double_t)G__double(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->RandNC((TDSPVector*)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->RandNC(*(TDSPVector*)libp->para[0].ref,(Double_t)G__double(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->RandNC(*(TDSPVector*)libp->para[0].ref);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->RandNC((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->RandPhase();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->MultRandPhase((TDSPVector*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->MultRandPhase();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->RandNPhase((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->RandNPhase((Double_t)G__double(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->RandNPhase();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_6_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->MultRandNPhase((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->MultRandNPhase((Double_t)G__double(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->MultRandNPhase();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_7_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->MultRandNPhase((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_8_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Reverse();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_9_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->RandRayleigh((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->RandRayleigh((Double_t)G__double(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->RandRayleigh();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_0_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->ModulateMe(*((TComplex*)G__int(libp->para[0])),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3]));
      break;
   case 3:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->ModulateMe(*((TComplex*)G__int(libp->para[0])),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->ModulateMe(*((TComplex*)G__int(libp->para[0])),(Double_t)G__double(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->ModulateMe(*((TComplex*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_1_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->Modulate(*((TComplex*)G__int(libp->para[0])),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(TDSPVector*)G__int(libp->para[4])));
      break;
   case 4:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->Modulate(*((TComplex*)G__int(libp->para[0])),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->Modulate(*((TComplex*)G__int(libp->para[0])),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->Modulate(*((TComplex*)G__int(libp->para[0])),(Double_t)G__double(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->Modulate(*((TComplex*)G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_2_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->DownSampling((UInt_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->DownSampling((UInt_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->DownSampling((UInt_t)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_3_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->UpSampling((UInt_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]),(UInt_t)G__int(libp->para[3])
,(UInt_t)G__int(libp->para[4])));
      break;
   case 4:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->UpSampling((UInt_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]),(UInt_t)G__int(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->UpSampling((UInt_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->UpSampling((UInt_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->UpSampling((UInt_t)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_4_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->Alias((TDSPVector*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->Alias((TDSPVector*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->Alias());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_5_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      {
        TComplex *pobj,xobj=((TDSPVector*)(G__getstructoffset()))->Sum((TDSPVector*)G__int(libp->para[0]));
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
        TComplex *pobj,xobj=((TDSPVector*)(G__getstructoffset()))->Sum();
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_6_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letdouble(result7,100,(double)((TDSPVector*)(G__getstructoffset()))->Sum2((TDSPVector*)G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7,100,(double)((TDSPVector*)(G__getstructoffset()))->Sum2());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_7_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TComplex *pobj,xobj=((TDSPVector*)(G__getstructoffset()))->Prod();
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_8_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPVector*)(G__getstructoffset()))->ProdReal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_9_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPVector*)(G__getstructoffset()))->ProdImag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_0_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letdouble(result7,100,(double)((TDSPVector*)(G__getstructoffset()))->Norm((TDSPVector*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7,100,(double)((TDSPVector*)(G__getstructoffset()))->Norm((TDSPVector*)G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7,100,(double)((TDSPVector*)(G__getstructoffset()))->Norm());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_1_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letdouble(result7,100,(double)((TDSPVector*)(G__getstructoffset()))->Norm2((TDSPVector*)G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7,100,(double)((TDSPVector*)(G__getstructoffset()))->Norm2());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_2_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPVector*)(G__getstructoffset()))->Energy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_3_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPVector*)(G__getstructoffset()))->Power());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_4_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      {
        TComplex *pobj,xobj=((TDSPVector*)(G__getstructoffset()))->Mean((TDSPVector*)G__int(libp->para[0]));
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
        TComplex *pobj,xobj=((TDSPVector*)(G__getstructoffset()))->Mean();
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_5_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letdouble(result7,100,(double)((TDSPVector*)(G__getstructoffset()))->Mean2((TDSPVector*)G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7,100,(double)((TDSPVector*)(G__getstructoffset()))->Mean2());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_6_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letdouble(result7,100,(double)((TDSPVector*)(G__getstructoffset()))->Variance((TDSPVector*)G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7,100,(double)((TDSPVector*)(G__getstructoffset()))->Variance());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_7_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letdouble(result7,100,(double)((TDSPVector*)(G__getstructoffset()))->Moment1((TDSPVector*)G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7,100,(double)((TDSPVector*)(G__getstructoffset()))->Moment1());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_8_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letdouble(result7,100,(double)((TDSPVector*)(G__getstructoffset()))->Moment2((TDSPVector*)G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7,100,(double)((TDSPVector*)(G__getstructoffset()))->Moment2());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_9_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letdouble(result7,100,(double)((TDSPVector*)(G__getstructoffset()))->CMoment2((TDSPVector*)G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7,100,(double)((TDSPVector*)(G__getstructoffset()))->CMoment2());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_0_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPVector*)(G__getstructoffset()))->Max());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_1_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPVector*)(G__getstructoffset()))->Min());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_2_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPVector*)(G__getstructoffset()))->MaxReal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_3_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPVector*)(G__getstructoffset()))->MinReal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_4_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPVector*)(G__getstructoffset()))->MaxImag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_5_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPVector*)(G__getstructoffset()))->MinImag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_6_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPVector*)(G__getstructoffset()))->MaxAbs2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_7_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPVector*)(G__getstructoffset()))->MinAbs2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_8_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPVector*)(G__getstructoffset()))->MaxAbs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_9_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPVector*)(G__getstructoffset()))->MinAbs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_0_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->GetPhase((TDSPVector*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->GetPhase());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_1_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Phase();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_2_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Sqr();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_3_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Abs2();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_4_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Abs();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_5_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Sqrt();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_6_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->SqrtReal();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_7_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->SqrtImag();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_8_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Exp();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_9_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Cos();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_0_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Sin();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_1_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Log();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_2_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Log10();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_3_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Log2();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_4_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Normalize((Double_t)G__double(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Normalize();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_5_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->Dup());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_6_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->Copy((TDSPVector*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_7_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Apply((TComplex (*)(TComplex&))G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_8_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->SetSamplingRate((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_9_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPVector*)(G__getstructoffset()))->GetSamplingRate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_0_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->SamplingRate((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_1_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Configure((TDSPVector*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_2_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->SetXTitle((char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_3_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->SetYTitle((char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_4_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TDSPVector*)(G__getstructoffset()))->OnCodeInc((TDSPVector*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_5_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TDSPVector*)(G__getstructoffset()))->OnCodeInc((TComplex*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_6_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TDSPVector*)(G__getstructoffset()))->OnCodeSet((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_7_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TDSPVector*)(G__getstructoffset()))->OnCodeSet((Int_t)G__int(libp->para[0]),(TComplex*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_8_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TDSPVector*)(G__getstructoffset()))->OnCodeGet((Int_t*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_9_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TDSPVector*)(G__getstructoffset()))->OnCodeGet((Int_t*)G__int(libp->para[0]),(TComplex*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_0_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->DivBy((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->DivBy((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_1_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->MultBy((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->MultBy((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_2_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->AddBy((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->AddBy((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_3_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->SubBy((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->SubBy((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_4_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->DivBy(*((TComplex*)G__int(libp->para[0])),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->DivBy(*((TComplex*)G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_5_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->MultBy(*((TComplex*)G__int(libp->para[0])),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->MultBy(*((TComplex*)G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_6_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->AddBy(*((TComplex*)G__int(libp->para[0])),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->AddBy(*((TComplex*)G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_7_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->SubBy(*((TComplex*)G__int(libp->para[0])),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->SubBy(*((TComplex*)G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_8_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->Conv((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->Conv((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->Conv((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->Conv((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_9_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->DumpParams((ostream*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->DumpParams();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_0_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->FFTShiftMe();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_1_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->IFFTShiftMe();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_2_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->XCorr((Int_t)G__int(libp->para[0]),(eXCorr_Options)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->XCorr((Int_t)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->XCorr());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_3_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->XCorr((TDSPVector*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(eXCorr_Options)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->XCorr((TDSPVector*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->XCorr((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_4_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->XCorr((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(eXCorr_Options)G__int(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->XCorr((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->XCorr((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_5_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->Graph((Option_t*)G__int(libp->para[0]),(TGraph*)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->Graph((Option_t*)G__int(libp->para[0]),(TGraph*)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->Graph((Option_t*)G__int(libp->para[0]),(TGraph*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->Graph((Option_t*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->Graph());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_6_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Draw((Option_t*)G__int(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Draw((Option_t*)G__int(libp->para[0]),(Double_t)G__double(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Draw((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Draw();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_7_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->FillAbs((TH1*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->FillAbs());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_8_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->FillAbs2((TH1*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->FillAbs2());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_9_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->FillPhase((TH1*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->FillPhase());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_0_14(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->FillReal((TH1*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->FillReal());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_1_14(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->FillImag((TH1*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->FillImag());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_2_14(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->Fill((TH2*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TDSPVector*)(G__getstructoffset()))->Fill());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_3_14(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_4_14(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Input();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_5_14(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TDSPVector& obj=((TDSPVector*)(G__getstructoffset()))->operator=(*(TmxArray*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_6_14(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TDSPVector& obj=((TDSPVector*)(G__getstructoffset()))->operator=((const Double_t)G__double(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_7_14(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TDSPVector& obj=((TDSPVector*)(G__getstructoffset()))->operator=(*(TDSPVector*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_8_14(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TDSPVector& obj=((TDSPVector*)(G__getstructoffset()))->operator=(*(TComplex*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_9_14(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TDSPVector& obj=((TDSPVector*)(G__getstructoffset()))->operator&=(*(Double_t*)G__Doubleref(&libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_0_15(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TDSPVector& obj=((TDSPVector*)(G__getstructoffset()))->operator/=(*(TComplex*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_1_15(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TDSPVector& obj=((TDSPVector*)(G__getstructoffset()))->operator/=(*(Double_t*)G__Doubleref(&libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_2_15(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TDSPVector& obj=((TDSPVector*)(G__getstructoffset()))->operator/=(*(Int_t*)G__Intref(&libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_3_15(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TDSPVector& obj=((TDSPVector*)(G__getstructoffset()))->operator*=(*(TComplex*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_4_15(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TDSPVector& obj=((TDSPVector*)(G__getstructoffset()))->operator*=(*(Double_t*)G__Doubleref(&libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_5_15(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TDSPVector& obj=((TDSPVector*)(G__getstructoffset()))->operator*=(*(Int_t*)G__Intref(&libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_6_15(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TDSPVector& obj=((TDSPVector*)(G__getstructoffset()))->operator+=(*(TComplex*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_7_15(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TDSPVector& obj=((TDSPVector*)(G__getstructoffset()))->operator+=(*(Double_t*)G__Doubleref(&libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_8_15(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TDSPVector& obj=((TDSPVector*)(G__getstructoffset()))->operator+=(*(Int_t*)G__Intref(&libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_9_15(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TDSPVector& obj=((TDSPVector*)(G__getstructoffset()))->operator-=(*(TComplex*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_0_16(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TDSPVector& obj=((TDSPVector*)(G__getstructoffset()))->operator-=(*(Double_t*)G__Doubleref(&libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_1_16(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TDSPVector& obj=((TDSPVector*)(G__getstructoffset()))->operator-=(*(Int_t*)G__Intref(&libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_2_16(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TDSPVector& obj=((TDSPVector*)(G__getstructoffset()))->operator+=(*(TDSPVector*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_3_16(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TDSPVector& obj=((TDSPVector*)(G__getstructoffset()))->operator-=(*(TDSPVector*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_4_16(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TDSPVector& obj=((TDSPVector*)(G__getstructoffset()))->operator*=(*(TDSPVector*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_5_16(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TComplex& obj=((TDSPVector*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_6_16(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TComplex& obj=((TDSPVector*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_7_16(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPVector::Load((TFile*)G__int(libp->para[0]),(char*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_8_16(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPVector::Load((char*)G__int(libp->para[0]),(char*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_9_16(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Save((TFile*)G__int(libp->para[0]),(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_0_17(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Save((char*)G__int(libp->para[0]),(char*)G__int(libp->para[1])
,(char*)G__int(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Save((char*)G__int(libp->para[0]),(char*)G__int(libp->para[1]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_1_17(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPVector *p=NULL;
   switch(libp->paran) {
   case 1:
      p = new TDSPVector((Int_t)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TDSPVector[G__getaryconstruct()];
   else                    p=new TDSPVector;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_3_17(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPVector::ValuesPerLine((UInt_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_4_17(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPVector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_5_17(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPVector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_6_17(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPVector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_7_17(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPVector::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_8_17(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPVector*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_9_17(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_0_18(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_1_18(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPVector*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_2_18(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPVector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_3_18(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPVector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_4_18(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPVector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_197_5_18(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPVector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__LinAlgDict_197_6_18(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPVector *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPVector(*(TDSPVector*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPVector G__TTDSPVector;
static int G__LinAlgDict_197_7_18(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPVector *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPVector *)((G__getstructoffset())+sizeof(TDSPVector)*i);
   else  delete (TDSPVector *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPMatrix */
static int G__LinAlgDict_199_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPMatrix *p=NULL;
   if(G__getaryconstruct()) p=new TDSPMatrix[G__getaryconstruct()];
   else                    p=new TDSPMatrix;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPMatrix *p=NULL;
      p = new TDSPMatrix((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TComplex& obj=((TDSPMatrix*)(G__getstructoffset()))->Swap((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->SetSize((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const TDSPMatrix*)(G__getstructoffset()))->GetRows());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const TDSPMatrix*)(G__getstructoffset()))->GetCols());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->SetRows((UInt_t)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->SetRows((UInt_t)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->SetCols((UInt_t)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->SetCols((UInt_t)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->SetLen((Int_t)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->SetLen((Int_t)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDSPMatrix*)(G__getstructoffset()))->Clo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDSPMatrix*)(G__getstructoffset()))->Chi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDSPMatrix*)(G__getstructoffset()))->Rlo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDSPMatrix*)(G__getstructoffset()))->Rhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->Dup());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->Copy((TDSPMatrix*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->Apply((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(eMatrixApplyMode)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->Apply((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->Apply((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->RightApply((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->RightApply((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->RightApply((TDSPMatrix*)G__int(libp->para[0]),(TDSPMatrix*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->RightApply((TDSPMatrix*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->LeftApply((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->LeftApply((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->LeftApply((TDSPMatrix*)G__int(libp->para[0]),(TDSPMatrix*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->LeftApply((TDSPMatrix*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->AdjointRightApply((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->AdjointRightApply((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->AdjointRightApply((TDSPMatrix*)G__int(libp->para[0]),(TDSPMatrix*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->AdjointRightApply((TDSPMatrix*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->AdjointLeftApply((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->AdjointLeftApply((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->AdjointLeftApply((TDSPMatrix*)G__int(libp->para[0]),(TDSPMatrix*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->AdjointLeftApply((TDSPMatrix*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->TransposedRightApply((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->TransposedRightApply((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->TransposedLeftApply((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->TransposedLeftApply((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->Transform((TDSPMatrix*)G__int(libp->para[0]),(TDSPMatrix*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->Transform((TDSPMatrix*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->AdjointTransform((TDSPMatrix*)G__int(libp->para[0]),(TDSPMatrix*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->AdjointTransform((TDSPMatrix*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->Transposed((TDSPMatrix*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->Transposed());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->TransposeMe();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->Adjoint((TDSPMatrix*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->Adjoint());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TComplex *pobj,xobj=((TDSPMatrix*)(G__getstructoffset()))->Trace();
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPMatrix*)(G__getstructoffset()))->Trace2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDSPMatrix*)(G__getstructoffset()))->DiagZero());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDSPMatrix*)(G__getstructoffset()))->DiagZeros());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDSPMatrix*)(G__getstructoffset()))->IsDiag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TDSPMatrix*)(G__getstructoffset()))->IsSquare());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDSPMatrix*)(G__getstructoffset()))->IsHermitian());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->ReversedColumns((TDSPMatrix*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->ReversedColumns());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->ReversedRows((TDSPMatrix*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->ReversedRows());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->ReverseColumns();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->ReverseRows();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->GetDiag((TDSPVector*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->GetDiag());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->SetDiag((TDSPVector*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->SetDiag(*((TComplex*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->SetNonDiag(*((TComplex*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->AddDiag(*((TComplex*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->AddDiag((TDSPVector*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->MultDiag(*((TComplex*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->MultDiag((TDSPVector*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TDSPMatrix*)(G__getstructoffset()))->Redundancy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->SubMatrix((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(TDSPMatrix*)G__int(libp->para[4])));
      break;
   case 4:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->SubMatrix((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->TransposedSubMatrix((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(TDSPMatrix*)G__int(libp->para[4])));
      break;
   case 4:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->TransposedSubMatrix((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->MoveVec((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->GetColumn((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->GetColumn((Int_t)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->GetColumn());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_6_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->GetRow((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->GetRow((Int_t)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->GetRow());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_7_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->SetColumn((UInt_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(UInt_t)G__int(libp->para[2]),(UInt_t)G__int(libp->para[3]));
      break;
   case 3:
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->SetColumn((UInt_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(UInt_t)G__int(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->SetColumn((UInt_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_8_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->SetRow((UInt_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(UInt_t)G__int(libp->para[2]),(UInt_t)G__int(libp->para[3]));
      break;
   case 3:
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->SetRow((UInt_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(UInt_t)G__int(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->SetRow((UInt_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_9_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->RowConvolute((TComplex*)G__int(libp->para[0]),(TComplex*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Bool_t)G__int(libp->para[3]));
      break;
   case 3:
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->RowConvolute((TComplex*)G__int(libp->para[0]),(TComplex*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->RowConvolute((TComplex*)G__int(libp->para[0]),(TComplex*)G__int(libp->para[1]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_0_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->RowConvolute((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(Bool_t)G__int(libp->para[2]),(Bool_t)G__int(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->RowConvolute((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(Bool_t)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->RowConvolute((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->RowConvolute((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_1_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 6:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->Draw((Option_t*)G__int(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(TH2*)G__int(libp->para[5])));
      break;
   case 5:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->Draw((Option_t*)G__int(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4])));
      break;
   case 4:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->Draw((Option_t*)G__int(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->Draw((Option_t*)G__int(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->Draw((Option_t*)G__int(libp->para[0]),(Double_t)G__double(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->Draw((Option_t*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->Draw());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_2_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->SetZTitle((char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_3_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->FFTShiftMe((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_4_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TDSPMatrix& obj=((TDSPMatrix*)(G__getstructoffset()))->operator=(*(TmxArray*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_5_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TDSPMatrix& obj=((TDSPMatrix*)(G__getstructoffset()))->operator=(*(TDSPMatrix*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_6_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->Print();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_7_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->Input();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_8_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->Unit(*((TComplex*)G__int(libp->para[0])));
      break;
   case 0:
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->Unit();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_9_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->Delta(*((TComplex*)G__int(libp->para[0])));
      break;
   case 0:
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->Delta();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_0_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->Fourier();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_1_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->Hilbert();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_2_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TComplex& obj=((TDSPMatrix*)(G__getstructoffset()))->Element((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_3_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TComplex& obj=((TDSPMatrix*)(G__getstructoffset()))->operator()((UInt_t)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_4_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->LUDecompose(*(TArrayI*)libp->para[0].ref,*(Int_t*)G__Intref(&libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_5_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->LUBacksubst(*(TArrayI*)libp->para[0].ref,*(TDSPVector*)libp->para[1].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_6_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->LUBacksubst(*(TArrayI*)libp->para[0].ref,*(TDSPMatrix*)libp->para[1].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_7_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->LUSolveLinear(*(TDSPVector*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_8_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->LUSolveLinear(*(TDSPMatrix*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_9_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->Inverse((TDSPMatrix*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->Inverse());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_0_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TComplex *pobj,xobj=((TDSPMatrix*)(G__getstructoffset()))->Det();
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_1_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->PseudoInverse((TDSPMatrix*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->PseudoInverse());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_2_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->SVD((TDSPVector*)G__int(libp->para[0]),(TDSPMatrix*)G__int(libp->para[1])
,(TDSPMatrix*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->SVD((TDSPVector*)G__int(libp->para[0]),(TDSPMatrix*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->SVD((TDSPVector*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TDSPMatrix*)(G__getstructoffset()))->SVD());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_3_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPMatrix::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_4_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPMatrix::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_5_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPMatrix::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_6_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPMatrix::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_7_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPMatrix*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_8_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_9_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_0_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPMatrix*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_1_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPMatrix::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_2_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPMatrix::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_3_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPMatrix::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_199_4_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPMatrix::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__LinAlgDict_199_5_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPMatrix *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPMatrix(*(TDSPMatrix*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPMatrix G__TTDSPMatrix;
static int G__LinAlgDict_199_6_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPMatrix *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPMatrix *)((G__getstructoffset())+sizeof(TDSPMatrix)*i);
   else  delete (TDSPMatrix *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPBlockOperation */
static int G__LinAlgDict_200_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TDSPBlockOperation*)(G__getstructoffset()))->GetBlockLen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((TDSPBlockOperation*)(G__getstructoffset()))->TrimBlock((UInt_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)TDSPBlockOperation::Sum((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)TDSPBlockOperation::Sum((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->Sum((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->Sum((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
   G__letint(result7,85,(long)TDSPBlockOperation::SumDiff((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]),(TDSPVector*)G__int(libp->para[3])
,*((TComplex*)G__int(libp->para[4]))));
      break;
   case 4:
   G__letint(result7,85,(long)TDSPBlockOperation::SumDiff((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]),(TDSPVector*)G__int(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)TDSPBlockOperation::SumDiff((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->SumDiff((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]),*((TComplex*)G__int(libp->para[3]))));
      break;
   case 3:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->SumDiff((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->SumDiff((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
   G__letint(result7,85,(long)TDSPBlockOperation::MeanDiff((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]),(TDSPVector*)G__int(libp->para[3])
,*((TComplex*)G__int(libp->para[4]))));
      break;
   case 4:
   G__letint(result7,85,(long)TDSPBlockOperation::MeanDiff((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]),(TDSPVector*)G__int(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)TDSPBlockOperation::MeanDiff((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->MeanDiff((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]),*((TComplex*)G__int(libp->para[3]))));
      break;
   case 3:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->MeanDiff((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->MeanDiff((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
   G__letint(result7,85,(long)TDSPBlockOperation::Sum2Diff((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]),(TDSPVector*)G__int(libp->para[3])
,*((TComplex*)G__int(libp->para[4]))));
      break;
   case 4:
   G__letint(result7,85,(long)TDSPBlockOperation::Sum2Diff((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]),(TDSPVector*)G__int(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)TDSPBlockOperation::Sum2Diff((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->Sum2Diff((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]),*((TComplex*)G__int(libp->para[3]))));
      break;
   case 3:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->Sum2Diff((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->Sum2Diff((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
   G__letint(result7,85,(long)TDSPBlockOperation::Mean2Diff((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]),(TDSPVector*)G__int(libp->para[3])
,*((TComplex*)G__int(libp->para[4]))));
      break;
   case 4:
   G__letint(result7,85,(long)TDSPBlockOperation::Mean2Diff((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]),(TDSPVector*)G__int(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)TDSPBlockOperation::Mean2Diff((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->Mean2Diff((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]),*((TComplex*)G__int(libp->para[3]))));
      break;
   case 3:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->Mean2Diff((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->Mean2Diff((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)TDSPBlockOperation::Mean((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)TDSPBlockOperation::Mean((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->Mean((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->Mean((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)TDSPBlockOperation::MeanAbs2((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)TDSPBlockOperation::MeanAbs2((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->MeanAbs2((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->MeanAbs2((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)TDSPBlockOperation::I_MeanAbs2((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)TDSPBlockOperation::I_MeanAbs2((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->I_MeanAbs2((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->I_MeanAbs2((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)TDSPBlockOperation::MeanAbs((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)TDSPBlockOperation::MeanAbs((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->MeanAbs((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->MeanAbs((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)TDSPBlockOperation::I_MeanAbs((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)TDSPBlockOperation::I_MeanAbs((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->I_MeanAbs((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->I_MeanAbs((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)TDSPBlockOperation::MaxAbs2((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)TDSPBlockOperation::MaxAbs2((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->MaxAbs2((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->MaxAbs2((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)TDSPBlockOperation::I_MaxAbs2((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)TDSPBlockOperation::I_MaxAbs2((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->I_MaxAbs2((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->I_MaxAbs2((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)TDSPBlockOperation::MinAbs2((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)TDSPBlockOperation::MinAbs2((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->MinAbs2((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->MinAbs2((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)TDSPBlockOperation::I_MinAbs2((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)TDSPBlockOperation::I_MinAbs2((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->I_MinAbs2((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->I_MinAbs2((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)TDSPBlockOperation::MaxAbs((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)TDSPBlockOperation::MaxAbs((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->MaxAbs((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->MaxAbs((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)TDSPBlockOperation::I_MaxAbs((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)TDSPBlockOperation::I_MaxAbs((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->I_MaxAbs((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->I_MaxAbs((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)TDSPBlockOperation::MinAbs((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)TDSPBlockOperation::MinAbs((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->MinAbs((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->MinAbs((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)TDSPBlockOperation::I_MinAbs((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)TDSPBlockOperation::I_MinAbs((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->I_MinAbs((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->I_MinAbs((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)TDSPBlockOperation::MeanPower((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)TDSPBlockOperation::MeanPower((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->MeanPower((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->MeanPower((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
   G__letint(result7,85,(long)TDSPBlockOperation::MSE((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]),(TDSPVector*)G__int(libp->para[3])
,*((TComplex*)G__int(libp->para[4]))));
      break;
   case 4:
   G__letint(result7,85,(long)TDSPBlockOperation::MSE((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]),(TDSPVector*)G__int(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)TDSPBlockOperation::MSE((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->MSE((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]),*((TComplex*)G__int(libp->para[3]))));
      break;
   case 3:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->MSE((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->MSE((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
   G__letint(result7,85,(long)TDSPBlockOperation::SumPhaseDiff((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]),(TDSPVector*)G__int(libp->para[3])
,*((TComplex*)G__int(libp->para[4]))));
      break;
   case 4:
   G__letint(result7,85,(long)TDSPBlockOperation::SumPhaseDiff((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]),(TDSPVector*)G__int(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)TDSPBlockOperation::SumPhaseDiff((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->SumPhaseDiff((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]),*((TComplex*)G__int(libp->para[3]))));
      break;
   case 3:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->SumPhaseDiff((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->SumPhaseDiff((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
   G__letint(result7,85,(long)TDSPBlockOperation::Sum2PhaseDiff((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]),(TDSPVector*)G__int(libp->para[3])
,*((TComplex*)G__int(libp->para[4]))));
      break;
   case 4:
   G__letint(result7,85,(long)TDSPBlockOperation::Sum2PhaseDiff((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]),(TDSPVector*)G__int(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)TDSPBlockOperation::Sum2PhaseDiff((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->Sum2PhaseDiff((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]),*((TComplex*)G__int(libp->para[3]))));
      break;
   case 3:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->Sum2PhaseDiff((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->Sum2PhaseDiff((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
   G__letint(result7,85,(long)TDSPBlockOperation::MeanPhaseDiff((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]),(TDSPVector*)G__int(libp->para[3])
,*((TComplex*)G__int(libp->para[4]))));
      break;
   case 4:
   G__letint(result7,85,(long)TDSPBlockOperation::MeanPhaseDiff((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]),(TDSPVector*)G__int(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)TDSPBlockOperation::MeanPhaseDiff((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->MeanPhaseDiff((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]),*((TComplex*)G__int(libp->para[3]))));
      break;
   case 3:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->MeanPhaseDiff((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->MeanPhaseDiff((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
   G__letint(result7,85,(long)TDSPBlockOperation::Mean2PhaseDiff((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]),(TDSPVector*)G__int(libp->para[3])
,*((TComplex*)G__int(libp->para[4]))));
      break;
   case 4:
   G__letint(result7,85,(long)TDSPBlockOperation::Mean2PhaseDiff((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]),(TDSPVector*)G__int(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)TDSPBlockOperation::Mean2PhaseDiff((Int_t)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->Mean2PhaseDiff((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]),*((TComplex*)G__int(libp->para[3]))));
      break;
   case 3:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->Mean2PhaseDiff((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)((TDSPBlockOperation*)(G__getstructoffset()))->Mean2PhaseDiff((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPBlockOperation::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPBlockOperation::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPBlockOperation::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPBlockOperation::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_6_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPBlockOperation*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_7_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPBlockOperation*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_8_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPBlockOperation*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_9_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPBlockOperation*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_0_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPBlockOperation::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_1_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPBlockOperation::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_2_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPBlockOperation::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_200_3_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPBlockOperation::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPBlockOperation G__TTDSPBlockOperation;
static int G__LinAlgDict_200_4_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPBlockOperation *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TDSPBlockOperation *)((G__getstructoffset())+sizeof(TDSPBlockOperation)*i))->~G__TTDSPBlockOperation();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TDSPBlockOperation *)(G__getstructoffset()))->~G__TTDSPBlockOperation();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPSolver */
static int G__LinAlgDict_216_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TDSPSolver*)(G__getstructoffset()))->GetNumInputs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_216_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TDSPSolver*)(G__getstructoffset()))->GetNumOutputs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_216_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDSPSolver*)(G__getstructoffset()))->Redundancy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_216_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDSPSolver*)(G__getstructoffset()))->Solve());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_216_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSolver*)(G__getstructoffset()))->SetY((TDSPVector*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_216_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSolver*)(G__getstructoffset()))->SetY(*(TDSPVector*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_216_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSolver*)(G__getstructoffset()))->SetX((TDSPVector*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_216_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSolver*)(G__getstructoffset()))->SetX(*(TDSPVector*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_216_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSolver*)(G__getstructoffset()))->SetXAlphabet((TDSPVector*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_216_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSolver*)(G__getstructoffset()))->SetXAlphabet((TComplex*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_216_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSolver*)(G__getstructoffset()))->SetXMinDist((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_216_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPSolver*)(G__getstructoffset()))->Y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_216_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPSolver*)(G__getstructoffset()))->GetY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_216_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPSolver*)(G__getstructoffset()))->X());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_216_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPSolver*)(G__getstructoffset()))->GetX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_216_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSolver*)(G__getstructoffset()))->Print();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_216_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPSolver::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_216_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPSolver::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_216_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPSolver::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_216_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPSolver::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_216_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPSolver*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_216_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSolver*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_216_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSolver*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_216_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPSolver*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_216_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPSolver::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_216_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPSolver::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_216_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPSolver::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_216_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPSolver::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPSolver G__TTDSPSolver;
static int G__LinAlgDict_216_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPSolver *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPSolver *)((G__getstructoffset())+sizeof(TDSPSolver)*i);
   else  delete (TDSPSolver *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPLinearSolver */
static int G__LinAlgDict_218_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPLinearSolver *p=NULL;
   switch(libp->paran) {
   case 3:
      p = new TDSPLinearSolver(
(TDSPMatrix*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]));
      break;
   case 2:
      p = new TDSPLinearSolver((TDSPMatrix*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1]));
      break;
   case 1:
      p = new TDSPLinearSolver((TDSPMatrix*)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TDSPLinearSolver[G__getaryconstruct()];
   else                    p=new TDSPLinearSolver;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__LinAlgDictLN_TDSPLinearSolver);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPLinearSolver*)(G__getstructoffset()))->Print();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPLinearSolver*)(G__getstructoffset()))->SetMethod((eLinearSolveMethod)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPLinearSolver*)(G__getstructoffset()))->SetA((TDSPMatrix*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPLinearSolver*)(G__getstructoffset()))->SetA(*(TDSPMatrix*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPLinearSolver*)(G__getstructoffset()))->SetB((TDSPVector*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPLinearSolver*)(G__getstructoffset()))->SetB(*(TDSPVector*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPLinearSolver*)(G__getstructoffset()))->Guess((TDSPVector*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPLinearSolver*)(G__getstructoffset()))->Guess(*(TDSPVector*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPLinearSolver*)(G__getstructoffset()))->Set((TDSPMatrix*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPLinearSolver*)(G__getstructoffset()))->SetMaxIterations((UInt_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPLinearSolver*)(G__getstructoffset()))->SetStopPrecision((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPLinearSolver*)(G__getstructoffset()))->SetSerialHD((UInt_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPLinearSolver*)(G__getstructoffset()))->SetParalleHD((UInt_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDSPLinearSolver*)(G__getstructoffset()))->GetMethod());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDSPLinearSolver*)(G__getstructoffset()))->Method());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPLinearSolver*)(G__getstructoffset()))->B());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPLinearSolver*)(G__getstructoffset()))->GetB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPLinearSolver*)(G__getstructoffset()))->A());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPLinearSolver*)(G__getstructoffset()))->GetA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const TDSPLinearSolver*)(G__getstructoffset()))->GetMaxIterations());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const TDSPLinearSolver*)(G__getstructoffset()))->GetIterations());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TDSPLinearSolver*)(G__getstructoffset()))->GetMeanIterations());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TDSPLinearSolver*)(G__getstructoffset()))->GetStopPrecision());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TDSPLinearSolver*)(G__getstructoffset()))->GetPrecision());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TDSPLinearSolver*)(G__getstructoffset()))->GetMeanPrecision());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const TDSPLinearSolver*)(G__getstructoffset()))->GetSerialHD());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const TDSPLinearSolver*)(G__getstructoffset()))->GetParallelHD());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPLinearSolver*)(G__getstructoffset()))->ResetMeans();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TDSPLinearSolver*)(G__getstructoffset()))->GetNumInputs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TDSPLinearSolver*)(G__getstructoffset()))->GetNumOutputs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDSPLinearSolver*)(G__getstructoffset()))->Solve());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPLinearSolver*)(G__getstructoffset()))->StackA((TDSPMatrix*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPLinearSolver::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPLinearSolver::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPLinearSolver::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPLinearSolver::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPLinearSolver*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPLinearSolver*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPLinearSolver*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPLinearSolver*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPLinearSolver::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPLinearSolver::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPLinearSolver::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict_218_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPLinearSolver::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPLinearSolver G__TTDSPLinearSolver;
static int G__LinAlgDict_218_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPLinearSolver *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPLinearSolver *)((G__getstructoffset())+sizeof(TDSPLinearSolver)*i);
   else  delete (TDSPLinearSolver *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */
static int G__LinAlgDict__1_28(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TComplex *pobj,xobj=operator+((const Double_t)G__double(libp->para[0]),*(TComplex*)libp->para[1].ref);
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__2_28(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TComplex *pobj,xobj=operator-((const Double_t)G__double(libp->para[0]),*(TComplex*)libp->para[1].ref);
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__4_28(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TComplex *pobj,xobj=operator*((const Double_t)G__double(libp->para[0]),*(TComplex*)libp->para[1].ref);
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__5_28(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TComplex *pobj,xobj=operator*(*(TComplex*)libp->para[0].ref,*(TComplex*)libp->para[1].ref);
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__7_28(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TComplex *pobj,xobj=operator%(*(TComplex*)libp->para[0].ref,*(TComplex*)libp->para[1].ref);
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__8_28(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TComplex *pobj,xobj=operator/((const Double_t)G__double(libp->para[0]),*(TComplex*)libp->para[1].ref);
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__9_28(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)operator==(*(TComplex*)libp->para[0].ref,*(TComplex*)libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__0_29(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)operator!=(*(TComplex*)libp->para[0].ref,*(TComplex*)libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__1_29(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)operator==(*(TComplex*)libp->para[0].ref,*(Double_t*)G__Doubleref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__2_29(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)operator!=(*(TComplex*)libp->para[0].ref,*(Double_t*)G__Doubleref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__3_29(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)Abs(*(TComplex*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__4_29(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)Abs2(*(TComplex*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__5_29(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TComplex *pobj,xobj=Sqrt(*(TComplex*)libp->para[0].ref);
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__6_29(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TComplex *pobj,xobj=Sqrt3(*(TComplex*)libp->para[0].ref,(Int_t)G__int(libp->para[1]));
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__7_29(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TComplex *pobj,xobj=Exp(*(TComplex*)libp->para[0].ref);
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__8_29(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TComplex *pobj,xobj=Log(*(TComplex*)libp->para[0].ref);
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__9_29(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TComplex *pobj,xobj=Log10(*(TComplex*)libp->para[0].ref);
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__0_30(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TComplex *pobj,xobj=Log2(*(TComplex*)libp->para[0].ref);
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__1_30(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TComplex *pobj,xobj=Sin(*(TComplex*)libp->para[0].ref);
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__2_30(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TComplex *pobj,xobj=Cos(*(TComplex*)libp->para[0].ref);
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__3_30(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TComplex *pobj,xobj=Power(*(TComplex*)libp->para[0].ref,(Int_t)G__int(libp->para[1]));
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__4_30(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TComplex *pobj,xobj=Power(*(TComplex*)libp->para[0].ref,(Double_t)G__double(libp->para[1]));
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__5_30(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)Phase(*((TComplex*)G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__6_30(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const istream& obj=operator>>(*(istream*)libp->para[0].ref,*(TComplex*)libp->para[1].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__7_30(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const ostream& obj=operator<<(*(ostream*)libp->para[0].ref,*(TComplex*)libp->para[1].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__9_30(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)Dist(*(TComplex*)libp->para[0].ref,*(TComplex*)libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__6_39(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)operator==(*(TDSPVector*)libp->para[0].ref,*(TDSPVector*)libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__7_39(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const istream& obj=operator>>(*(istream*)libp->para[0].ref,*(TDSPVector*)libp->para[1].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__8_39(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const ostream& obj=operator<<(*(ostream*)libp->para[0].ref,*(TDSPVector*)libp->para[1].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__9_39(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const istream& obj=operator>>(*(istream*)libp->para[0].ref,(TDSPVector*)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__0_40(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const ostream& obj=operator<<(*(ostream*)libp->para[0].ref,(TDSPVector*)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__1_40(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letdouble(result7,100,(double)filternorm((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(UInt_t)G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7,100,(double)filternorm((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7,100,(double)filternorm((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__2_40(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
   G__letint(result7,85,(long)filter((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]),(TDSPVector*)G__int(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)filter((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__3_40(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      mult((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__4_40(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 6:
      G__setnull(result7);
      econv((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]),(Int_t)G__int(libp->para[5]));
      break;
   case 5:
      G__setnull(result7);
      econv((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]));
      break;
   case 4:
      G__setnull(result7);
      econv((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      G__setnull(result7);
      econv((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__5_40(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letdouble(result7,100,(double)Var((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7,100,(double)Var((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__6_40(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)Var(*(TDSPVector*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__7_40(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)Std((TDSPVector*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__8_40(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)Std(*(TDSPVector*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__9_40(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)Dist((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__0_41(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)Dist2((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__1_41(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      {
        TComplex *pobj,xobj=Dot((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(Bool_t)G__int(libp->para[2]));
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
        TComplex *pobj,xobj=Dot((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1]));
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__2_41(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)Dot2((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__3_41(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)Dist(*(TDSPVector*)libp->para[0].ref,*(TDSPVector*)libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__4_41(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)Dist2(*(TDSPVector*)libp->para[0].ref,*(TDSPVector*)libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__5_41(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      {
        TComplex *pobj,xobj=Dot(*(TDSPVector*)libp->para[0].ref,*(TDSPVector*)libp->para[1].ref
,(Bool_t)G__int(libp->para[2]));
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
        TComplex *pobj,xobj=Dot(*(TDSPVector*)libp->para[0].ref,*(TDSPVector*)libp->para[1].ref);
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__6_41(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)Dot2(*(TDSPVector*)libp->para[0].ref,*(TDSPVector*)libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__7_41(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
   G__letint(result7,85,(long)Index(*((TComplex*)G__int(libp->para[0])),*((TComplex*)G__int(libp->para[1]))
,*((TComplex*)G__int(libp->para[2])),(TDSPVector*)G__int(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)Index(*((TComplex*)G__int(libp->para[0])),*((TComplex*)G__int(libp->para[1]))
,*((TComplex*)G__int(libp->para[2]))));
      break;
   case 2:
   G__letint(result7,85,(long)Index(*((TComplex*)G__int(libp->para[0])),*((TComplex*)G__int(libp->para[1]))));
      break;
   case 1:
   G__letint(result7,85,(long)Index(*((TComplex*)G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__8_41(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
   G__letint(result7,85,(long)Conv((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4])));
      break;
   case 4:
   G__letint(result7,85,(long)Conv((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)Conv((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)Conv((TDSPVector*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__9_41(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
   G__letint(result7,85,(long)Rect((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(TDSPVector*)G__int(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)Rect((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)Rect((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__0_42(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
   G__letint(result7,85,(long)Rect_FFTShift((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(TDSPVector*)G__int(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)Rect_FFTShift((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)Rect_FFTShift((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__1_42(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)Gaussnk((Int_t)G__int(libp->para[0]),(Double_t)G__double(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)Gaussnk((Int_t)G__int(libp->para[0]),(Double_t)G__double(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)Gaussnk((Int_t)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__2_42(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)Gaussnk_FFTShift((Int_t)G__int(libp->para[0]),(Double_t)G__double(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)Gaussnk_FFTShift((Int_t)G__int(libp->para[0]),(Double_t)G__double(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)Gaussnk_FFTShift((Int_t)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__3_42(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
   G__letint(result7,85,(long)Rcos((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(TDSPVector*)G__int(libp->para[4])));
      break;
   case 4:
   G__letint(result7,85,(long)Rcos((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)Rcos((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__4_42(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
   G__letint(result7,85,(long)Rcos_FFTShift((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(TDSPVector*)G__int(libp->para[4])));
      break;
   case 4:
   G__letint(result7,85,(long)Rcos_FFTShift((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)Rcos_FFTShift((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__5_42(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)RandNC((UInt_t)G__int(libp->para[0]),(Double_t)G__double(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)RandNC((UInt_t)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__6_42(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)Delta((UInt_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)Delta((UInt_t)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__7_42(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const istream& obj=operator>>(*(istream*)libp->para[0].ref,*(TDSPMatrix*)libp->para[1].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__8_42(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const ostream& obj=operator<<(*(ostream*)libp->para[0].ref,*(TDSPMatrix*)libp->para[1].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__9_42(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const istream& obj=operator>>(*(istream*)libp->para[0].ref,(TDSPMatrix*)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__0_43(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const ostream& obj=operator<<(*(ostream*)libp->para[0].ref,(TDSPMatrix*)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__1_43(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)Transform((TDSPMatrix*)G__int(libp->para[0]),(TDSPMatrix*)G__int(libp->para[1])
,(TDSPMatrix*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)Transform((TDSPMatrix*)G__int(libp->para[0]),(TDSPMatrix*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__3_43(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
   G__letint(result7,85,(long)Affine((TDSPMatrix*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2]),(TDSPVector*)G__int(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)Affine((TDSPMatrix*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])
,(TDSPVector*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)Affine((TDSPMatrix*)G__int(libp->para[0]),(TDSPVector*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__4_43(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)UnitMatrix((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,*((TComplex*)G__int(libp->para[2]))));
      break;
   case 2:
   G__letint(result7,85,(long)UnitMatrix((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)UnitMatrix((Int_t)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__5_43(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)FlatMatrix((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,*((TComplex*)G__int(libp->para[2]))));
      break;
   case 2:
   G__letint(result7,85,(long)FlatMatrix((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)FlatMatrix((Int_t)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__6_43(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)ZeroMatrix((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)ZeroMatrix((Int_t)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__7_43(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)Zeros((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)Zeros((Int_t)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__8_43(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)Ones((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)Ones((Int_t)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__9_43(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TComplex *pobj,xobj=Det((TDSPMatrix*)G__int(libp->para[0]));
        pobj=new TComplex(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__0_44(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)RowStack((TDSPVector*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(TDSPMatrix*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)RowStack((TDSPVector*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__1_44(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)ColumnStack((TDSPVector*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(TDSPMatrix*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)ColumnStack((TDSPVector*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__2_44(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 6:
   G__letint(result7,85,(long)ConvMatrix((TDSPVector*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(TDSPMatrix*)G__int(libp->para[3])
,(Bool_t)G__int(libp->para[4]),(Int_t)G__int(libp->para[5])));
      break;
   case 5:
   G__letint(result7,85,(long)ConvMatrix((TDSPVector*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(TDSPMatrix*)G__int(libp->para[3])
,(Bool_t)G__int(libp->para[4])));
      break;
   case 4:
   G__letint(result7,85,(long)ConvMatrix((TDSPVector*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(TDSPMatrix*)G__int(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)ConvMatrix((TDSPVector*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)ConvMatrix((TDSPVector*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)ConvMatrix((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__3_44(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 7:
   G__letint(result7,85,(long)ConvMatrix(
(TDSPMatrix*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(TDSPMatrix*)G__int(libp->para[3])
,(Bool_t)G__int(libp->para[4]),(Int_t)G__int(libp->para[5])
,(Int_t)G__int(libp->para[6])));
      break;
   case 6:
   G__letint(result7,85,(long)ConvMatrix((TDSPMatrix*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(TDSPMatrix*)G__int(libp->para[3])
,(Bool_t)G__int(libp->para[4]),(Int_t)G__int(libp->para[5])));
      break;
   case 5:
   G__letint(result7,85,(long)ConvMatrix((TDSPMatrix*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(TDSPMatrix*)G__int(libp->para[3])
,(Bool_t)G__int(libp->para[4])));
      break;
   case 4:
   G__letint(result7,85,(long)ConvMatrix((TDSPMatrix*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(TDSPMatrix*)G__int(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)ConvMatrix((TDSPMatrix*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)ConvMatrix((TDSPMatrix*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)ConvMatrix((TDSPMatrix*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__4_44(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
   G__letint(result7,85,(long)Toeplitz((TDSPVector*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(TDSPMatrix*)G__int(libp->para[3])
,(Bool_t)G__int(libp->para[4])));
      break;
   case 4:
   G__letint(result7,85,(long)Toeplitz((TDSPVector*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(TDSPMatrix*)G__int(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)Toeplitz((TDSPVector*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)Toeplitz((TDSPVector*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)Toeplitz((TDSPVector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__5_44(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)RandNC((UInt_t)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)RandNC((UInt_t)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__6_44(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)Dist((TDSPMatrix*)G__int(libp->para[0]),(TDSPMatrix*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__7_44(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)Dist2((TDSPMatrix*)G__int(libp->para[0]),(TDSPMatrix*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__8_44(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)Dot((TDSPMatrix*)G__int(libp->para[0]),(TDSPMatrix*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__9_44(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)Dot2((TDSPMatrix*)G__int(libp->para[0]),(TDSPMatrix*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__2_45(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)Dot(*(TDSPMatrix*)libp->para[0].ref,*(TDSPMatrix*)libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LinAlgDict__3_45(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)Dot2(*(TDSPMatrix*)libp->para[0].ref,*(TDSPMatrix*)libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}


/*********************************************************
* Member function Stub
*********************************************************/

/* TComplex */

/* TDSPVector */

/* TDSPMatrix */

/* TDSPBlockOperation */

/* TDSPSolver */

/* TDSPLinearSolver */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncLinAlgDict {
 public:
  G__Sizep2memfuncLinAlgDict() {p=&G__Sizep2memfuncLinAlgDict::sizep2memfunc;}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncLinAlgDict::*p)();
};

size_t G__get_sizep2memfuncLinAlgDict()
{
  G__Sizep2memfuncLinAlgDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceLinAlgDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector))) {
     TDSPVector *G__Lderived;
     G__Lderived=(TDSPVector*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),G__get_linked_tagnum(&G__LinAlgDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),G__get_linked_tagnum(&G__LinAlgDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix))) {
     TDSPMatrix *G__Lderived;
     G__Lderived=(TDSPMatrix*)0x1000;
     {
       TDSPVector *G__Lpbase=(TDSPVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix),G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix),G__get_linked_tagnum(&G__LinAlgDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix),G__get_linked_tagnum(&G__LinAlgDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__LinAlgDictLN_TDSPSolver))) {
     TDSPSolver *G__Lderived;
     G__Lderived=(TDSPSolver*)0x1000;
     {
       TQQObject *G__Lpbase=(TQQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__LinAlgDictLN_TDSPSolver),G__get_linked_tagnum(&G__LinAlgDictLN_TQQObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__LinAlgDictLN_TDSPSolver),G__get_linked_tagnum(&G__LinAlgDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__LinAlgDictLN_TDSPSolver),G__get_linked_tagnum(&G__LinAlgDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObjSender *G__Lpbase=(TQObjSender*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__LinAlgDictLN_TDSPSolver),G__get_linked_tagnum(&G__LinAlgDictLN_TQObjSender),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__LinAlgDictLN_TDSPSolver),G__get_linked_tagnum(&G__LinAlgDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__LinAlgDictLN_TDSPLinearSolver))) {
     TDSPLinearSolver *G__Lderived;
     G__Lderived=(TDSPLinearSolver*)0x1000;
     {
       TDSPSolver *G__Lpbase=(TDSPSolver*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__LinAlgDictLN_TDSPLinearSolver),G__get_linked_tagnum(&G__LinAlgDictLN_TDSPSolver),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TQQObject *G__Lpbase=(TQQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__LinAlgDictLN_TDSPLinearSolver),G__get_linked_tagnum(&G__LinAlgDictLN_TQQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__LinAlgDictLN_TDSPLinearSolver),G__get_linked_tagnum(&G__LinAlgDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__LinAlgDictLN_TDSPLinearSolver),G__get_linked_tagnum(&G__LinAlgDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObjSender *G__Lpbase=(TQObjSender*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__LinAlgDictLN_TDSPLinearSolver),G__get_linked_tagnum(&G__LinAlgDictLN_TQObjSender),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__LinAlgDictLN_TDSPLinearSolver),G__get_linked_tagnum(&G__LinAlgDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableLinAlgDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,
-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,
-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Double_t",100,-1,0,
-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,
-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,
-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,
-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("TComplex (*)(TComplex&)",81,-1,0,
-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TComplex */
static void G__setup_memvarTComplex(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LinAlgDictLN_TComplex));
   { TComplex *p; p=(TComplex*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fRe)-(long)(p)),100,0,0,-1,G__defined_typename("TComplexBase"),-1,1,"fRe=",0,"real part");
   G__memvar_setup((void*)((long)(&p->fIm)-(long)(p)),100,0,0,-1,G__defined_typename("TComplexBase"),-1,1,"fIm=",0,"imaginary part");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__LinAlgDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPVector */
static void G__setup_memvarTDSPVector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector));
   { TDSPVector *p; p=(TDSPVector*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-2,4,"fPerLine=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__LinAlgDictLN_TH1),-1,-2,4,"fHistogram=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMinAlloc=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fAllocHighScale=",0,"/<  Alloc more memory we really need to avoid many alloc if we resize the block ");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fAllocLowScale=",0,"/<  Alloc more memory we really need to avoid many alloc if we resize the block ");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-2,2,"fStrict=",0,"/< Strictmode 0=none,1=warning,2=strict");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-2,2,"fATLAS=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,67,0,0,-1,-1,-1,2,"fXTitle=",0,"/< A name for the vector index");
   G__memvar_setup((void*)NULL,67,0,0,-1,-1,-1,2,"fYTitle=",0,"/< A name for the vector content");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,-1,2,"fVec=",0,"! Pointer to the complex signal vector");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"Num=",0,"/<  Len of signal vectorm");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPos=",0,"/<  mom. position for pointwise filling etc.");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,-1,2,"fAllocedVec=",0,"!");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fAllocedNum=",0,"/<  ");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSamplingRate=",0,"/< The Sampling Rate ");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fZero=",0,"/< for absolut positioning (=pos of the zero)");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__LinAlgDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* eMatrixApplyMode */

   /* TDSPMatrix */
static void G__setup_memvarTDSPMatrix(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix));
   { TDSPMatrix *p; p=(TDSPMatrix*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__LinAlgDictLN_TH2),-1,-2,4,"fHistogram2=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,67,0,0,-1,-1,-1,4,"fZTitle=",0,"!/< A name for the z-axis");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fRows=",0,"/<Number of Rows of the Matrix");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fCols=",0,"/<Number of Columns of the Matrix");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__LinAlgDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPBlockOperation */
static void G__setup_memvarTDSPBlockOperation(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LinAlgDictLN_TDSPBlockOperation));
   { TDSPBlockOperation *p; p=(TDSPBlockOperation*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__LinAlgDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPSolver */
static void G__setup_memvarTDSPSolver(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LinAlgDictLN_TDSPSolver));
   { TDSPSolver *p; p=(TDSPSolver*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fHaveSolution=",0,"/< Is there a solution ?");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,-1,2,"fY=",0,"! Vector y in the equation y=A(x)+b");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,-1,2,"fX=",0,"! Solution Vector x in the equation y=A(x)+b");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNumXAlphabet=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,-1,2,"fXAlphabet=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMinDist=",0,"/< Minimal Distances for break the ML-Searching");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__LinAlgDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* eLinearSolveMethod */

   /* TDSPLinearSolver */
static void G__setup_memvarTDSPLinearSolver(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LinAlgDictLN_TDSPLinearSolver));
   { TDSPLinearSolver *p; p=(TDSPLinearSolver*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,G__get_linked_tagnum(&G__LinAlgDictLN_eLinearSolveMethod),-1,-1,2,"fMethod=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__LinAlgDictLN_TList),-1,-1,2,"fAList=",0,"List of Matrices");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fIterations=",0,"The Number of Iterations of the last call");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fMaxIterations=",0,"The maximal number of Iterations, after stopping calculations");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMeanIterations=",0,"The mean number Iterations");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fStopPrecision=",0,"the Stop Precision of the iterations");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPrecision=",0,"the last precision");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMeanPrecision=",0,"The mean precision");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fAccumulation=",0,"The accumulated number for making the averages");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fUsingAStack=",0,"/< Use a Stack for the A-Matrices ?");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,-1,2,"fB=",0,"! Vector b in the equation y=Ax+b");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix),-1,-1,2,"fA=",0,"! Matrix a in the equation y=Ax+b");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,-1,2,"fGuessX=",0,"! initial Guess of X");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fIter_Serial_HD=",0,"Do Serial Hard Decisions for fIterations>=fIter_Serial_HD (default=999999)");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fIter_Parallel_HD=",0,"Do Parallel Hard Decisions for fIterations>=fIter_Serial_HD (default=999999)");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,-1,2,"Xtmp=",0,"a temporary vector ...");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__LinAlgDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarLinAlgDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTComplex(void) {
   /* TComplex */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LinAlgDictLN_TComplex));
   G__memfunc_setup("TComplex",812,G__LinAlgDict_130_0_0,105,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TComplex",812,G__LinAlgDict_130_1_0,105,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,2,1,1,0,
"d - 'Double_t' 0 - x d - 'Double_t' 0 0 y",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TComplex",812,G__LinAlgDict_130_2_0,105,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,1,1,1,0,"u 'TComplex' - 11 - z",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Re",183,G__LinAlgDict_130_3_0,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Im",182,G__LinAlgDict_130_4_0,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Phase",497,G__LinAlgDict_130_5_0,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Set",300,G__LinAlgDict_130_6_0,121,-1,-1,0,2,1,1,0,
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetReal",688,G__LinAlgDict_130_7_0,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - x",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetIm",482,G__LinAlgDict_130_8_0,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - y",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("C",67,G__LinAlgDict_130_9_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("PureReal",800,G__LinAlgDict_130_0_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("PureIm",594,G__LinAlgDict_130_1_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetNeg",582,G__LinAlgDict_130_2_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dump",406,G__LinAlgDict_130_3_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator Bool_t",1515,G__LinAlgDict_130_4_1,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator Double_t",1722,G__LinAlgDict_130_5_1,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator Int_t",1418,G__LinAlgDict_130_6_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator!",909,G__LinAlgDict_130_7_1,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator&&",952,G__LinAlgDict_130_8_1,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"u 'TComplex' - 1 - z",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+",919,G__LinAlgDict_130_9_1,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,1,1,1,0,"u 'TComplex' - 11 - z",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+",919,G__LinAlgDict_130_0_2,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,1,1,1,0,"d - 'Double_t' 10 - x",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+",919,G__LinAlgDict_130_1_2,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,1,1,1,0,"i - 'Int_t' 10 - x",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator-",921,G__LinAlgDict_130_2_2,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator-",921,G__LinAlgDict_130_3_2,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,1,1,1,0,"u 'TComplex' - 11 - z",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator-",921,G__LinAlgDict_130_4_2,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,1,1,1,0,"d - 'Double_t' 10 - x",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator-",921,G__LinAlgDict_130_5_2,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,1,1,1,0,"i - 'Int_t' 10 - x",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__LinAlgDict_130_6_2,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,1,1,1,1,0,"u 'TComplex' - 11 - z",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__LinAlgDict_130_7_2,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,1,1,1,1,0,"d - 'Double_t' 10 - x",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__LinAlgDict_130_8_2,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,1,1,1,1,0,"d - 'Double_t' 11 - x",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__LinAlgDict_130_9_2,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,1,1,1,1,0,"u 'TComplex' - 11 - z",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator-=",982,G__LinAlgDict_130_0_3,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,1,1,1,1,0,"d - 'Double_t' 11 - x",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator-=",982,G__LinAlgDict_130_1_3,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,1,1,1,1,0,"u 'TComplex' - 11 - z",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator/=",984,G__LinAlgDict_130_2_3,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,1,1,1,1,0,"d - 'Double_t' 11 - x",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator/=",984,G__LinAlgDict_130_3_3,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,1,1,1,1,0,"u 'TComplex' - 11 - z",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__LinAlgDict_130_4_3,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,1,1,1,1,0,"d - 'Double_t' 11 - x",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__LinAlgDict_130_5_3,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,1,1,1,1,0,"u 'TComplex' - 11 - z",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("FromRhoPhi",990,G__LinAlgDict_130_6_3,121,-1,-1,0,1,1,1,0,"u 'TCplxRhoPhi' - 1 - r",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsComplex",916,G__LinAlgDict_130_7_3,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"d - 'Double_t' 0 - limreal",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("BetterConj",1008,G__LinAlgDict_130_8_3,121,-1,-1,0,1,1,1,0,"u 'TComplex' - 1 - z2",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CosFromSin",995,G__LinAlgDict_130_9_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("RPhi",371,G__LinAlgDict_130_0_4,121,-1,-1,0,2,1,1,0,
"d - 'Double_t' 1 - r d - 'Double_t' 1 - phi",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*",918,G__LinAlgDict_130_1_4,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,1,1,1,0,"d - 'Double_t' 10 - x",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*",918,G__LinAlgDict_130_2_4,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,1,1,1,0,"i - 'Int_t' 10 - x",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator/",923,G__LinAlgDict_130_3_4,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,1,1,1,0,"u 'TComplex' - 11 - z",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator/",923,G__LinAlgDict_130_4_4,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,1,1,1,0,"d - 'Double_t' 10 - x",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator/",923,G__LinAlgDict_130_5_4,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,1,1,1,0,"i - 'Int_t' 10 - x",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Print",525,G__LinAlgDict_130_6_4,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Test",416,G__LinAlgDict_130_7_4,121,-1,-1,0,2,1,1,0,
"d - 'Double_t' 0 - - u 'TComplex' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__LinAlgDict_130_8_4,85,G__get_linked_tagnum(&G__LinAlgDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__LinAlgDict_130_9_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__LinAlgDict_130_0_5,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__LinAlgDict_130_1_5,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__LinAlgDict_130_2_5,85,G__get_linked_tagnum(&G__LinAlgDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ShowMembers",1132,G__LinAlgDict_130_3_5,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Streamer",835,G__LinAlgDict_130_4_5,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("StreamerNVirtual",1656,G__LinAlgDict_130_5_5,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__LinAlgDict_130_6_5,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__LinAlgDict_130_7_5,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__LinAlgDict_130_8_5,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__LinAlgDict_130_9_5,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TComplex",938,G__LinAlgDict_130_0_6,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPVector(void) {
   /* TDSPVector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector));
   G__memfunc_setup("LoadATLAS",757,G__LinAlgDict_197_0_0,103,-1,G__defined_typename("Bool_t"),0,1,3,1,0,"C - - 0 NULL name","/< loads the atlas library",(void*)NULL,0);
   G__memfunc_setup("EnableATLAS",956,G__LinAlgDict_197_1_0,121,-1,-1,0,0,3,1,0,"","/< disable the use of the atlas library",(void*)NULL,0);
   G__memfunc_setup("DisableATLAS",1065,G__LinAlgDict_197_2_0,121,-1,-1,0,0,3,1,0,"","/< enable the use of atlas library",(void*)NULL,0);
   G__memfunc_setup("UsingATLAS",891,G__LinAlgDict_197_3_0,103,-1,G__defined_typename("Bool_t"),0,0,3,1,0,"","/< Using ATLAS ?",(void*)NULL,0);
   G__memfunc_setup("Lo",187,G__LinAlgDict_197_4_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"","/< The lower index(=0)",(void*)NULL,0);
   G__memfunc_setup("Hi",177,G__LinAlgDict_197_5_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"","/< The higher index(=len-1)",(void*)NULL,0);
   G__memfunc_setup("Swap",411,G__LinAlgDict_197_6_0,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 - i i - 'Int_t' 0 - j","/< Swap two elements",(void*)NULL,0);
   G__memfunc_setup("Element",714,G__LinAlgDict_197_7_0,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,1,1,1,1,0,"i - 'Int_t' 0 - i","/< Return i'th component of the vector",(void*)NULL,0);
   G__memfunc_setup("GetVec",574,G__LinAlgDict_197_8_0,85,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,0,1,1,0,"","/< Get the pointer to the data",(void*)NULL,0);
   G__memfunc_setup("MoveVec",693,G__LinAlgDict_197_9_0,85,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,1,1,1,0,"i - 'Int_t' 0 - n","/< Move the pointer in the data",(void*)NULL,0);
   G__memfunc_setup("GetLen",575,G__LinAlgDict_197_0_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"","/< Get the size of the data block",(void*)NULL,0);
   G__memfunc_setup("GetTime",687,G__LinAlgDict_197_1_1,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"","/< Get the time (len/samplingrate)",(void*)NULL,0);
   G__memfunc_setup("Free",386,G__LinAlgDict_197_2_1,121,-1,-1,0,0,1,1,0,"","/< Free all resources used by this vector",(void*)NULL,0);
   G__memfunc_setup("GetZero",704,G__LinAlgDict_197_3_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"","/< Get the position of the zero",(void*)NULL,0);
   G__memfunc_setup("SetZero",716,G__LinAlgDict_197_4_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - z","/< Set the position of the zero",(void*)NULL,0);
   G__memfunc_setup("SetVec",586,G__LinAlgDict_197_5_1,121,-1,-1,0,2,1,1,0,
"U 'TComplex' - 0 - s i - 'Int_t' 0 -1 num","/< Set the pointer to extern data",(void*)NULL,0);
   G__memfunc_setup("ResetSignal",1121,G__LinAlgDict_197_6_1,121,-1,-1,0,0,1,1,0,"","/< Reset the pointer to intern data",(void*)NULL,0);
   G__memfunc_setup("SetLen",587,G__LinAlgDict_197_7_1,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 - num g - 'Bool_t' 0 kFALSE savedata","/< Set the size",(void*)NULL,1);
   G__memfunc_setup("SetMinLen",879,G__LinAlgDict_197_8_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - num","/< Set the minimum size to alloc",(void*)NULL,0);
   G__memfunc_setup("Set",300,G__LinAlgDict_197_9_1,121,-1,-1,0,1,1,1,0,"u 'TComplex' - 11 - c","/< Set all values to c",(void*)NULL,0);
   G__memfunc_setup("Set",300,G__LinAlgDict_197_0_2,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - d","/< Set all values to c",(void*)NULL,0);
   G__memfunc_setup("Set",300,G__LinAlgDict_197_1_2,121,-1,-1,0,4,1,1,0,
"i - 'Int_t' 0 - i U 'TDSPVector' - 0 - - "
"i - 'Int_t' 0 0 p i - 'Int_t' 0 -1 len","/< Set the values starting from i from vector at p..p+len-1",(void*)NULL,0);
   G__memfunc_setup("SetReal",688,G__LinAlgDict_197_2_2,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - d","/< Set all real parts to c",(void*)NULL,0);
   G__memfunc_setup("SetImag",682,G__LinAlgDict_197_3_2,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - d","/< Set all imag parts to c",(void*)NULL,0);
   G__memfunc_setup("Zeros",531,G__LinAlgDict_197_4_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Ones",405,G__LinAlgDict_197_5_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Delta",490,G__LinAlgDict_197_6_2,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 0 pos",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Step",412,G__LinAlgDict_197_7_2,121,-1,-1,0,2,1,1,0,
"u 'TComplex' - 1 - start u 'TComplex' - 1 - step","/< Init with start,start+step,start+2*step etc. ",(void*)NULL,0);
   G__memfunc_setup("Step",412,G__LinAlgDict_197_8_2,121,-1,-1,0,1,1,1,0,"u 'TComplex' - 1 - start","/< Init with start,start+1,start+2 etc.    ",(void*)NULL,0);
   G__memfunc_setup("Step",412,G__LinAlgDict_197_9_2,121,-1,-1,0,2,1,1,0,
"d - 'Double_t' 0 - start d - 'Double_t' 0 1.0 step","/< Init with start,start+step,start+2*step etc. ",(void*)NULL,0);
   G__memfunc_setup("Step",412,G__LinAlgDict_197_0_3,121,-1,-1,0,0,1,1,0,"","/< Init with 0,1,2,3 ...",(void*)NULL,0);
   G__memfunc_setup("ConjugateMe",1106,G__LinAlgDict_197_1_3,121,-1,-1,0,0,1,1,0,"","/< Conjugate all elements",(void*)NULL,0);
   G__memfunc_setup("AdjointMe",891,G__LinAlgDict_197_2_3,121,-1,-1,0,0,1,1,0,"","/< Adjoint the vector",(void*)NULL,0);
   G__memfunc_setup("Adjoint",713,G__LinAlgDict_197_3_3,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,1,1,1,0,"U 'TDSPVector' - 0 NULL out","/< Adjoint the vector",(void*)NULL,0);
   G__memfunc_setup("Append",600,G__LinAlgDict_197_4_3,121,-1,-1,0,1,1,1,0,"U 'TDSPVector' - 0 - -","/< Append a vector to this vector",(void*)NULL,0);
   G__memfunc_setup("Dist",404,G__LinAlgDict_197_5_3,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"U 'TDSPVector' - 0 - s","/< Calculate the Distance",(void*)NULL,0);
   G__memfunc_setup("Dist",404,G__LinAlgDict_197_6_3,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"u 'TDSPVector' - 1 - s","/< Calculate the Distance",(void*)NULL,0);
   G__memfunc_setup("Dist2",454,G__LinAlgDict_197_7_3,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"U 'TDSPVector' - 0 - -","/< Calculate the Distance^2",(void*)NULL,0);
   G__memfunc_setup("Dist2",454,G__LinAlgDict_197_8_3,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"u 'TDSPVector' - 1 - s","/< Calculate the Distance^2",(void*)NULL,0);
   G__memfunc_setup("Dot",295,G__LinAlgDict_197_9_3,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,2,1,1,0,
"U 'TDSPVector' - 0 - s g - 'Bool_t' 0 kTRUE conj","/< Calculate the Dot-Product - conjugate (this) before ?",(void*)NULL,0);
   G__memfunc_setup("Dot",295,G__LinAlgDict_197_0_4,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,2,1,1,0,
"u 'TDSPVector' - 1 - s g - 'Bool_t' 0 kTRUE conj","/< Calculate the Dot-Product - conjugate (this) before ?",(void*)NULL,0);
   G__memfunc_setup("Dot2",345,G__LinAlgDict_197_1_4,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"U 'TDSPVector' - 0 - s","/< Calculate the Dot-Product^2",(void*)NULL,0);
   G__memfunc_setup("Dot2",345,G__LinAlgDict_197_2_4,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"u 'TDSPVector' - 1 - s","/< Calculate the Dot-Product^2",(void*)NULL,0);
   G__memfunc_setup("RandN",467,G__LinAlgDict_197_3_4,121,-1,-1,0,2,1,1,0,
"d - 'Double_t' 0 0 mean d - 'Double_t' 0 1 sigma","/< real parts normal dist. with (mean,sigma=1) and imag=0",(void*)NULL,0);
   G__memfunc_setup("RandNreal",887,G__LinAlgDict_197_4_4,121,-1,-1,0,2,1,1,0,
"d - 'Double_t' 0 0 mean d - 'Double_t' 0 1 sigma","/< real parts normal dist. with (mean,sigma=1)",(void*)NULL,0);
   G__memfunc_setup("RandNimag",881,G__LinAlgDict_197_5_4,121,-1,-1,0,2,1,1,0,
"d - 'Double_t' 0 0 mean d - 'Double_t' 0 1 sigma","/< imag parts normal dist. with (mean,sigma=1)",(void*)NULL,0);
   G__memfunc_setup("RandNC",534,G__LinAlgDict_197_6_4,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 1 sigma","/< real/imag cnormal dist. with (sigma=1) and mean=0",(void*)NULL,0);
   G__memfunc_setup("RandNC",534,G__LinAlgDict_197_7_4,121,-1,-1,0,2,1,1,0,
"u 'TComplex' - 1 - - d - 'Double_t' 0 1 sigma","/< real/imag cnormal dist. with (mean,sigma=1)",(void*)NULL,0);
   G__memfunc_setup("RandNC",534,G__LinAlgDict_197_8_4,121,-1,-1,0,2,1,1,0,
"U 'TComplex' - 0 - - d - 'Double_t' 0 1 sigma","/< real/imag cnormal dist. with individ. (means,sigma=1)",(void*)NULL,0);
   G__memfunc_setup("RandNC",534,G__LinAlgDict_197_9_4,121,-1,-1,0,2,1,1,0,
"U 'TComplex' - 0 - - U 'TComplex' - 0 - sigmas","/< real/imag cnormal dist. with individ. (means,sigmas)",(void*)NULL,0);
   G__memfunc_setup("RandNC",534,G__LinAlgDict_197_0_5,121,-1,-1,0,2,1,1,0,
"U 'TDSPVector' - 0 - - d - 'Double_t' 0 1 sigma","/< real/imag cnormal dist. with individ. (means,sigma=1)",(void*)NULL,0);
   G__memfunc_setup("RandNC",534,G__LinAlgDict_197_1_5,121,-1,-1,0,2,1,1,0,
"u 'TDSPVector' - 1 - means d - 'Double_t' 0 1 sigma","/< real/imag cnormal dist. with individ. (means,sigma=1)",(void*)NULL,0);
   G__memfunc_setup("RandNC",534,G__LinAlgDict_197_2_5,121,-1,-1,0,2,1,1,0,
"U 'TDSPVector' - 0 - - U 'TDSPVector' - 0 - sigmas","/< real/imag cnormal dist. with individ. (means,sigmas)",(void*)NULL,0);
   G__memfunc_setup("RandPhase",886,G__LinAlgDict_197_3_5,121,-1,-1,0,0,1,1,0,"","/< init as random phasors (uniform phase ...)",(void*)NULL,0);
   G__memfunc_setup("MultRandPhase",1304,G__LinAlgDict_197_4_5,121,-1,-1,0,1,1,1,0,"U 'TDSPVector' - 0 NULL in","/< init with random phase multiplied on an input vector(if NULL use this).  ",(void*)NULL,0);
   G__memfunc_setup("RandNPhase",964,G__LinAlgDict_197_5_5,121,-1,-1,0,2,1,1,0,
"d - 'Double_t' 0 1 variance d - 'Double_t' 0 1 rate","/< init with random normal phases at a special rate",(void*)NULL,0);
   G__memfunc_setup("MultRandNPhase",1382,G__LinAlgDict_197_6_5,121,-1,-1,0,2,1,1,0,
"d - 'Double_t' 0 1 variance d - 'Double_t' 0 1 rate","/< multiply with random phase ",(void*)NULL,0);
   G__memfunc_setup("MultRandNPhase",1382,G__LinAlgDict_197_7_5,121,-1,-1,0,3,1,1,0,
"d - 'Double_t' 0 - variance d - 'Double_t' 0 - rate "
"U 'TDSPVector' - 0 - -","/< init with random phase multiplied on an input vector.  ",(void*)NULL,0);
   G__memfunc_setup("Reverse",732,G__LinAlgDict_197_8_5,121,-1,-1,0,0,1,1,0,"","/< Reverse the order",(void*)NULL,0);
   G__memfunc_setup("RandRayleigh",1210,G__LinAlgDict_197_9_5,121,-1,-1,0,2,1,1,0,
"d - 'Double_t' 0 1 sigma d - 'Double_t' 0 0 phase","/< init with real rayleigh ",(void*)NULL,0);
   G__memfunc_setup("ModulateMe",1005,G__LinAlgDict_197_0_6,121,-1,-1,0,4,1,1,0,
"u 'TComplex' - 0 - - d - 'Double_t' 0 0 burstlen "
"d - 'Double_t' 0 0 burstoff d - 'Double_t' 0 0 phase","/< Modulate the vector (multiply with a frequency)",(void*)NULL,0);
   G__memfunc_setup("Modulate",827,G__LinAlgDict_197_1_6,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,5,1,1,0,
"u 'TComplex' - 0 - - d - 'Double_t' 0 0 burstlen "
"d - 'Double_t' 0 0 burstoff d - 'Double_t' 0 0 phase "
"U 'TDSPVector' - 0 NULL -","/< Modulate the vector (reset phase after each burstlen steps)",(void*)NULL,0);
   G__memfunc_setup("DownSampling",1235,G__LinAlgDict_197_2_6,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,3,1,1,0,
"h - 'UInt_t' 0 - M U 'TDSPVector' - 0 NULL pulse "
"U 'TDSPVector' - 0 NULL output","/< M-fold decimation filter with response \"pulse\"",(void*)NULL,0);
   G__memfunc_setup("UpSampling",1024,G__LinAlgDict_197_3_6,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,5,1,1,0,
"h - 'UInt_t' 0 - K U 'TDSPVector' - 0 NULL pulse "
"U 'TDSPVector' - 0 NULL output h - 'UInt_t' 0 1 iStep "
"h - 'UInt_t' 0 0 iOff","/< K-fold interpolation filter with response \"pulse\" ",(void*)NULL,0);
   G__memfunc_setup("Alias",490,G__LinAlgDict_197_4_6,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,2,1,1,0,
"U 'TDSPVector' - 0 NULL a i - 'Int_t' 0 0 NewLen","/< Creates an Alias to this vector of Length NewLen",(void*)NULL,0);
   G__memfunc_setup("Sum",309,G__LinAlgDict_197_5_6,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,1,1,1,0,"U 'TDSPVector' - 0 NULL weights","/< The Sum ",(void*)NULL,0);
   G__memfunc_setup("Sum2",359,G__LinAlgDict_197_6_6,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"U 'TDSPVector' - 0 NULL weights","/< The Sum of squares abs ",(void*)NULL,0);
   G__memfunc_setup("Prod",405,G__LinAlgDict_197_7_6,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,0,1,1,0,"","/< the product of all components",(void*)NULL,0);
   G__memfunc_setup("ProdReal",793,G__LinAlgDict_197_8_6,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"","/< the product of all components real part",(void*)NULL,0);
   G__memfunc_setup("ProdImag",787,G__LinAlgDict_197_9_6,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"","/< the product of all components imag part",(void*)NULL,0);
   G__memfunc_setup("Norm",412,G__LinAlgDict_197_0_7,100,-1,G__defined_typename("Double_t"),0,2,1,1,0,
"U 'TDSPVector' - 0 NULL weights i - 'Int_t' 0 2 p","/< Calculate the weighted p-Norm (default=2-norm)",(void*)NULL,0);
   G__memfunc_setup("Norm2",462,G__LinAlgDict_197_1_7,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"U 'TDSPVector' - 0 NULL weights","/< Calculate the Squared 2-Norm ",(void*)NULL,0);
   G__memfunc_setup("Energy",618,G__LinAlgDict_197_2_7,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"","/< Calculate the Energy (sampling-rate normalized !)",(void*)NULL,0);
   G__memfunc_setup("Power",525,G__LinAlgDict_197_3_7,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"","/< Calculate the Power",(void*)NULL,0);
   G__memfunc_setup("Mean",385,G__LinAlgDict_197_4_7,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,1,1,1,0,"U 'TDSPVector' - 0 NULL weights","/< Calculate the Mean",(void*)NULL,0);
   G__memfunc_setup("Mean2",435,G__LinAlgDict_197_5_7,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"U 'TDSPVector' - 0 NULL weights","/< Calculate the Mean2",(void*)NULL,0);
   G__memfunc_setup("Variance",809,G__LinAlgDict_197_6_7,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"U 'TDSPVector' - 0 NULL weights","/< Calculate the Variance",(void*)NULL,0);
   G__memfunc_setup("Moment1",673,G__LinAlgDict_197_7_7,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"U 'TDSPVector' - 0 NULL x","/< 1.Moment = 1/norm2(x)*sum_i Abs2(this(i))*Abs(x(i)) (x=NULL-->x=i)",(void*)NULL,0);
   G__memfunc_setup("Moment2",674,G__LinAlgDict_197_8_7,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"U 'TDSPVector' - 0 NULL x","/< 2.Moment = 1/norm2(x)*sum_i Abs2(this(i))*Abs2(x(i)) (x=NULL-->x=i)",(void*)NULL,0);
   G__memfunc_setup("CMoment2",741,G__LinAlgDict_197_9_7,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"U 'TDSPVector' - 0 NULL x","/< 2.CentralMoment = 1/norm2(x)*sum_i Abs2(this(i))*(Abs2(x(i))-xmean) (x=NULL-->x=i)",(void*)NULL,0);
   G__memfunc_setup("Max",294,G__LinAlgDict_197_0_8,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Min",292,G__LinAlgDict_197_1_8,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MaxReal",682,G__LinAlgDict_197_2_8,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"","/< Return the maximum real part",(void*)NULL,0);
   G__memfunc_setup("MinReal",680,G__LinAlgDict_197_3_8,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"","/< Return the minimum real part",(void*)NULL,0);
   G__memfunc_setup("MaxImag",676,G__LinAlgDict_197_4_8,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"","/< Return the maximum imag part",(void*)NULL,0);
   G__memfunc_setup("MinImag",674,G__LinAlgDict_197_5_8,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"","/< Return the minimum imag part",(void*)NULL,0);
   G__memfunc_setup("MaxAbs2",622,G__LinAlgDict_197_6_8,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"","/< Return the maximum squared abs",(void*)NULL,0);
   G__memfunc_setup("MinAbs2",620,G__LinAlgDict_197_7_8,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"","/< Return the minimum squared abs",(void*)NULL,0);
   G__memfunc_setup("MaxAbs",572,G__LinAlgDict_197_8_8,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"","/< Return the maximum abs",(void*)NULL,0);
   G__memfunc_setup("MinAbs",570,G__LinAlgDict_197_9_8,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"","/< Return the minimum abs",(void*)NULL,0);
   G__memfunc_setup("GetPhase",785,G__LinAlgDict_197_0_9,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,1,1,1,0,"U 'TDSPVector' - 0 NULL resul","/< return the phases of the vector in a new vector",(void*)NULL,0);
   G__memfunc_setup("Phase",497,G__LinAlgDict_197_1_9,121,-1,-1,0,0,1,1,0,"","/< set the vector to its phases",(void*)NULL,0);
   G__memfunc_setup("Sqr",310,G__LinAlgDict_197_2_9,121,-1,-1,0,0,1,1,0,"","/< Square the vector-abs : c^* * c",(void*)NULL,0);
   G__memfunc_setup("Abs2",328,G__LinAlgDict_197_3_9,121,-1,-1,0,0,1,1,0,"","/< Square the vector-abs : c^* * c (like sqr)",(void*)NULL,0);
   G__memfunc_setup("Abs",278,G__LinAlgDict_197_4_9,121,-1,-1,0,0,1,1,0,"","/< Absolute value per index of the vector c^t*c",(void*)NULL,0);
   G__memfunc_setup("Sqrt",426,G__LinAlgDict_197_5_9,121,-1,-1,0,0,1,1,0,"","/< Square Root of the Vector",(void*)NULL,0);
   G__memfunc_setup("SqrtReal",814,G__LinAlgDict_197_6_9,121,-1,-1,0,0,1,1,0,"","/< Square Root only on the real part of the Vector",(void*)NULL,0);
   G__memfunc_setup("SqrtImag",808,G__LinAlgDict_197_7_9,121,-1,-1,0,0,1,1,0,"","/< Square Root only on the imaginary part of the Vector",(void*)NULL,0);
   G__memfunc_setup("Exp",301,G__LinAlgDict_197_8_9,121,-1,-1,0,0,1,1,0,"","/< Exp of the Vector",(void*)NULL,0);
   G__memfunc_setup("Cos",293,G__LinAlgDict_197_9_9,121,-1,-1,0,0,1,1,0,"","/< Cosine of the Vector",(void*)NULL,0);
   G__memfunc_setup("Sin",298,G__LinAlgDict_197_0_10,121,-1,-1,0,0,1,1,0,"","/< Sine of the Vector",(void*)NULL,0);
   G__memfunc_setup("Log",290,G__LinAlgDict_197_1_10,121,-1,-1,0,0,1,1,0,"","/< nat. Log of the vector",(void*)NULL,0);
   G__memfunc_setup("Log10",387,G__LinAlgDict_197_2_10,121,-1,-1,0,0,1,1,0,"","/< 10-Log of the vector",(void*)NULL,0);
   G__memfunc_setup("Log2",340,G__LinAlgDict_197_3_10,121,-1,-1,0,0,1,1,0,"","/< 2-Log of the vector",(void*)NULL,0);
   G__memfunc_setup("Normalize",945,G__LinAlgDict_197_4_10,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 1.0 norm","/< Normalize",(void*)NULL,0);
   G__memfunc_setup("Dup",297,G__LinAlgDict_197_5_10,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,0,1,1,0,"","/< Duplicate",(void*)NULL,0);
   G__memfunc_setup("Copy",411,G__LinAlgDict_197_6_10,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,1,1,1,0,"U 'TDSPVector' - 0 - n","/< Copy the Vector to n (=NULL - create a new vector )",(void*)NULL,0);
   G__memfunc_setup("Apply",518,G__LinAlgDict_197_7_10,121,-1,-1,0,1,1,1,0,"Q - 'TComplex (*)(TComplex&)' 0 - fcn","/< Apply a Function on the signal vector",(void*)NULL,0);
   G__memfunc_setup("SetSamplingRate",1523,G__LinAlgDict_197_8_10,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - s",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSamplingRate",1511,G__LinAlgDict_197_9_10,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SamplingRate",1223,G__LinAlgDict_197_0_11,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - s",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Configure",930,G__LinAlgDict_197_1_11,121,-1,-1,0,1,1,1,0,"U 'TDSPVector' - 0 - s","/< Configure the signal on the base on an other signal",(void*)NULL,0);
   G__memfunc_setup("SetXTitle",902,G__LinAlgDict_197_2_11,121,-1,-1,0,1,1,1,0,"C - - 0 - name","/< Set the name of the xtitle",(void*)NULL,0);
   G__memfunc_setup("SetYTitle",903,G__LinAlgDict_197_3_11,121,-1,-1,0,1,1,1,0,"C - - 0 - name","/< Set the name of the ytitle",(void*)NULL,0);
   G__memfunc_setup("OnCodeInc",850,G__LinAlgDict_197_4_11,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"U 'TDSPVector' - 0 - Alphabet","/< Increments this(seen a sequence of complex number) to the next codeword",(void*)NULL,0);
   G__memfunc_setup("OnCodeInc",850,G__LinAlgDict_197_5_11,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"U 'TComplex' - 0 - Alphabet i - 'Int_t' 0 - NumAlphabet","/< Increments this (seen a sequence of complex number) to the next codeword",(void*)NULL,0);
   G__memfunc_setup("OnCodeSet",868,G__LinAlgDict_197_6_11,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"i - 'Int_t' 0 - value U 'TDSPVector' - 0 - al","/< Codes the value in the Vector based on the alphabet \"al\"",(void*)NULL,0);
   G__memfunc_setup("OnCodeSet",868,G__LinAlgDict_197_7_11,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"i - 'Int_t' 0 - value U 'TComplex' - 0 - al "
"i - 'Int_t' 0 - num_al","/< Codes the value in the Vector based on the alphabet \"al\"",(void*)NULL,0);
   G__memfunc_setup("OnCodeGet",856,G__LinAlgDict_197_8_11,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"I - 'Int_t' 0 - value U 'TDSPVector' - 0 - al","/< Decodes the vector based on the alphabet \"al\" to *value",(void*)NULL,0);
   G__memfunc_setup("OnCodeGet",856,G__LinAlgDict_197_9_11,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"I - 'Int_t' 0 - value U 'TComplex' - 0 - al "
"i - 'Int_t' 0 - num_al","/< Decodes the Vector based on the alphabet \"al\" to *value",(void*)NULL,0);
   G__memfunc_setup("DivBy",478,G__LinAlgDict_197_0_12,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,2,1,1,0,
"U 'TDSPVector' - 0 - a U 'TDSPVector' - 0 NULL result",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MultBy",605,G__LinAlgDict_197_1_12,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,2,1,1,0,
"U 'TDSPVector' - 0 - a U 'TDSPVector' - 0 NULL result",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddBy",452,G__LinAlgDict_197_2_12,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,2,1,1,0,
"U 'TDSPVector' - 0 - a U 'TDSPVector' - 0 NULL result",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SubBy",485,G__LinAlgDict_197_3_12,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,2,1,1,0,
"U 'TDSPVector' - 0 - a U 'TDSPVector' - 0 NULL result",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DivBy",478,G__LinAlgDict_197_4_12,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,2,1,1,0,
"u 'TComplex' - 0 - a U 'TDSPVector' - 0 NULL result",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MultBy",605,G__LinAlgDict_197_5_12,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,2,1,1,0,
"u 'TComplex' - 0 - a U 'TDSPVector' - 0 NULL result",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddBy",452,G__LinAlgDict_197_6_12,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,2,1,1,0,
"u 'TComplex' - 0 - a U 'TDSPVector' - 0 NULL result",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SubBy",485,G__LinAlgDict_197_7_12,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,2,1,1,0,
"u 'TComplex' - 0 - a U 'TDSPVector' - 0 NULL result",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Conv",406,G__LinAlgDict_197_8_12,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,4,1,1,0,
"U 'TDSPVector' - 0 - input U 'TDSPVector' - 0 NULL output "
"i - 'Int_t' 0 kTDSPVector_Conv_Defaults opt i - 'Int_t' 0 0 b","/< Convolution ",(void*)NULL,0);
   G__memfunc_setup("DumpParams",1018,G__LinAlgDict_197_9_12,121,-1,-1,0,1,1,1,0,"U 'basic_ostream<char,char_traits<char> >' 'ostream' 0 NULL os",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("FFTShiftMe",912,G__LinAlgDict_197_0_13,121,-1,-1,0,0,1,1,0,"","/< Rearrange after fft / before ifft (moving the zero-freq to the center)",(void*)NULL,0);
   G__memfunc_setup("IFFTShiftMe",985,G__LinAlgDict_197_1_13,121,-1,-1,0,0,1,1,0,"","/< Rearrange after ifft / before fft (moving the zero-freq to the center)",(void*)NULL,0);
   G__memfunc_setup("XCorr",494,G__LinAlgDict_197_2_13,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,2,1,1,0,
"i - 'Int_t' 0 0 max_lags i 'eXCorr_Options' - 0 kXCorrNone o",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XCorr",494,G__LinAlgDict_197_3_13,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,3,1,1,0,
"U 'TDSPVector' - 0 - i2 i - 'Int_t' 0 0 max_lags "
"i 'eXCorr_Options' - 0 kXCorrNone o",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XCorr",494,G__LinAlgDict_197_4_13,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,4,1,1,0,
"U 'TDSPVector' - 0 - i2 U 'TDSPVector' - 0 - result "
"i - 'Int_t' 0 0 max_lags i 'eXCorr_Options' - 0 kXCorrNone o",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Graph",498,G__LinAlgDict_197_5_13,85,G__get_linked_tagnum(&G__LinAlgDictLN_TGraph),-1,0,4,1,1,0,
"C - 'Option_t' 10 \"complex\" - U 'TGraph' - 0 NULL in "
"d - 'Double_t' 0 1.0 dx d - 'Double_t' 0 0.0 xoff",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Draw",398,G__LinAlgDict_197_6_13,121,-1,-1,0,3,1,1,0,
"C - 'Option_t' 10 \"ac\" - d - 'Double_t' 0 1.0 dx "
"d - 'Double_t' 0 0.0 xoff","*MENU*",(void*)NULL,1);
   G__memfunc_setup("FillAbs",669,G__LinAlgDict_197_7_13,85,G__get_linked_tagnum(&G__LinAlgDictLN_TH1),-1,0,1,1,1,0,"U 'TH1' - 0 NULL h","*MENU*",(void*)NULL,0);
   G__memfunc_setup("FillAbs2",719,G__LinAlgDict_197_8_13,85,G__get_linked_tagnum(&G__LinAlgDictLN_TH1),-1,0,1,1,1,0,"U 'TH1' - 0 NULL h","*MENU*",(void*)NULL,0);
   G__memfunc_setup("FillPhase",888,G__LinAlgDict_197_9_13,85,G__get_linked_tagnum(&G__LinAlgDictLN_TH1),-1,0,1,1,1,0,"U 'TH1' - 0 NULL h","*MENU*",(void*)NULL,0);
   G__memfunc_setup("FillReal",779,G__LinAlgDict_197_0_14,85,G__get_linked_tagnum(&G__LinAlgDictLN_TH1),-1,0,1,1,1,0,"U 'TH1' - 0 NULL h","*MENU*",(void*)NULL,0);
   G__memfunc_setup("FillImag",773,G__LinAlgDict_197_1_14,85,G__get_linked_tagnum(&G__LinAlgDictLN_TH1),-1,0,1,1,1,0,"U 'TH1' - 0 NULL h","*MENU*",(void*)NULL,0);
   G__memfunc_setup("Fill",391,G__LinAlgDict_197_2_14,85,G__get_linked_tagnum(&G__LinAlgDictLN_TH2),-1,0,1,1,1,0,"U 'TH2' - 0 NULL h","*MENU*",(void*)NULL,0);
   G__memfunc_setup("Print",525,G__LinAlgDict_197_3_14,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Input",528,G__LinAlgDict_197_4_14,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__LinAlgDict_197_5_14,117,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,1,1,1,1,0,"u 'TmxArray' - 1 - m",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__LinAlgDict_197_6_14,117,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,1,1,1,1,0,"d - 'Double_t' 10 - x",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__LinAlgDict_197_7_14,117,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,1,1,1,1,0,"u 'TDSPVector' - 1 - x",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__LinAlgDict_197_8_14,117,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,1,1,1,1,0,"u 'TComplex' - 11 - c",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator&=",975,G__LinAlgDict_197_9_14,117,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,1,1,1,1,0,"d - 'Double_t' 11 - d","/Add a value into the Vector and move the cursor",(void*)NULL,0);
   G__memfunc_setup("operator/=",984,G__LinAlgDict_197_0_15,117,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,1,1,1,1,0,"u 'TComplex' - 11 - d",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator/=",984,G__LinAlgDict_197_1_15,117,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,1,1,1,1,0,"d - 'Double_t' 11 - d",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator/=",984,G__LinAlgDict_197_2_15,117,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,1,1,1,1,0,"i - 'Int_t' 11 - d",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__LinAlgDict_197_3_15,117,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,1,1,1,1,0,"u 'TComplex' - 11 - d",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__LinAlgDict_197_4_15,117,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,1,1,1,1,0,"d - 'Double_t' 11 - d",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__LinAlgDict_197_5_15,117,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,1,1,1,1,0,"i - 'Int_t' 11 - d",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__LinAlgDict_197_6_15,117,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,1,1,1,1,0,"u 'TComplex' - 11 - d",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__LinAlgDict_197_7_15,117,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,1,1,1,1,0,"d - 'Double_t' 11 - d",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__LinAlgDict_197_8_15,117,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,1,1,1,1,0,"i - 'Int_t' 11 - d",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator-=",982,G__LinAlgDict_197_9_15,117,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,1,1,1,1,0,"u 'TComplex' - 11 - d",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator-=",982,G__LinAlgDict_197_0_16,117,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,1,1,1,1,0,"d - 'Double_t' 11 - d",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator-=",982,G__LinAlgDict_197_1_16,117,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,1,1,1,1,0,"i - 'Int_t' 11 - d",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__LinAlgDict_197_2_16,117,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,1,1,1,1,0,"u 'TDSPVector' - 11 - s",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator-=",982,G__LinAlgDict_197_3_16,117,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,1,1,1,1,0,"u 'TDSPVector' - 11 - s",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__LinAlgDict_197_4_16,117,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,1,1,1,1,0,"u 'TDSPVector' - 11 - s",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__LinAlgDict_197_5_16,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,1,1,1,1,0,"i - 'Int_t' 0 - index",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator[]",1060,G__LinAlgDict_197_6_16,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,1,1,1,1,0,"i - 'Int_t' 0 - index",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Load",384,G__LinAlgDict_197_7_16,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,2,3,1,0,
"U 'TFile' - 0 - f C - - 0 - key","/< Load a Vector from a file/key",(void*)NULL,0);
   G__memfunc_setup("Load",384,G__LinAlgDict_197_8_16,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,2,3,1,0,
"C - - 0 - fname C - - 0 - key","/< Load a Vector from a file/key",(void*)NULL,0);
   G__memfunc_setup("Save",399,G__LinAlgDict_197_9_16,121,-1,-1,0,2,1,1,0,
"U 'TFile' - 0 - f C - - 0 - key","/< Save a Vector into a file/key",(void*)NULL,0);
   G__memfunc_setup("Save",399,G__LinAlgDict_197_0_17,121,-1,-1,0,3,1,1,0,
"C - - 0 - fname C - - 0 - key "
"C - - 0 \"RECREATE\" opt","/< Save a Vector into a file/key",(void*)NULL,0);
   G__memfunc_setup("TDSPVector",942,G__LinAlgDict_197_1_17,105,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,1,1,1,0,"i - 'Int_t' 0 0 len",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ValuesPerLine",1311,G__LinAlgDict_197_3_17,121,-1,-1,0,1,3,1,0,"h - 'UInt_t' 0 - p","/How many Values to Print per line (using cout...)",(void*)NULL,0);
   G__memfunc_setup("Class",502,G__LinAlgDict_197_4_17,85,G__get_linked_tagnum(&G__LinAlgDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__LinAlgDict_197_5_17,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__LinAlgDict_197_6_17,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__LinAlgDict_197_7_17,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__LinAlgDict_197_8_17,85,G__get_linked_tagnum(&G__LinAlgDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__LinAlgDict_197_9_17,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__LinAlgDict_197_0_18,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__LinAlgDict_197_1_18,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__LinAlgDict_197_2_18,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__LinAlgDict_197_3_18,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__LinAlgDict_197_4_18,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__LinAlgDict_197_5_18,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPVector",942,G__LinAlgDict_197_6_18,(int)('i'),G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,1,1,1,0,"u 'TDSPVector' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPVector",1068,G__LinAlgDict_197_7_18,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPMatrix(void) {
   /* TDSPMatrix */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix));
   G__memfunc_setup("TDSPMatrix",944,G__LinAlgDict_199_0_0,105,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDSPMatrix",944,G__LinAlgDict_199_1_0,105,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix),-1,0,2,1,1,0,
"i - 'Int_t' 0 - rows i - 'Int_t' 0 - cols",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Swap",411,G__LinAlgDict_199_3_0,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,1,4,1,1,0,
"i - 'Int_t' 0 - i i - 'Int_t' 0 - j "
"i - 'Int_t' 0 - m i - 'Int_t' 0 - n","/< Swap two elements and return the first indexed (after exchanging!)",(void*)NULL,0);
   G__memfunc_setup("SetSize",711,G__LinAlgDict_199_4_0,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 - rows i - 'Int_t' 0 - cols",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetRows",715,G__LinAlgDict_199_5_0,104,-1,G__defined_typename("UInt_t"),0,0,1,1,8,"","/<Get the number rows in the matrix",(void*)NULL,0);
   G__memfunc_setup("GetCols",689,G__LinAlgDict_199_6_0,104,-1,G__defined_typename("UInt_t"),0,0,1,1,8,"","/<Get the number columns in the matrix",(void*)NULL,0);
   G__memfunc_setup("SetRows",727,G__LinAlgDict_199_7_0,121,-1,-1,0,2,1,1,0,
"h - 'UInt_t' 0 - - g - 'Bool_t' 0 kFALSE savedata","/<Set the number of rows in the matrix",(void*)NULL,0);
   G__memfunc_setup("SetCols",701,G__LinAlgDict_199_8_0,121,-1,-1,0,2,1,1,0,
"h - 'UInt_t' 0 - - g - 'Bool_t' 0 kFALSE savedata","/<Set the number of cols in the matrix",(void*)NULL,0);
   G__memfunc_setup("SetLen",587,G__LinAlgDict_199_9_0,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 - num g - 'Bool_t' 0 kFALSE savedata","/< Set the size",(void*)NULL,1);
   G__memfunc_setup("Clo",286,G__LinAlgDict_199_0_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Chi",276,G__LinAlgDict_199_1_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Rlo",301,G__LinAlgDict_199_2_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Rhi",291,G__LinAlgDict_199_3_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dup",297,G__LinAlgDict_199_4_1,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix),-1,0,0,1,1,0,"","/<Duplicate",(void*)NULL,0);
   G__memfunc_setup("Copy",411,G__LinAlgDict_199_5_1,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix),-1,0,1,1,1,0,"U 'TDSPMatrix' - 0 - n","/<Copy the Matrix to n (=NULL - create a new Matrix )",(void*)NULL,0);
   G__memfunc_setup("Apply",518,G__LinAlgDict_199_6_1,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,3,1,1,0,
"U 'TDSPVector' - 0 - inp U 'TDSPVector' - 0 NULL out "
"i 'eMatrixApplyMode' - 0 kMatrixApplyReal m",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("RightApply",1028,G__LinAlgDict_199_7_1,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,2,1,1,0,
"U 'TDSPVector' - 0 - - U 'TDSPVector' - 0 NULL out","/< A.RightApply(B,C) : C=A*B",(void*)NULL,0);
   G__memfunc_setup("RightApply",1028,G__LinAlgDict_199_8_1,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix),-1,0,2,1,1,0,
"U 'TDSPMatrix' - 0 - - U 'TDSPMatrix' - 0 NULL out","/< A.RightApply(B,C) : C=A*B",(void*)NULL,0);
   G__memfunc_setup("LeftApply",913,G__LinAlgDict_199_9_1,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,2,1,1,0,
"U 'TDSPVector' - 0 - - U 'TDSPVector' - 0 NULL out","/< A.LeftApply(B,C) : C=B*A",(void*)NULL,0);
   G__memfunc_setup("LeftApply",913,G__LinAlgDict_199_0_2,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix),-1,0,2,1,1,0,
"U 'TDSPMatrix' - 0 - inp U 'TDSPMatrix' - 0 NULL out","/< A.LeftApply(B,C) : C=B*A",(void*)NULL,0);
   G__memfunc_setup("AdjointRightApply",1741,G__LinAlgDict_199_1_2,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,2,1,1,0,
"U 'TDSPVector' - 0 - - U 'TDSPVector' - 0 NULL out","/<A.AdjointRightApply(B,C) : C=A^* *B",(void*)NULL,0);
   G__memfunc_setup("AdjointRightApply",1741,G__LinAlgDict_199_2_2,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix),-1,0,2,1,1,0,
"U 'TDSPMatrix' - 0 - - U 'TDSPMatrix' - 0 NULL out","/<A.AdjointRightApply(B,C) : C=A^* *B",(void*)NULL,0);
   G__memfunc_setup("AdjointLeftApply",1626,G__LinAlgDict_199_3_2,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,2,1,1,0,
"U 'TDSPVector' - 0 - - U 'TDSPVector' - 0 NULL out","/<A.AdjointLeftApply(B,C) : C=B*A^*",(void*)NULL,0);
   G__memfunc_setup("AdjointLeftApply",1626,G__LinAlgDict_199_4_2,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix),-1,0,2,1,1,0,
"U 'TDSPMatrix' - 0 - - U 'TDSPMatrix' - 0 NULL out","/<A.AdjointLeftApply(B,C) : C=B*A^*",(void*)NULL,0);
   G__memfunc_setup("TransposedRightApply",2087,G__LinAlgDict_199_5_2,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,2,1,1,0,
"U 'TDSPVector' - 0 - - U 'TDSPVector' - 0 NULL out","/<A.TransposedRightApply(B,C) : C=A^T*B",(void*)NULL,0);
   G__memfunc_setup("TransposedLeftApply",1972,G__LinAlgDict_199_6_2,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,2,1,1,0,
"U 'TDSPVector' - 0 - - U 'TDSPVector' - 0 NULL out","/<A.TransposedRightApply(B,C) : C=A^T*B",(void*)NULL,0);
   G__memfunc_setup("Transform",956,G__LinAlgDict_199_7_2,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix),-1,0,2,1,1,0,
"U 'TDSPMatrix' - 0 - H U 'TDSPMatrix' - 0 NULL result","/<Transform the Matrix A=this : result=Transform(H)=HAH^*",(void*)NULL,0);
   G__memfunc_setup("AdjointTransform",1669,G__LinAlgDict_199_8_2,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix),-1,0,2,1,1,0,
"U 'TDSPMatrix' - 0 - H U 'TDSPMatrix' - 0 NULL result","/<result=AdjointTransform(H) = H^* A H",(void*)NULL,0);
   G__memfunc_setup("Transposed",1059,G__LinAlgDict_199_9_2,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix),-1,0,1,1,1,0,"U 'TDSPMatrix' - 0 NULL r","/<Creates the Transposed Matrix into r (r=NULL, create new matrix)",(void*)NULL,0);
   G__memfunc_setup("TransposeMe",1137,G__LinAlgDict_199_0_3,121,-1,-1,0,0,1,1,0,"","/< Transpose me ",(void*)NULL,0);
   G__memfunc_setup("Adjoint",713,G__LinAlgDict_199_1_3,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix),-1,0,1,1,1,0,"U 'TDSPMatrix' - 0 NULL r","/<Creates the Adjoint Matrix into r (r=NULL, create new matrix)",(void*)NULL,0);
   G__memfunc_setup("Trace",495,G__LinAlgDict_199_2_3,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,0,1,1,0,"","/< returns the trace of the matrix",(void*)NULL,0);
   G__memfunc_setup("Trace2",545,G__LinAlgDict_199_3_3,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"","/< returns the sum of abs-squared diagonal-entries of the matrix ",(void*)NULL,0);
   G__memfunc_setup("DiagZero",789,G__LinAlgDict_199_4_3,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"","/<Test for 1 Zero on the Diagonal",(void*)NULL,0);
   G__memfunc_setup("DiagZeros",904,G__LinAlgDict_199_5_3,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"","/<Test for Zeros on the complete Diagonal",(void*)NULL,0);
   G__memfunc_setup("IsDiag",561,G__LinAlgDict_199_6_3,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"","/<Test for a Diagonal Matrix",(void*)NULL,0);
   G__memfunc_setup("IsSquare",813,G__LinAlgDict_199_7_3,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"","/<Is this a Square Matrix ?",(void*)NULL,0);
   G__memfunc_setup("IsHermitian",1117,G__LinAlgDict_199_8_3,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"","/<Test for Hermitian Matrix",(void*)NULL,0);
   G__memfunc_setup("ReversedColumns",1569,G__LinAlgDict_199_9_3,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix),-1,0,1,1,1,0,"U 'TDSPMatrix' - 0 NULL r","/< return the column-reversed matrix ",(void*)NULL,0);
   G__memfunc_setup("ReversedRows",1259,G__LinAlgDict_199_0_4,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix),-1,0,1,1,1,0,"U 'TDSPMatrix' - 0 NULL r","/< return the row-reversed matrix",(void*)NULL,0);
   G__memfunc_setup("ReverseColumns",1469,G__LinAlgDict_199_1_4,121,-1,-1,0,0,1,1,0,"","/< reverse my columns",(void*)NULL,0);
   G__memfunc_setup("ReverseRows",1159,G__LinAlgDict_199_2_4,121,-1,-1,0,0,1,1,0,"","/< reverse my rows",(void*)NULL,0);
   G__memfunc_setup("GetDiag",661,G__LinAlgDict_199_3_4,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,1,1,1,0,"U 'TDSPVector' - 0 NULL a","/<Return the diagonal as a vector",(void*)NULL,0);
   G__memfunc_setup("SetDiag",673,G__LinAlgDict_199_4_4,121,-1,-1,0,1,1,1,0,"U 'TDSPVector' - 0 - a","/<Set the diagonal to the vector",(void*)NULL,0);
   G__memfunc_setup("SetDiag",673,G__LinAlgDict_199_5_4,121,-1,-1,0,1,1,1,0,"u 'TComplex' - 0 - a","/< Set all diagonal elements to a",(void*)NULL,0);
   G__memfunc_setup("SetNonDiag",972,G__LinAlgDict_199_6_4,121,-1,-1,0,1,1,1,0,"u 'TComplex' - 0 - a","/< Set all non-diagonal elements to a",(void*)NULL,0);
   G__memfunc_setup("AddDiag",638,G__LinAlgDict_199_7_4,121,-1,-1,0,1,1,1,0,"u 'TComplex' - 0 - a","/< Add a onto the diagonal elements of the matrix",(void*)NULL,0);
   G__memfunc_setup("AddDiag",638,G__LinAlgDict_199_8_4,121,-1,-1,0,1,1,1,0,"U 'TDSPVector' - 0 - a","/< Add the vector onto the diagonal elements of the matrix",(void*)NULL,0);
   G__memfunc_setup("MultDiag",791,G__LinAlgDict_199_9_4,121,-1,-1,0,1,1,1,0,"u 'TComplex' - 0 - a","/< Multiplies a onto the diagonal elements of the matrix",(void*)NULL,0);
   G__memfunc_setup("MultDiag",791,G__LinAlgDict_199_0_5,121,-1,-1,0,1,1,1,0,"U 'TDSPVector' - 0 - a","/< Multiplies the vector onto the diagonal elements of the matrix",(void*)NULL,0);
   G__memfunc_setup("Redundancy",1037,G__LinAlgDict_199_1_5,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SubMatrix",927,G__LinAlgDict_199_2_5,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix),-1,0,5,1,1,0,
"i - 'Int_t' 0 - atRow i - 'Int_t' 0 - atCol "
"i - 'Int_t' 0 - m i - 'Int_t' 0 - n "
"U 'TDSPMatrix' - 0 NULL out","/< extracts the mxn submatrix at (atRow,atCol)",(void*)NULL,0);
   G__memfunc_setup("TransposedSubMatrix",1986,G__LinAlgDict_199_3_5,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix),-1,0,5,1,1,0,
"i - 'Int_t' 0 - atRow i - 'Int_t' 0 - atCol "
"i - 'Int_t' 0 - m i - 'Int_t' 0 - n "
"U 'TDSPMatrix' - 0 NULL out","/< extracts the mxn submatrix at (atRow,atCol) and tranpose it",(void*)NULL,0);
   G__memfunc_setup("MoveVec",693,G__LinAlgDict_199_4_5,85,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,2,1,1,0,
"i - 'Int_t' 0 - m i - 'Int_t' 0 - n","/< Move the pointer in the data at (m,n)",(void*)NULL,0);
   G__memfunc_setup("GetColumn",910,G__LinAlgDict_199_5_5,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,2,1,1,0,
"i - 'Int_t' 0 0 c U 'TDSPVector' - 0 NULL out","/<extract column \"c\" to a vector",(void*)NULL,0);
   G__memfunc_setup("GetRow",600,G__LinAlgDict_199_6_5,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,2,1,1,0,
"i - 'Int_t' 0 0 r U 'TDSPVector' - 0 NULL out","/<extract row \"r\" to a vector",(void*)NULL,0);
   G__memfunc_setup("SetColumn",922,G__LinAlgDict_199_7_5,121,-1,-1,0,4,1,1,0,
"h - 'UInt_t' 0 - c U 'TDSPVector' - 0 - in "
"h - 'UInt_t' 0 0 ifrom h - 'UInt_t' 0 0 ito","/<Set column \"c\" from a vector content (ifrom:ito)",(void*)NULL,0);
   G__memfunc_setup("SetRow",612,G__LinAlgDict_199_8_5,121,-1,-1,0,4,1,1,0,
"h - 'UInt_t' 0 - r U 'TDSPVector' - 0 - in "
"h - 'UInt_t' 0 0 ifrom h - 'UInt_t' 0 0 ito","/<Set row \"r\" from a vector content (ifrom:ito)",(void*)NULL,0);
   G__memfunc_setup("RowConvolute",1271,G__LinAlgDict_199_9_5,121,-1,-1,0,4,1,1,0,
"U 'TComplex' - 0 - inp U 'TComplex' - 0 - out "
"i - 'Int_t' 0 0 N g - 'Bool_t' 0 kTRUE cyclic","/< Low-Level-RowConvolution of inp to out by this maximal N elements (cyclic?)",(void*)NULL,0);
   G__memfunc_setup("RowConvolute",1271,G__LinAlgDict_199_0_6,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,4,1,1,0,
"U 'TDSPVector' - 0 - inp U 'TDSPVector' - 0 NULL out "
"g - 'Bool_t' 0 kTRUE cyclic g - 'Bool_t' 0 kTRUE zerosbefore","/<Convolutes \"inp\" with the rows of \"this\" to \"out\" ",(void*)NULL,0);
   G__memfunc_setup("Draw",398,G__LinAlgDict_199_1_6,85,G__get_linked_tagnum(&G__LinAlgDictLN_TH2),-1,0,6,1,1,0,
"C - 'Option_t' 10 \"hist surf4\" option d - 'Double_t' 0 1 dx "
"d - 'Double_t' 0 0 xoff d - 'Double_t' 0 1 dy "
"d - 'Double_t' 0 0 yoff U 'TH2' - 0 NULL h",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetZTitle",904,G__LinAlgDict_199_2_6,121,-1,-1,0,1,1,1,0,"C - - 0 - name","/< Set the name of the ztitle",(void*)NULL,0);
   G__memfunc_setup("FFTShiftMe",912,G__LinAlgDict_199_3_6,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - dim","/< Rearrange rows(dim=1) cols(dim=2) after an fft operation",(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__LinAlgDict_199_4_6,117,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix),-1,1,1,1,1,0,"u 'TmxArray' - 1 - m",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__LinAlgDict_199_5_6,117,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix),-1,1,1,1,1,0,"u 'TDSPMatrix' - 1 - x",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Print",525,G__LinAlgDict_199_6_6,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Input",528,G__LinAlgDict_199_7_6,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Unit",416,G__LinAlgDict_199_8_6,121,-1,-1,0,1,1,1,0,"u 'TComplex' - 0 1.0 diag","/<Unit/Kronecker-Delta Matrix",(void*)NULL,0);
   G__memfunc_setup("Delta",490,G__LinAlgDict_199_9_6,121,-1,-1,0,1,1,1,0,"u 'TComplex' - 0 1.0 diag","/<Unit/Kronecker-Delta Matrix",(void*)NULL,0);
   G__memfunc_setup("Fourier",732,G__LinAlgDict_199_0_7,121,-1,-1,0,0,1,1,0,"","/<Init the Matrix with a Fourier-Matrix",(void*)NULL,0);
   G__memfunc_setup("Hilbert",714,G__LinAlgDict_199_1_7,121,-1,-1,0,0,1,1,0,"","/<Init the Matrix with a Hilbert-Matrix",(void*)NULL,0);
   G__memfunc_setup("Element",714,G__LinAlgDict_199_2_7,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,1,2,1,1,0,
"i - 'Int_t' 0 - i i - 'Int_t' 0 - j",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__LinAlgDict_199_3_7,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,1,2,1,1,0,
"h - 'UInt_t' 0 - row h - 'UInt_t' 0 - col",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("LUDecompose",1088,G__LinAlgDict_199_4_7,121,-1,-1,0,2,1,1,0,
"u 'TArrayI' - 1 - Index i - 'Int_t' 1 - d",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("LUBacksubst",1091,G__LinAlgDict_199_5_7,121,-1,-1,0,2,1,1,0,
"u 'TArrayI' - 1 - Index u 'TDSPVector' - 1 - B",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("LUBacksubst",1091,G__LinAlgDict_199_6_7,121,-1,-1,0,2,1,1,0,
"u 'TArrayI' - 1 - Index u 'TDSPMatrix' - 1 - B",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("LUSolveLinear",1285,G__LinAlgDict_199_7_7,121,-1,-1,0,1,1,1,0,"u 'TDSPVector' - 1 - B","/<Solve the linear equation system A*x=b,  The result x overwrites b, (this) is destroyed !!",(void*)NULL,0);
   G__memfunc_setup("LUSolveLinear",1285,G__LinAlgDict_199_8_7,121,-1,-1,0,1,1,1,0,"u 'TDSPMatrix' - 1 - B","/<Solve the linear equation system (this) * X = B, X = A.Inverse * B  is returned in B,(this) is destroyed !!",(void*)NULL,0);
   G__memfunc_setup("Inverse",732,G__LinAlgDict_199_9_7,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix),-1,0,1,1,1,0,"U 'TDSPMatrix' - 0 NULL result","/< Inverse Matrix",(void*)NULL,0);
   G__memfunc_setup("Det",285,G__LinAlgDict_199_0_8,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,0,1,1,0,"","/< Determinant",(void*)NULL,0);
   G__memfunc_setup("PseudoInverse",1356,G__LinAlgDict_199_1_8,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix),-1,0,1,1,1,0,"U 'TDSPMatrix' - 0 NULL result",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SVD",237,G__LinAlgDict_199_2_8,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,3,1,1,0,
"U 'TDSPVector' - 0 NULL S U 'TDSPMatrix' - 0 NULL U "
"U 'TDSPMatrix' - 0 NULL VStar","/< does USV^* = (this) - the svd of this matrix",(void*)NULL,0);
   G__memfunc_setup("Class",502,G__LinAlgDict_199_3_8,85,G__get_linked_tagnum(&G__LinAlgDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__LinAlgDict_199_4_8,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__LinAlgDict_199_5_8,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__LinAlgDict_199_6_8,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__LinAlgDict_199_7_8,85,G__get_linked_tagnum(&G__LinAlgDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__LinAlgDict_199_8_8,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__LinAlgDict_199_9_8,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__LinAlgDict_199_0_9,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__LinAlgDict_199_1_9,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__LinAlgDict_199_2_9,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__LinAlgDict_199_3_9,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__LinAlgDict_199_4_9,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPMatrix",944,G__LinAlgDict_199_5_9,(int)('i'),G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix),-1,0,1,1,1,0,"u 'TDSPMatrix' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPMatrix",1070,G__LinAlgDict_199_6_9,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPBlockOperation(void) {
   /* TDSPBlockOperation */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LinAlgDictLN_TDSPBlockOperation));
   G__memfunc_setup("GetBlockLen",1066,G__LinAlgDict_200_2_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("TrimBlock",903,G__LinAlgDict_200_3_0,104,-1,G__defined_typename("UInt_t"),0,1,1,1,0,"h - 'UInt_t' 0 - l","/< Trim a blocklen to the desired len",(void*)NULL,1);
   G__memfunc_setup("Sum",309,G__LinAlgDict_200_4_0,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,3,3,1,0,
"i - 'Int_t' 0 - - U 'TDSPVector' - 0 - in "
"U 'TDSPVector' - 0 NULL result",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Sum",309,G__LinAlgDict_200_5_0,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,2,1,1,0,
"U 'TDSPVector' - 0 - in U 'TDSPVector' - 0 NULL result",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SumDiff",686,G__LinAlgDict_200_6_0,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,5,3,1,0,
"i - 'Int_t' 0 - - U 'TDSPVector' - 0 - in1 "
"U 'TDSPVector' - 0 - in2 U 'TDSPVector' - 0 NULL result "
"u 'TComplex' - 0 1 scaler","/< sum of the differences",(void*)NULL,0);
   G__memfunc_setup("SumDiff",686,G__LinAlgDict_200_7_0,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,4,1,1,0,
"U 'TDSPVector' - 0 - in1 U 'TDSPVector' - 0 - in2 "
"U 'TDSPVector' - 0 NULL result u 'TComplex' - 0 1 scaler","/< sum of the differences",(void*)NULL,0);
   G__memfunc_setup("MeanDiff",762,G__LinAlgDict_200_8_0,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,5,3,1,0,
"i - 'Int_t' 0 - - U 'TDSPVector' - 0 - in1 "
"U 'TDSPVector' - 0 - in2 U 'TDSPVector' - 0 NULL result "
"u 'TComplex' - 0 1 scaler","/< mean of the differences",(void*)NULL,0);
   G__memfunc_setup("MeanDiff",762,G__LinAlgDict_200_9_0,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,4,1,1,0,
"U 'TDSPVector' - 0 - in1 U 'TDSPVector' - 0 - in2 "
"U 'TDSPVector' - 0 NULL result u 'TComplex' - 0 1 scaler","/< mean of the differences",(void*)NULL,0);
   G__memfunc_setup("Sum2Diff",736,G__LinAlgDict_200_0_1,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,5,3,1,0,
"i - 'Int_t' 0 - - U 'TDSPVector' - 0 - in1 "
"U 'TDSPVector' - 0 - in2 U 'TDSPVector' - 0 NULL result "
"u 'TComplex' - 0 1 scaler",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Sum2Diff",736,G__LinAlgDict_200_1_1,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,4,1,1,0,
"U 'TDSPVector' - 0 - in1 U 'TDSPVector' - 0 - in2 "
"U 'TDSPVector' - 0 NULL result u 'TComplex' - 0 1 scaler",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Mean2Diff",812,G__LinAlgDict_200_2_1,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,5,3,1,0,
"i - 'Int_t' 0 - - U 'TDSPVector' - 0 - in1 "
"U 'TDSPVector' - 0 - in2 U 'TDSPVector' - 0 NULL result "
"u 'TComplex' - 0 1 scaler","/< mean of the differences",(void*)NULL,0);
   G__memfunc_setup("Mean2Diff",812,G__LinAlgDict_200_3_1,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,4,1,1,0,
"U 'TDSPVector' - 0 - in1 U 'TDSPVector' - 0 - in2 "
"U 'TDSPVector' - 0 NULL result u 'TComplex' - 0 1 scaler","/< mean of the differences",(void*)NULL,0);
   G__memfunc_setup("Mean",385,G__LinAlgDict_200_4_1,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,3,3,1,0,
"i - 'Int_t' 0 - - U 'TDSPVector' - 0 - in "
"U 'TDSPVector' - 0 NULL result",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Mean",385,G__LinAlgDict_200_5_1,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,2,1,1,0,
"U 'TDSPVector' - 0 - in U 'TDSPVector' - 0 NULL result",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MeanAbs2",713,G__LinAlgDict_200_6_1,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,3,3,1,0,
"i - 'Int_t' 0 - - U 'TDSPVector' - 0 - in "
"U 'TDSPVector' - 0 NULL result",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MeanAbs2",713,G__LinAlgDict_200_7_1,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,2,1,1,0,
"U 'TDSPVector' - 0 - in U 'TDSPVector' - 0 NULL result",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("I_MeanAbs2",881,G__LinAlgDict_200_8_1,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,3,3,1,0,
"i - 'Int_t' 0 - - U 'TDSPVector' - 0 - in "
"U 'TDSPVector' - 0 NULL result",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("I_MeanAbs2",881,G__LinAlgDict_200_9_1,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,2,1,1,0,
"U 'TDSPVector' - 0 - in U 'TDSPVector' - 0 NULL result",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MeanAbs",663,G__LinAlgDict_200_0_2,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,3,3,1,0,
"i - 'Int_t' 0 - - U 'TDSPVector' - 0 - in "
"U 'TDSPVector' - 0 NULL result",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MeanAbs",663,G__LinAlgDict_200_1_2,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,2,1,1,0,
"U 'TDSPVector' - 0 - in U 'TDSPVector' - 0 NULL result",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("I_MeanAbs",831,G__LinAlgDict_200_2_2,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,3,3,1,0,
"i - 'Int_t' 0 - - U 'TDSPVector' - 0 - in "
"U 'TDSPVector' - 0 NULL result",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("I_MeanAbs",831,G__LinAlgDict_200_3_2,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,2,1,1,0,
"U 'TDSPVector' - 0 - in U 'TDSPVector' - 0 NULL result",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MaxAbs2",622,G__LinAlgDict_200_4_2,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,3,3,1,0,
"i - 'Int_t' 0 - - U 'TDSPVector' - 0 - in "
"U 'TDSPVector' - 0 NULL result",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MaxAbs2",622,G__LinAlgDict_200_5_2,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,2,1,1,0,
"U 'TDSPVector' - 0 - in U 'TDSPVector' - 0 NULL result",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("I_MaxAbs2",790,G__LinAlgDict_200_6_2,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,3,3,1,0,
"i - 'Int_t' 0 - - U 'TDSPVector' - 0 - in "
"U 'TDSPVector' - 0 NULL result",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("I_MaxAbs2",790,G__LinAlgDict_200_7_2,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,2,1,1,0,
"U 'TDSPVector' - 0 - in U 'TDSPVector' - 0 NULL result",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MinAbs2",620,G__LinAlgDict_200_8_2,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,3,3,1,0,
"i - 'Int_t' 0 - - U 'TDSPVector' - 0 - in "
"U 'TDSPVector' - 0 NULL result",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MinAbs2",620,G__LinAlgDict_200_9_2,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,2,1,1,0,
"U 'TDSPVector' - 0 - in U 'TDSPVector' - 0 NULL result",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("I_MinAbs2",788,G__LinAlgDict_200_0_3,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,3,3,1,0,
"i - 'Int_t' 0 - - U 'TDSPVector' - 0 - in "
"U 'TDSPVector' - 0 NULL result",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("I_MinAbs2",788,G__LinAlgDict_200_1_3,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,2,1,1,0,
"U 'TDSPVector' - 0 - in U 'TDSPVector' - 0 NULL result",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MaxAbs",572,G__LinAlgDict_200_2_3,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,3,3,1,0,
"i - 'Int_t' 0 - - U 'TDSPVector' - 0 - in "
"U 'TDSPVector' - 0 NULL result",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MaxAbs",572,G__LinAlgDict_200_3_3,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,2,1,1,0,
"U 'TDSPVector' - 0 - in U 'TDSPVector' - 0 NULL result",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("I_MaxAbs",740,G__LinAlgDict_200_4_3,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,3,3,1,0,
"i - 'Int_t' 0 - - U 'TDSPVector' - 0 - in "
"U 'TDSPVector' - 0 NULL result",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("I_MaxAbs",740,G__LinAlgDict_200_5_3,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,2,1,1,0,
"U 'TDSPVector' - 0 - in U 'TDSPVector' - 0 NULL result",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MinAbs",570,G__LinAlgDict_200_6_3,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,3,3,1,0,
"i - 'Int_t' 0 - - U 'TDSPVector' - 0 - in "
"U 'TDSPVector' - 0 NULL result",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MinAbs",570,G__LinAlgDict_200_7_3,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,2,1,1,0,
"U 'TDSPVector' - 0 - in U 'TDSPVector' - 0 NULL result",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("I_MinAbs",738,G__LinAlgDict_200_8_3,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,3,3,1,0,
"i - 'Int_t' 0 - - U 'TDSPVector' - 0 - in "
"U 'TDSPVector' - 0 NULL result",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("I_MinAbs",738,G__LinAlgDict_200_9_3,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,2,1,1,0,
"U 'TDSPVector' - 0 - in U 'TDSPVector' - 0 NULL result",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MeanPower",910,G__LinAlgDict_200_0_4,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,3,3,1,0,
"i - 'Int_t' 0 - - U 'TDSPVector' - 0 - in "
"U 'TDSPVector' - 0 NULL result",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MeanPower",910,G__LinAlgDict_200_1_4,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,2,1,1,0,
"U 'TDSPVector' - 0 - in U 'TDSPVector' - 0 NULL result",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MSE",229,G__LinAlgDict_200_2_4,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,5,3,1,0,
"i - 'Int_t' 0 - bl U 'TDSPVector' - 0 - in1 "
"U 'TDSPVector' - 0 - in2 U 'TDSPVector' - 0 NULL result "
"u 'TComplex' - 0 1 scaler",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MSE",229,G__LinAlgDict_200_3_4,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,4,1,1,0,
"U 'TDSPVector' - 0 - in1 U 'TDSPVector' - 0 - in2 "
"U 'TDSPVector' - 0 NULL result u 'TComplex' - 0 1 scaler",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SumPhaseDiff",1183,G__LinAlgDict_200_4_4,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,5,3,1,0,
"i - 'Int_t' 0 - - U 'TDSPVector' - 0 - in1 "
"U 'TDSPVector' - 0 - in2 U 'TDSPVector' - 0 NULL result "
"u 'TComplex' - 0 1 scaler",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SumPhaseDiff",1183,G__LinAlgDict_200_5_4,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,4,1,1,0,
"U 'TDSPVector' - 0 - in1 U 'TDSPVector' - 0 - in2 "
"U 'TDSPVector' - 0 NULL result u 'TComplex' - 0 1 scaler",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Sum2PhaseDiff",1233,G__LinAlgDict_200_6_4,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,5,3,1,0,
"i - 'Int_t' 0 - - U 'TDSPVector' - 0 - in1 "
"U 'TDSPVector' - 0 - in2 U 'TDSPVector' - 0 NULL result "
"u 'TComplex' - 0 1 scaler",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Sum2PhaseDiff",1233,G__LinAlgDict_200_7_4,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,4,1,1,0,
"U 'TDSPVector' - 0 - in1 U 'TDSPVector' - 0 - in2 "
"U 'TDSPVector' - 0 NULL result u 'TComplex' - 0 1 scaler",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MeanPhaseDiff",1259,G__LinAlgDict_200_8_4,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,5,3,1,0,
"i - 'Int_t' 0 - - U 'TDSPVector' - 0 - in1 "
"U 'TDSPVector' - 0 - in2 U 'TDSPVector' - 0 NULL result "
"u 'TComplex' - 0 1 scaler",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MeanPhaseDiff",1259,G__LinAlgDict_200_9_4,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,4,1,1,0,
"U 'TDSPVector' - 0 - in1 U 'TDSPVector' - 0 - in2 "
"U 'TDSPVector' - 0 NULL result u 'TComplex' - 0 1 scaler",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Mean2PhaseDiff",1309,G__LinAlgDict_200_0_5,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,5,3,1,0,
"i - 'Int_t' 0 - - U 'TDSPVector' - 0 - in1 "
"U 'TDSPVector' - 0 - in2 U 'TDSPVector' - 0 NULL result "
"u 'TComplex' - 0 1 scaler",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Mean2PhaseDiff",1309,G__LinAlgDict_200_1_5,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,4,1,1,0,
"U 'TDSPVector' - 0 - in1 U 'TDSPVector' - 0 - in2 "
"U 'TDSPVector' - 0 NULL result u 'TComplex' - 0 1 scaler",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__LinAlgDict_200_2_5,85,G__get_linked_tagnum(&G__LinAlgDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__LinAlgDict_200_3_5,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__LinAlgDict_200_4_5,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__LinAlgDict_200_5_5,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__LinAlgDict_200_6_5,85,G__get_linked_tagnum(&G__LinAlgDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__LinAlgDict_200_7_5,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__LinAlgDict_200_8_5,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__LinAlgDict_200_9_5,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__LinAlgDict_200_0_6,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__LinAlgDict_200_1_6,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__LinAlgDict_200_2_6,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__LinAlgDict_200_3_6,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPBlockOperation",1877,G__LinAlgDict_200_4_6,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPSolver(void) {
   /* TDSPSolver */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LinAlgDictLN_TDSPSolver));
   G__memfunc_setup("GetNumInputs",1235,G__LinAlgDict_216_2_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetNumOutputs",1364,G__LinAlgDict_216_3_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Redundancy",1037,G__LinAlgDict_216_4_0,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Solve",521,G__LinAlgDict_216_5_0,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"","/< Solve - Return kTRUE if there are solutions ",(void*)NULL,3);
   G__memfunc_setup("SetY",389,G__LinAlgDict_216_6_0,121,-1,-1,0,1,1,1,0,"U 'TDSPVector' - 0 - y","/< Set the Vector y of the equation y=A(x)+b",(void*)NULL,0);
   G__memfunc_setup("SetY",389,G__LinAlgDict_216_7_0,121,-1,-1,0,1,1,1,0,"u 'TDSPVector' - 1 - y","/< Set the Vector y of the equation y=A(x)+b",(void*)NULL,0);
   G__memfunc_setup("SetX",388,G__LinAlgDict_216_8_0,121,-1,-1,0,1,1,1,0,"U 'TDSPVector' - 0 - x","/< Set the Vector x (the place for the solution) of the equation y=A(x)+b",(void*)NULL,0);
   G__memfunc_setup("SetX",388,G__LinAlgDict_216_9_0,121,-1,-1,0,1,1,1,0,"u 'TDSPVector' - 1 - x","/< Set the Vector x (the place for the solution) of the equation y=A(x)+b",(void*)NULL,0);
   G__memfunc_setup("SetXAlphabet",1189,G__LinAlgDict_216_0_1,121,-1,-1,0,1,1,1,0,"U 'TDSPVector' - 0 - a",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetXAlphabet",1189,G__LinAlgDict_216_1_1,121,-1,-1,0,2,1,1,0,
"U 'TComplex' - 0 - a i - 'Int_t' 0 - l","/< Set the possible complex values for each X_i",(void*)NULL,0);
   G__memfunc_setup("SetXMinDist",1084,G__LinAlgDict_216_2_1,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - -","/< Set the minimal distance for breaking the ML-Algorithm",(void*)NULL,0);
   G__memfunc_setup("Y",89,G__LinAlgDict_216_3_1,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,0,1,1,8,"","/< Get the Vector y of the equation y=A(x)+b",(void*)NULL,0);
   G__memfunc_setup("GetY",377,G__LinAlgDict_216_4_1,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,0,1,1,8,"","/< Get the Vector y of the equation y=A(x)+b",(void*)NULL,0);
   G__memfunc_setup("X",88,G__LinAlgDict_216_5_1,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,0,1,1,8,"","/< Get the Vector x (the solution) of the equation y=A(x)+b",(void*)NULL,0);
   G__memfunc_setup("GetX",376,G__LinAlgDict_216_6_1,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,0,1,1,8,"","/< Get the Vector x (the solution) of the equation y=A(x)+b",(void*)NULL,0);
   G__memfunc_setup("Print",525,G__LinAlgDict_216_7_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Class",502,G__LinAlgDict_216_8_1,85,G__get_linked_tagnum(&G__LinAlgDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__LinAlgDict_216_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__LinAlgDict_216_0_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__LinAlgDict_216_1_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__LinAlgDict_216_2_2,85,G__get_linked_tagnum(&G__LinAlgDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__LinAlgDict_216_3_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__LinAlgDict_216_4_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__LinAlgDict_216_5_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__LinAlgDict_216_6_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__LinAlgDict_216_7_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__LinAlgDict_216_8_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__LinAlgDict_216_9_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPSolver",1076,G__LinAlgDict_216_0_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPLinearSolver(void) {
   /* TDSPLinearSolver */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LinAlgDictLN_TDSPLinearSolver));
   G__memfunc_setup("_push_means_",1265,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"","Help routine - which pushs a new values to the means",(void*)NULL,0);
   G__memfunc_setup("_reset_means_",1364,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"","Help routine - which resets the mean-calculations",(void*)NULL,0);
   G__memfunc_setup("TDSPLinearSolver",1553,G__LinAlgDict_218_2_0,105,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPLinearSolver),-1,0,3,1,1,0,
"U 'TDSPMatrix' - 0 NULL a U 'TDSPVector' - 0 NULL b "
"U 'TDSPVector' - 0 NULL y",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Print",525,G__LinAlgDict_218_4_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetMethod",909,G__LinAlgDict_218_5_0,121,-1,-1,0,1,1,1,0,"i 'eLinearSolveMethod' - 0 - e","Set Method",(void*)NULL,0);
   G__memfunc_setup("SetA",365,G__LinAlgDict_218_6_0,121,-1,-1,0,1,1,1,0,"U 'TDSPMatrix' - 0 - a","Set the Matrix a of the equation y=Ax+b",(void*)NULL,0);
   G__memfunc_setup("SetA",365,G__LinAlgDict_218_7_0,121,-1,-1,0,1,1,1,0,"u 'TDSPMatrix' - 1 - a","Set the Matrix a of the equation y=Ax+b",(void*)NULL,0);
   G__memfunc_setup("SetB",366,G__LinAlgDict_218_8_0,121,-1,-1,0,1,1,1,0,"U 'TDSPVector' - 0 - b","Set the Vector b of the equation y=Ax+b",(void*)NULL,0);
   G__memfunc_setup("SetB",366,G__LinAlgDict_218_9_0,121,-1,-1,0,1,1,1,0,"u 'TDSPVector' - 1 - b","Set the Vector b of the equation y=Ax+b",(void*)NULL,0);
   G__memfunc_setup("Guess",519,G__LinAlgDict_218_0_1,121,-1,-1,0,1,1,1,0,"U 'TDSPVector' - 0 - g","Set the initial Guess of Vector x of the equation y=Ax+b",(void*)NULL,0);
   G__memfunc_setup("Guess",519,G__LinAlgDict_218_1_1,121,-1,-1,0,1,1,1,0,"u 'TDSPVector' - 1 - g","Set the initial Guess of Vector x of the equation y=Ax+b",(void*)NULL,0);
   G__memfunc_setup("Set",300,G__LinAlgDict_218_2_1,121,-1,-1,0,3,1,1,0,
"U 'TDSPMatrix' - 0 - a U 'TDSPVector' - 0 - b "
"U 'TDSPVector' - 0 - y",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetMaxIterations",1652,G__LinAlgDict_218_3_1,121,-1,-1,0,1,1,1,0,"h - 'UInt_t' 0 - m","Set the maximal number of iterations",(void*)NULL,0);
   G__memfunc_setup("SetStopPrecision",1662,G__LinAlgDict_218_4_1,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - e","Set the Stop Precision",(void*)NULL,0);
   G__memfunc_setup("SetSerialHD",1048,G__LinAlgDict_218_5_1,121,-1,-1,0,1,1,1,0,"h - 'UInt_t' 0 - start","Use Serial Hard Decisions for Iterations>=start",(void*)NULL,0);
   G__memfunc_setup("SetParalleHD",1145,G__LinAlgDict_218_6_1,121,-1,-1,0,1,1,1,0,"h - 'UInt_t' 0 - start","Use Parallel Hard Decisions for Iterations>=start",(void*)NULL,0);
   G__memfunc_setup("GetMethod",897,G__LinAlgDict_218_7_1,105,G__get_linked_tagnum(&G__LinAlgDictLN_eLinearSolveMethod),-1,0,0,1,1,8,"","Get Method",(void*)NULL,0);
   G__memfunc_setup("Method",609,G__LinAlgDict_218_8_1,105,G__get_linked_tagnum(&G__LinAlgDictLN_eLinearSolveMethod),-1,0,0,1,1,8,"","Get Method",(void*)NULL,0);
   G__memfunc_setup("B",66,G__LinAlgDict_218_9_1,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,0,1,1,8,"","Get the Vector b of the equation y=Ax+b",(void*)NULL,0);
   G__memfunc_setup("GetB",354,G__LinAlgDict_218_0_2,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,0,1,1,8,"","Get the Vector b of the equation y=Ax+b",(void*)NULL,0);
   G__memfunc_setup("A",65,G__LinAlgDict_218_1_2,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix),-1,0,0,1,1,8,"","Get the Matrix a of the equation y=Ax+b",(void*)NULL,0);
   G__memfunc_setup("GetA",353,G__LinAlgDict_218_2_2,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix),-1,0,0,1,1,8,"","Get the Matrix a of the equation y=Ax+b",(void*)NULL,0);
   G__memfunc_setup("GetMaxIterations",1640,G__LinAlgDict_218_3_2,104,-1,G__defined_typename("UInt_t"),0,0,1,1,8,"","Get the maximal number of iterations",(void*)NULL,0);
   G__memfunc_setup("GetIterations",1346,G__LinAlgDict_218_4_2,104,-1,G__defined_typename("UInt_t"),0,0,1,1,8,"","Get the last number of iterations",(void*)NULL,0);
   G__memfunc_setup("GetMeanIterations",1731,G__LinAlgDict_218_5_2,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"","Get the mean number of iterations",(void*)NULL,0);
   G__memfunc_setup("GetStopPrecision",1650,G__LinAlgDict_218_6_2,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"","Get the Stop Precision",(void*)NULL,0);
   G__memfunc_setup("GetPrecision",1228,G__LinAlgDict_218_7_2,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"","Get the Last Precision",(void*)NULL,0);
   G__memfunc_setup("GetMeanPrecision",1613,G__LinAlgDict_218_8_2,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"","Get the Mean Precision",(void*)NULL,0);
   G__memfunc_setup("GetSerialHD",1036,G__LinAlgDict_218_9_2,104,-1,G__defined_typename("UInt_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetParallelHD",1241,G__LinAlgDict_218_0_3,104,-1,G__defined_typename("UInt_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ResetMeans",1015,G__LinAlgDict_218_1_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNumInputs",1235,G__LinAlgDict_218_2_3,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNumOutputs",1364,G__LinAlgDict_218_3_3,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Solve",521,G__LinAlgDict_218_4_3,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StackA",567,G__LinAlgDict_218_5_3,121,-1,-1,0,1,1,1,0,"U 'TDSPMatrix' - 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__LinAlgDict_218_6_3,85,G__get_linked_tagnum(&G__LinAlgDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__LinAlgDict_218_7_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__LinAlgDict_218_8_3,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__LinAlgDict_218_9_3,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__LinAlgDict_218_0_4,85,G__get_linked_tagnum(&G__LinAlgDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__LinAlgDict_218_1_4,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__LinAlgDict_218_2_4,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__LinAlgDict_218_3_4,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__LinAlgDict_218_4_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__LinAlgDict_218_5_4,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__LinAlgDict_218_6_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__LinAlgDict_218_7_4,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPLinearSolver",1679,G__LinAlgDict_218_8_4,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncLinAlgDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
   G__memvar_setup((void*)(&ComplexZero),117,0,0,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,-1,1,"ComplexZero=",0,(char*)NULL);
   G__memvar_setup((void*)(&I),117,0,0,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,-1,1,"I=",0,(char*)NULL);
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__LinAlgDictLN_eMatrixApplyMode),-1,-1,1,"kMatrixApplyReal=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__LinAlgDictLN_eMatrixApplyMode),-1,-1,1,"kMatrixApplyConjA=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__LinAlgDictLN_eMatrixApplyMode),-1,-1,1,"kMatrixApplyConjB=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__LinAlgDictLN_eMatrixApplyMode),-1,-1,1,"kMatrixApplyConjAB=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__LinAlgDictLN_eLinearSolveMethod),-1,-1,1,"kLinearSolveJacobi=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__LinAlgDictLN_eLinearSolveMethod),-1,-1,1,"kLinearSolveGaussSeidel=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__LinAlgDictLN_eLinearSolveMethod),-1,-1,1,"kLinearSolveCG=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__LinAlgDictLN_eLinearSolveMethod),-1,-1,1,"kLinearSolveGaussSeidelBinary=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__LinAlgDictLN_eLinearSolveMethod),-1,-1,1,"kLinearSolveML=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__LinAlgDictLN_eLinearSolveMethod),-1,-1,1,"kLinearSolveGaussSeidelQpsk=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__LinAlgDictLN_eLinearSolveMethod),-1,-1,1,"kLinearSolveNothing=6",0,(char*)NULL);

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalLinAlgDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
   G__memfunc_setup("operator+",919,G__LinAlgDict__1_28,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,2,1,1,0,
"d - 'Double_t' 10 - x u 'TComplex' - 11 - z",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator-",921,G__LinAlgDict__2_28,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,2,1,1,0,
"d - 'Double_t' 10 - x u 'TComplex' - 11 - z",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator*",918,G__LinAlgDict__4_28,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,2,1,1,0,
"d - 'Double_t' 10 - x u 'TComplex' - 11 - z",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator*",918,G__LinAlgDict__5_28,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,2,1,1,0,
"u 'TComplex' - 11 - x u 'TComplex' - 11 - y",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator%",913,G__LinAlgDict__7_28,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,2,1,1,0,
"u 'TComplex' - 11 - x u 'TComplex' - 11 - y",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator/",923,G__LinAlgDict__8_28,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,2,1,1,0,
"d - 'Double_t' 10 - x u 'TComplex' - 11 - z",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator==",998,G__LinAlgDict__9_28,103,-1,G__defined_typename("Bool_t"),0,2,1,1,0,
"u 'TComplex' - 11 - z1 u 'TComplex' - 11 - z2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator!=",970,G__LinAlgDict__0_29,103,-1,G__defined_typename("Bool_t"),0,2,1,1,0,
"u 'TComplex' - 11 - z1 u 'TComplex' - 11 - z2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator==",998,G__LinAlgDict__1_29,103,-1,G__defined_typename("Bool_t"),0,2,1,1,0,
"u 'TComplex' - 11 - z1 d - 'Double_t' 11 - d",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator!=",970,G__LinAlgDict__2_29,103,-1,G__defined_typename("Bool_t"),0,2,1,1,0,
"u 'TComplex' - 11 - z1 d - 'Double_t' 11 - d",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Abs",278,G__LinAlgDict__3_29,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"u 'TComplex' - 11 - z",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Abs2",328,G__LinAlgDict__4_29,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"u 'TComplex' - 11 - z",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Sqrt",426,G__LinAlgDict__5_29,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,1,1,1,0,"u 'TComplex' - 11 - z",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Sqrt3",477,G__LinAlgDict__6_29,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,2,1,1,0,
"u 'TComplex' - 11 - z i - 'Int_t' 0 - k",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Exp",301,G__LinAlgDict__7_29,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,1,1,1,0,"u 'TComplex' - 11 - z",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Log",290,G__LinAlgDict__8_29,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,1,1,1,0,"u 'TComplex' - 11 - z",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Log10",387,G__LinAlgDict__9_29,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,1,1,1,0,"u 'TComplex' - 11 - z",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Log2",340,G__LinAlgDict__0_30,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,1,1,1,0,"u 'TComplex' - 11 - z",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Sin",298,G__LinAlgDict__1_30,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,1,1,1,0,"u 'TComplex' - 11 - z",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Cos",293,G__LinAlgDict__2_30,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,1,1,1,0,"u 'TComplex' - 11 - z",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Power",525,G__LinAlgDict__3_30,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,2,1,1,0,
"u 'TComplex' - 11 - z i - 'Int_t' 0 - n",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Power",525,G__LinAlgDict__4_30,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,2,1,1,0,
"u 'TComplex' - 11 - z d - 'Double_t' 0 - x",(char*)NULL
,(void*)NULL,0);
}

static void G__cpp_setup_func3() {
   G__memfunc_setup("Phase",497,G__LinAlgDict__5_30,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"u 'TComplex' - 0 - z",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator>>",1000,G__LinAlgDict__6_30,117,G__get_linked_tagnum(&G__LinAlgDictLN_basic_istreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("istream"),1,2,1,1,0,
"u 'basic_istream<char,char_traits<char> >' 'istream' 1 - - u 'TComplex' - 1 - -",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator<<",996,G__LinAlgDict__7_30,117,G__get_linked_tagnum(&G__LinAlgDictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ostream"),1,2,1,1,0,
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - - u 'TComplex' - 1 - -",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Dist",404,G__LinAlgDict__9_30,100,-1,G__defined_typename("Double_t"),0,2,1,1,0,
"u 'TComplex' - 1 - z1 u 'TComplex' - 1 - z2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator==",998,G__LinAlgDict__6_39,103,-1,G__defined_typename("Bool_t"),0,2,1,1,0,
"u 'TDSPVector' - 1 - z1 u 'TDSPVector' - 1 - z2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator>>",1000,G__LinAlgDict__7_39,117,G__get_linked_tagnum(&G__LinAlgDictLN_basic_istreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("istream"),1,2,1,1,0,
"u 'basic_istream<char,char_traits<char> >' 'istream' 1 - - u 'TDSPVector' - 1 - -",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator<<",996,G__LinAlgDict__8_39,117,G__get_linked_tagnum(&G__LinAlgDictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ostream"),1,2,1,1,0,
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - - u 'TDSPVector' - 1 - -",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator>>",1000,G__LinAlgDict__9_39,117,G__get_linked_tagnum(&G__LinAlgDictLN_basic_istreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("istream"),1,2,1,1,0,
"u 'basic_istream<char,char_traits<char> >' 'istream' 1 - - U 'TDSPVector' - 0 - -",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator<<",996,G__LinAlgDict__0_40,117,G__get_linked_tagnum(&G__LinAlgDictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ostream"),1,2,1,1,0,
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - - U 'TDSPVector' - 0 - -",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("filternorm",1090,G__LinAlgDict__1_40,100,-1,G__defined_typename("Double_t"),0,3,1,1,0,
"U 'TDSPVector' - 0 - fir U 'TDSPVector' - 0 NULL iir "
"h - 'UInt_t' 0 2 p",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("filter",646,G__LinAlgDict__2_40,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,4,1,1,0,
"U 'TDSPVector' - 0 - in U 'TDSPVector' - 0 - out "
"U 'TDSPVector' - 0 - fir U 'TDSPVector' - 0 NULL iir",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("mult",450,G__LinAlgDict__3_40,121,-1,-1,0,3,1,1,0,
"U 'TDSPVector' - 0 - a U 'TDSPVector' - 0 - b "
"U 'TDSPVector' - 0 - c",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("econv",539,G__LinAlgDict__4_40,121,-1,-1,0,6,1,1,0,
"U 'TDSPVector' - 0 - a U 'TDSPVector' - 0 - b "
"U 'TDSPVector' - 0 - c i - 'Int_t' 0 0 offset "
"i - 'Int_t' 0 1 step i - 'Int_t' 0 kTDSPVector_Conv_Defaults opt",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Var",297,G__LinAlgDict__5_40,100,-1,G__defined_typename("Double_t"),0,2,1,1,0,
"U 'TDSPVector' - 0 - s1 U 'TDSPVector' - 0 NULL weights",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Var",297,G__LinAlgDict__6_40,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"u 'TDSPVector' - 1 - s1",(char*)NULL
,(void*)NULL,0);
}

static void G__cpp_setup_func4() {
   G__memfunc_setup("Std",299,G__LinAlgDict__7_40,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"U 'TDSPVector' - 0 - s1",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Std",299,G__LinAlgDict__8_40,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"u 'TDSPVector' - 1 - s1",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Dist",404,G__LinAlgDict__9_40,100,-1,G__defined_typename("Double_t"),0,2,1,1,0,
"U 'TDSPVector' - 0 - s1 U 'TDSPVector' - 0 - s2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Dist2",454,G__LinAlgDict__0_41,100,-1,G__defined_typename("Double_t"),0,2,1,1,0,
"U 'TDSPVector' - 0 - s1 U 'TDSPVector' - 0 - s2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Dot",295,G__LinAlgDict__1_41,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,3,1,1,0,
"U 'TDSPVector' - 0 - s1 U 'TDSPVector' - 0 - s2 "
"g - 'Bool_t' 0 kTRUE conj",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Dot2",345,G__LinAlgDict__2_41,100,-1,G__defined_typename("Double_t"),0,2,1,1,0,
"U 'TDSPVector' - 0 - s1 U 'TDSPVector' - 0 - s2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Dist",404,G__LinAlgDict__3_41,100,-1,G__defined_typename("Double_t"),0,2,1,1,0,
"u 'TDSPVector' - 1 - s1 u 'TDSPVector' - 1 - s2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Dist2",454,G__LinAlgDict__4_41,100,-1,G__defined_typename("Double_t"),0,2,1,1,0,
"u 'TDSPVector' - 1 - s1 u 'TDSPVector' - 1 - s2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Dot",295,G__LinAlgDict__5_41,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,3,1,1,0,
"u 'TDSPVector' - 1 - s1 u 'TDSPVector' - 1 - s2 "
"g - 'Bool_t' 0 kTRUE conj",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Dot2",345,G__LinAlgDict__6_41,100,-1,G__defined_typename("Double_t"),0,2,1,1,0,
"u 'TDSPVector' - 1 - s1 u 'TDSPVector' - 1 - s2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Index",504,G__LinAlgDict__7_41,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,4,1,1,0,
"u 'TComplex' - 0 - x u 'TComplex' - 0 0 y "
"u 'TComplex' - 0 1 step U 'TDSPVector' - 0 NULL result",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Conv",406,G__LinAlgDict__8_41,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,5,1,1,0,
"U 'TDSPVector' - 0 - in U 'TDSPVector' - 0 - h "
"U 'TDSPVector' - 0 NULL out i - 'Int_t' 0 kTDSPVector_Conv_Defaults opt "
"i - 'Int_t' 0 0 bl",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Rect",398,G__LinAlgDict__9_41,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,4,1,1,0,
"i - 'Int_t' 0 - L i - 'Int_t' 0 - N "
"d - 'Double_t' 0 1 norm U 'TDSPVector' - 0 NULL in",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Rect_FFTShift",1227,G__LinAlgDict__0_42,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,4,1,1,0,
"i - 'Int_t' 0 - L i - 'Int_t' 0 - N "
"d - 'Double_t' 0 1 norm U 'TDSPVector' - 0 NULL in",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Gaussnk",732,G__LinAlgDict__1_42,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,3,1,1,0,
"i - 'Int_t' 0 - L d - 'Double_t' 0 1 norm "
"U 'TDSPVector' - 0 NULL in",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Gaussnk_FFTShift",1561,G__LinAlgDict__2_42,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,3,1,1,0,
"i - 'Int_t' 0 - L d - 'Double_t' 0 1 norm "
"U 'TDSPVector' - 0 NULL in",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Rcos",407,G__LinAlgDict__3_42,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,5,1,1,0,
"i - 'Int_t' 0 - L i - 'Int_t' 0 - N "
"d - 'Double_t' 0 - rolloff d - 'Double_t' 0 1. norm "
"U 'TDSPVector' - 0 NULL output",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Rcos_FFTShift",1236,G__LinAlgDict__4_42,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,5,1,1,0,
"i - 'Int_t' 0 - L i - 'Int_t' 0 - N "
"d - 'Double_t' 0 - rolloff d - 'Double_t' 0 1. norm "
"U 'TDSPVector' - 0 NULL output",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("RandNC",534,G__LinAlgDict__5_42,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,2,1,1,0,
"h - 'UInt_t' 0 - L d - 'Double_t' 0 1. sigma",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Delta",490,G__LinAlgDict__6_42,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,2,1,1,0,
"h - 'UInt_t' 0 - L i - 'Int_t' 0 0. one_pos",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator>>",1000,G__LinAlgDict__7_42,117,G__get_linked_tagnum(&G__LinAlgDictLN_basic_istreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("istream"),1,2,1,1,0,
"u 'basic_istream<char,char_traits<char> >' 'istream' 1 - - u 'TDSPMatrix' - 1 - -",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator<<",996,G__LinAlgDict__8_42,117,G__get_linked_tagnum(&G__LinAlgDictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ostream"),1,2,1,1,0,
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - - u 'TDSPMatrix' - 1 - -",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator>>",1000,G__LinAlgDict__9_42,117,G__get_linked_tagnum(&G__LinAlgDictLN_basic_istreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("istream"),1,2,1,1,0,
"u 'basic_istream<char,char_traits<char> >' 'istream' 1 - - U 'TDSPMatrix' - 0 - -",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator<<",996,G__LinAlgDict__0_43,117,G__get_linked_tagnum(&G__LinAlgDictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ostream"),1,2,1,1,0,
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - - U 'TDSPMatrix' - 0 - -",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Transform",956,G__LinAlgDict__1_43,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix),-1,0,3,1,1,0,
"U 'TDSPMatrix' - 0 - A U 'TDSPMatrix' - 0 - X "
"U 'TDSPMatrix' - 0 NULL result",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Affine",585,G__LinAlgDict__3_43,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),-1,0,4,1,1,0,
"U 'TDSPMatrix' - 0 - A U 'TDSPVector' - 0 - x "
"U 'TDSPVector' - 0 NULL b U 'TDSPVector' - 0 NULL result",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("UnitMatrix",1045,G__LinAlgDict__4_43,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix),-1,0,3,1,1,0,
"i - 'Int_t' 0 - nrows i - 'Int_t' 0 0 ncols "
"u 'TComplex' - 0 1.0 diag",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("FlatMatrix",1020,G__LinAlgDict__5_43,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix),-1,0,3,1,1,0,
"i - 'Int_t' 0 - nrows i - 'Int_t' 0 0 ncols "
"u 'TComplex' - 0 1.0 fil",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("ZeroMatrix",1045,G__LinAlgDict__6_43,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix),-1,0,2,1,1,0,
"i - 'Int_t' 0 - nrows i - 'Int_t' 0 0 ncols",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Zeros",531,G__LinAlgDict__7_43,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix),-1,0,2,1,1,0,
"i - 'Int_t' 0 - nrows i - 'Int_t' 0 0 ncols",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Ones",405,G__LinAlgDict__8_43,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix),-1,0,2,1,1,0,
"i - 'Int_t' 0 - nrows i - 'Int_t' 0 0 ncols",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Det",285,G__LinAlgDict__9_43,117,G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),-1,0,1,1,1,0,"U 'TDSPMatrix' - 0 - a",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("RowStack",814,G__LinAlgDict__0_44,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix),-1,0,3,1,1,0,
"U 'TDSPVector' - 0 - - i - 'Int_t' 0 - n "
"U 'TDSPMatrix' - 0 NULL result",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("ColumnStack",1124,G__LinAlgDict__1_44,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix),-1,0,3,1,1,0,
"U 'TDSPVector' - 0 - - i - 'Int_t' 0 - n "
"U 'TDSPMatrix' - 0 NULL result",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("ConvMatrix",1035,G__LinAlgDict__2_44,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix),-1,0,6,1,1,0,
"U 'TDSPVector' - 0 - - i - 'Int_t' 0 0 m "
"i - 'Int_t' 0 0 n U 'TDSPMatrix' - 0 NULL result "
"g - 'Bool_t' 0 kTRUE cyclic i - 'Int_t' 0 0 Offset",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("ConvMatrix",1035,G__LinAlgDict__3_44,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix),-1,0,7,1,1,0,
"U 'TDSPMatrix' - 0 - - i - 'Int_t' 0 0 m "
"i - 'Int_t' 0 0 n U 'TDSPMatrix' - 0 NULL result "
"g - 'Bool_t' 0 kTRUE cyclic i - 'Int_t' 0 0 mOffset "
"i - 'Int_t' 0 0 nOffset",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Toeplitz",859,G__LinAlgDict__4_44,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix),-1,0,5,1,1,0,
"U 'TDSPVector' - 0 - - i - 'Int_t' 0 0 m "
"i - 'Int_t' 0 0 n U 'TDSPMatrix' - 0 NULL result "
"g - 'Bool_t' 0 kTRUE cyclic",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("RandNC",534,G__LinAlgDict__5_44,85,G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix),-1,0,3,1,1,0,
"h - 'UInt_t' 0 - M h - 'UInt_t' 0 - N "
"d - 'Double_t' 0 1. sigma",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Dist",404,G__LinAlgDict__6_44,100,-1,G__defined_typename("Double_t"),0,2,1,1,0,
"U 'TDSPMatrix' - 0 - s1 U 'TDSPMatrix' - 0 - s2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Dist2",454,G__LinAlgDict__7_44,100,-1,G__defined_typename("Double_t"),0,2,1,1,0,
"U 'TDSPMatrix' - 0 - s1 U 'TDSPMatrix' - 0 - s2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Dot",295,G__LinAlgDict__8_44,100,-1,G__defined_typename("Double_t"),0,2,1,1,0,
"U 'TDSPMatrix' - 0 - s1 U 'TDSPMatrix' - 0 - s2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Dot2",345,G__LinAlgDict__9_44,100,-1,G__defined_typename("Double_t"),0,2,1,1,0,
"U 'TDSPMatrix' - 0 - s1 U 'TDSPMatrix' - 0 - s2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Dot",295,G__LinAlgDict__2_45,100,-1,G__defined_typename("Double_t"),0,2,1,1,0,
"u 'TDSPMatrix' - 1 - s1 u 'TDSPMatrix' - 1 - s2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Dot2",345,G__LinAlgDict__3_45,100,-1,G__defined_typename("Double_t"),0,2,1,1,0,
"u 'TDSPMatrix' - 1 - s1 u 'TDSPMatrix' - 1 - s2",(char*)NULL
,(void*)NULL,0);

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcLinAlgDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__LinAlgDictLN_basic_istreamlEcharcOchar_traitslEchargRsPgR = { "basic_istream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__LinAlgDictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__LinAlgDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__LinAlgDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__LinAlgDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__LinAlgDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__LinAlgDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__LinAlgDictLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__LinAlgDictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__LinAlgDictLN_TCplxRhoPhi = { "TCplxRhoPhi" , 99 , -1 };
G__linked_taginfo G__LinAlgDictLN_TComplex = { "TComplex" , 99 , -1 };
G__linked_taginfo G__LinAlgDictLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__LinAlgDictLN_TArrayI = { "TArrayI" , 99 , -1 };
G__linked_taginfo G__LinAlgDictLN_TGraph = { "TGraph" , 99 , -1 };
G__linked_taginfo G__LinAlgDictLN_TH2 = { "TH2" , 99 , -1 };
G__linked_taginfo G__LinAlgDictLN_TmxArray = { "TmxArray" , 99 , -1 };
G__linked_taginfo G__LinAlgDictLN_eXCorr_Options = { "eXCorr_Options" , 101 , -1 };
G__linked_taginfo G__LinAlgDictLN_TDSPVector = { "TDSPVector" , 99 , -1 };
G__linked_taginfo G__LinAlgDictLN_eMatrixApplyMode = { "eMatrixApplyMode" , 101 , -1 };
G__linked_taginfo G__LinAlgDictLN_TDSPMatrix = { "TDSPMatrix" , 99 , -1 };
G__linked_taginfo G__LinAlgDictLN_TDSPBlockOperation = { "TDSPBlockOperation" , 99 , -1 };
G__linked_taginfo G__LinAlgDictLN_TQObject = { "TQObject" , 99 , -1 };
G__linked_taginfo G__LinAlgDictLN_TQObjSender = { "TQObjSender" , 99 , -1 };
G__linked_taginfo G__LinAlgDictLN_TQQObject = { "TQQObject" , 99 , -1 };
G__linked_taginfo G__LinAlgDictLN_TDSPSolver = { "TDSPSolver" , 99 , -1 };
G__linked_taginfo G__LinAlgDictLN_eLinearSolveMethod = { "eLinearSolveMethod" , 101 , -1 };
G__linked_taginfo G__LinAlgDictLN_TDSPLinearSolver = { "TDSPLinearSolver" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableLinAlgDict() {
  G__LinAlgDictLN_basic_istreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__LinAlgDictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__LinAlgDictLN_TClass.tagnum = -1 ;
  G__LinAlgDictLN_TBuffer.tagnum = -1 ;
  G__LinAlgDictLN_TMemberInspector.tagnum = -1 ;
  G__LinAlgDictLN_TObject.tagnum = -1 ;
  G__LinAlgDictLN_TNamed.tagnum = -1 ;
  G__LinAlgDictLN_TList.tagnum = -1 ;
  G__LinAlgDictLN_TFile.tagnum = -1 ;
  G__LinAlgDictLN_TCplxRhoPhi.tagnum = -1 ;
  G__LinAlgDictLN_TComplex.tagnum = -1 ;
  G__LinAlgDictLN_TH1.tagnum = -1 ;
  G__LinAlgDictLN_TArrayI.tagnum = -1 ;
  G__LinAlgDictLN_TGraph.tagnum = -1 ;
  G__LinAlgDictLN_TH2.tagnum = -1 ;
  G__LinAlgDictLN_TmxArray.tagnum = -1 ;
  G__LinAlgDictLN_eXCorr_Options.tagnum = -1 ;
  G__LinAlgDictLN_TDSPVector.tagnum = -1 ;
  G__LinAlgDictLN_eMatrixApplyMode.tagnum = -1 ;
  G__LinAlgDictLN_TDSPMatrix.tagnum = -1 ;
  G__LinAlgDictLN_TDSPBlockOperation.tagnum = -1 ;
  G__LinAlgDictLN_TQObject.tagnum = -1 ;
  G__LinAlgDictLN_TQObjSender.tagnum = -1 ;
  G__LinAlgDictLN_TQQObject.tagnum = -1 ;
  G__LinAlgDictLN_TDSPSolver.tagnum = -1 ;
  G__LinAlgDictLN_eLinearSolveMethod.tagnum = -1 ;
  G__LinAlgDictLN_TDSPLinearSolver.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableLinAlgDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum(&G__LinAlgDictLN_basic_istreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum(&G__LinAlgDictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum(&G__LinAlgDictLN_TClass);
   G__get_linked_tagnum(&G__LinAlgDictLN_TBuffer);
   G__get_linked_tagnum(&G__LinAlgDictLN_TMemberInspector);
   G__get_linked_tagnum(&G__LinAlgDictLN_TObject);
   G__get_linked_tagnum(&G__LinAlgDictLN_TNamed);
   G__get_linked_tagnum(&G__LinAlgDictLN_TList);
   G__get_linked_tagnum(&G__LinAlgDictLN_TFile);
   G__get_linked_tagnum(&G__LinAlgDictLN_TCplxRhoPhi);
   G__tagtable_setup(G__get_linked_tagnum(&G__LinAlgDictLN_TComplex),sizeof(TComplex),-1,101120,(char*)NULL,G__setup_memvarTComplex,G__setup_memfuncTComplex);
   G__get_linked_tagnum(&G__LinAlgDictLN_TH1);
   G__get_linked_tagnum(&G__LinAlgDictLN_TArrayI);
   G__get_linked_tagnum(&G__LinAlgDictLN_TGraph);
   G__get_linked_tagnum(&G__LinAlgDictLN_TH2);
   G__get_linked_tagnum(&G__LinAlgDictLN_TmxArray);
   G__get_linked_tagnum(&G__LinAlgDictLN_eXCorr_Options);
   G__tagtable_setup(G__get_linked_tagnum(&G__LinAlgDictLN_TDSPVector),sizeof(TDSPVector),-1,130304,(char*)NULL,G__setup_memvarTDSPVector,G__setup_memfuncTDSPVector);
   G__tagtable_setup(G__get_linked_tagnum(&G__LinAlgDictLN_eMatrixApplyMode),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__tagtable_setup(G__get_linked_tagnum(&G__LinAlgDictLN_TDSPMatrix),sizeof(TDSPMatrix),-1,64768,(char*)NULL,G__setup_memvarTDSPMatrix,G__setup_memfuncTDSPMatrix);
   G__tagtable_setup(G__get_linked_tagnum(&G__LinAlgDictLN_TDSPBlockOperation),sizeof(TDSPBlockOperation),-1,1281,(char*)NULL,G__setup_memvarTDSPBlockOperation,G__setup_memfuncTDSPBlockOperation);
   G__get_linked_tagnum(&G__LinAlgDictLN_TQObject);
   G__get_linked_tagnum(&G__LinAlgDictLN_TQObjSender);
   G__get_linked_tagnum(&G__LinAlgDictLN_TQQObject);
   G__tagtable_setup(G__get_linked_tagnum(&G__LinAlgDictLN_TDSPSolver),sizeof(TDSPSolver),-1,62724,(char*)NULL,G__setup_memvarTDSPSolver,G__setup_memfuncTDSPSolver);
   G__tagtable_setup(G__get_linked_tagnum(&G__LinAlgDictLN_eLinearSolveMethod),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__tagtable_setup(G__get_linked_tagnum(&G__LinAlgDictLN_TDSPLinearSolver),sizeof(TDSPLinearSolver),-1,62720,(char*)NULL,G__setup_memvarTDSPLinearSolver,G__setup_memfuncTDSPLinearSolver);
}
extern "C" void G__cpp_setupLinAlgDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupLinAlgDict()");
  G__set_cpp_environmentLinAlgDict();
  G__cpp_setup_tagtableLinAlgDict();

  G__cpp_setup_inheritanceLinAlgDict();

  G__cpp_setup_typetableLinAlgDict();

  G__cpp_setup_memvarLinAlgDict();

  G__cpp_setup_memfuncLinAlgDict();
  G__cpp_setup_globalLinAlgDict();
  G__cpp_setup_funcLinAlgDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncLinAlgDict();
  return;
}
class G__cpp_setup_initLinAlgDict {
  public:
    G__cpp_setup_initLinAlgDict() { G__add_setup_func("LinAlgDict",(G__incsetup)(&G__cpp_setupLinAlgDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initLinAlgDict() { G__remove_setup_func("LinAlgDict"); }
};
G__cpp_setup_initLinAlgDict G__cpp_setup_initializerLinAlgDict;

