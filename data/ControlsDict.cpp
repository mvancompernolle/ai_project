//
// File generated by rootcint at Fri Apr 23 11:57:55 2004.
// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h"
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

#include "ControlsDict.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;

#include "RtypesImp.h"

#include "TVectorProxy.h"

namespace ROOT {
   namespace Shadow {
   } // Of namespace ROOT::Shadow
} // Of namespace ROOT

namespace ROOT {
   void TDSPOperatorControl_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPOperatorControl_IsA(const void*);
   static void *new_TDSPOperatorControl(void *p = 0);
   static void *newArray_TDSPOperatorControl(Long_t size);
   static void delete_TDSPOperatorControl(void *p);
   static void deleteArray_TDSPOperatorControl(void *p);
   static void destruct_TDSPOperatorControl(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPOperatorControl*)
   {
      TDSPOperatorControl *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPOperatorControl", TDSPOperatorControl::Class_Version(), "TDSPOperatorControl.h", 27,
                  typeid(TDSPOperatorControl), DefineBehavior(ptr, ptr),
                  &::TDSPOperatorControl::Dictionary, &TDSPOperatorControl_IsA, 0,
                  sizeof(TDSPOperatorControl) );
      instance.SetNew(&new_TDSPOperatorControl);
      instance.SetNewArray(&newArray_TDSPOperatorControl);
      instance.SetDelete(&delete_TDSPOperatorControl);
      instance.SetDeleteArray(&deleteArray_TDSPOperatorControl);
      instance.SetDestructor(&destruct_TDSPOperatorControl);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPOperatorControl*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPOperatorGControl_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPOperatorGControl_IsA(const void*);
   static void *new_TDSPOperatorGControl(void *p = 0);
   static void *newArray_TDSPOperatorGControl(Long_t size);
   static void delete_TDSPOperatorGControl(void *p);
   static void deleteArray_TDSPOperatorGControl(void *p);
   static void destruct_TDSPOperatorGControl(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPOperatorGControl*)
   {
      TDSPOperatorGControl *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPOperatorGControl", TDSPOperatorGControl::Class_Version(), "TDSPOperatorGControl.h", 29,
                  typeid(TDSPOperatorGControl), DefineBehavior(ptr, ptr),
                  &::TDSPOperatorGControl::Dictionary, &TDSPOperatorGControl_IsA, 0,
                  sizeof(TDSPOperatorGControl) );
      instance.SetNew(&new_TDSPOperatorGControl);
      instance.SetNewArray(&newArray_TDSPOperatorGControl);
      instance.SetDelete(&delete_TDSPOperatorGControl);
      instance.SetDeleteArray(&deleteArray_TDSPOperatorGControl);
      instance.SetDestructor(&destruct_TDSPOperatorGControl);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPOperatorGControl*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPGeneratorGControl_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPGeneratorGControl_IsA(const void*);
   static void *new_TDSPGeneratorGControl(void *p = 0);
   static void *newArray_TDSPGeneratorGControl(Long_t size);
   static void delete_TDSPGeneratorGControl(void *p);
   static void deleteArray_TDSPGeneratorGControl(void *p);
   static void destruct_TDSPGeneratorGControl(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPGeneratorGControl*)
   {
      TDSPGeneratorGControl *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPGeneratorGControl", TDSPGeneratorGControl::Class_Version(), "TDSPGeneratorGControl.h", 28,
                  typeid(TDSPGeneratorGControl), DefineBehavior(ptr, ptr),
                  &::TDSPGeneratorGControl::Dictionary, &TDSPGeneratorGControl_IsA, 0,
                  sizeof(TDSPGeneratorGControl) );
      instance.SetNew(&new_TDSPGeneratorGControl);
      instance.SetNewArray(&newArray_TDSPGeneratorGControl);
      instance.SetDelete(&delete_TDSPGeneratorGControl);
      instance.SetDeleteArray(&deleteArray_TDSPGeneratorGControl);
      instance.SetDestructor(&destruct_TDSPGeneratorGControl);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPGeneratorGControl*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPGroupControl_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPGroupControl_IsA(const void*);
   static void *new_TDSPGroupControl(void *p = 0);
   static void *newArray_TDSPGroupControl(Long_t size);
   static void delete_TDSPGroupControl(void *p);
   static void deleteArray_TDSPGroupControl(void *p);
   static void destruct_TDSPGroupControl(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPGroupControl*)
   {
      TDSPGroupControl *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPGroupControl", TDSPGroupControl::Class_Version(), "TDSPGroupControl.h", 41,
                  typeid(TDSPGroupControl), DefineBehavior(ptr, ptr),
                  &::TDSPGroupControl::Dictionary, &TDSPGroupControl_IsA, 0,
                  sizeof(TDSPGroupControl) );
      instance.SetNew(&new_TDSPGroupControl);
      instance.SetNewArray(&newArray_TDSPGroupControl);
      instance.SetDelete(&delete_TDSPGroupControl);
      instance.SetDeleteArray(&deleteArray_TDSPGroupControl);
      instance.SetDestructor(&destruct_TDSPGroupControl);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPGroupControl*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSPGroupGControl_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSPGroupGControl_IsA(const void*);
   static void *new_TDSPGroupGControl(void *p = 0);
   static void *newArray_TDSPGroupGControl(Long_t size);
   static void delete_TDSPGroupGControl(void *p);
   static void deleteArray_TDSPGroupGControl(void *p);
   static void destruct_TDSPGroupGControl(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TDSPGroupGControl*)
   {
      TDSPGroupGControl *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TDSPGroupGControl", TDSPGroupGControl::Class_Version(), "TDSPGroupGControl.h", 34,
                  typeid(TDSPGroupGControl), DefineBehavior(ptr, ptr),
                  &::TDSPGroupGControl::Dictionary, &TDSPGroupGControl_IsA, 0,
                  sizeof(TDSPGroupGControl) );
      instance.SetNew(&new_TDSPGroupGControl);
      instance.SetNewArray(&newArray_TDSPGroupGControl);
      instance.SetDelete(&delete_TDSPGroupGControl);
      instance.SetDeleteArray(&deleteArray_TDSPGroupGControl);
      instance.SetDestructor(&destruct_TDSPGroupGControl);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TDSPGroupGControl*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

//______________________________________________________________________________
TClass *TDSPOperatorControl::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPOperatorControl::Class_Name()
{
   return "TDSPOperatorControl";
}

//______________________________________________________________________________
const char *TDSPOperatorControl::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPOperatorControl*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPOperatorControl::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPOperatorControl*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPOperatorControl::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPOperatorControl*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPOperatorControl::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPOperatorControl*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPOperatorGControl::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPOperatorGControl::Class_Name()
{
   return "TDSPOperatorGControl";
}

//______________________________________________________________________________
const char *TDSPOperatorGControl::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPOperatorGControl*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPOperatorGControl::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPOperatorGControl*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPOperatorGControl::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPOperatorGControl*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPOperatorGControl::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPOperatorGControl*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPGeneratorGControl::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPGeneratorGControl::Class_Name()
{
   return "TDSPGeneratorGControl";
}

//______________________________________________________________________________
const char *TDSPGeneratorGControl::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPGeneratorGControl*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPGeneratorGControl::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPGeneratorGControl*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPGeneratorGControl::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPGeneratorGControl*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPGeneratorGControl::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPGeneratorGControl*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPGroupControl::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPGroupControl::Class_Name()
{
   return "TDSPGroupControl";
}

//______________________________________________________________________________
const char *TDSPGroupControl::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPGroupControl*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPGroupControl::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPGroupControl*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPGroupControl::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPGroupControl*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPGroupControl::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPGroupControl*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSPGroupGControl::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSPGroupGControl::Class_Name()
{
   return "TDSPGroupGControl";
}

//______________________________________________________________________________
const char *TDSPGroupGControl::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TDSPGroupGControl*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSPGroupGControl::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TDSPGroupGControl*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSPGroupGControl::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TDSPGroupGControl*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSPGroupGControl::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TDSPGroupGControl*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TDSPOperatorControl::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPOperatorControl.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> i;
      R__b.CheckByteCount(R__s, R__c, TDSPOperatorControl::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPOperatorControl::IsA(), kTRUE);
      R__b << i;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPOperatorControl::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPOperatorControl.

      TClass *R__cl = TDSPOperatorControl::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "i", &i);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPOperatorControl_IsA(const void *obj) {
      return ((::TDSPOperatorControl*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPOperatorControl(void *p) {
      return  p ? ::new((ROOT::TOperatorNewHelper*)p) ::TDSPOperatorControl : new ::TDSPOperatorControl;
   }
   static void *newArray_TDSPOperatorControl(Long_t size) {
      return new ::TDSPOperatorControl[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPOperatorControl(void *p) {
      delete ((::TDSPOperatorControl*)p);
   }
   static void deleteArray_TDSPOperatorControl(void *p) {
      delete [] ((::TDSPOperatorControl*)p);
   }
   static void destruct_TDSPOperatorControl(void *p) {
      typedef ::TDSPOperatorControl current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPOperatorControl

//______________________________________________________________________________
void TDSPOperatorGControl::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPOperatorGControl.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TQQObjectGControl::Streamer(R__b);
      TDSPOperatorControl::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, TDSPOperatorGControl::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPOperatorGControl::IsA(), kTRUE);
      TQQObjectGControl::Streamer(R__b);
      TDSPOperatorControl::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPOperatorGControl::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPOperatorGControl.

      TClass *R__cl = TDSPOperatorGControl::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TQQObjectGControl::ShowMembers(R__insp, R__parent);
      TDSPOperatorControl::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPOperatorGControl_IsA(const void *obj) {
      return ((::TDSPOperatorGControl*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPOperatorGControl(void *p) {
      return  p ? new(p) ::TDSPOperatorGControl : new ::TDSPOperatorGControl;
   }
   static void *newArray_TDSPOperatorGControl(Long_t size) {
      return new ::TDSPOperatorGControl[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPOperatorGControl(void *p) {
      delete ((::TDSPOperatorGControl*)p);
   }
   static void deleteArray_TDSPOperatorGControl(void *p) {
      delete [] ((::TDSPOperatorGControl*)p);
   }
   static void destruct_TDSPOperatorGControl(void *p) {
      typedef ::TDSPOperatorGControl current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPOperatorGControl

//______________________________________________________________________________
void TDSPGeneratorGControl::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPGeneratorGControl.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TDSPOperatorGControl::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, TDSPGeneratorGControl::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPGeneratorGControl::IsA(), kTRUE);
      TDSPOperatorGControl::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPGeneratorGControl::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPGeneratorGControl.

      TClass *R__cl = TDSPGeneratorGControl::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TDSPOperatorGControl::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPGeneratorGControl_IsA(const void *obj) {
      return ((::TDSPGeneratorGControl*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPGeneratorGControl(void *p) {
      return  p ? new(p) ::TDSPGeneratorGControl : new ::TDSPGeneratorGControl;
   }
   static void *newArray_TDSPGeneratorGControl(Long_t size) {
      return new ::TDSPGeneratorGControl[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPGeneratorGControl(void *p) {
      delete ((::TDSPGeneratorGControl*)p);
   }
   static void deleteArray_TDSPGeneratorGControl(void *p) {
      delete [] ((::TDSPGeneratorGControl*)p);
   }
   static void destruct_TDSPGeneratorGControl(void *p) {
      typedef ::TDSPGeneratorGControl current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPGeneratorGControl

//______________________________________________________________________________
void TDSPGroupControl::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPGroupControl.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TQQObjectControl::Streamer(R__b);
      R__b >> fOperatorControls;
      R__b.CheckByteCount(R__s, R__c, TDSPGroupControl::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPGroupControl::IsA(), kTRUE);
      TQQObjectControl::Streamer(R__b);
      R__b << fOperatorControls;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPGroupControl::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPGroupControl.

      TClass *R__cl = TDSPGroupControl::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fOperatorControls", &fOperatorControls);
      TQQObjectControl::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPGroupControl_IsA(const void *obj) {
      return ((::TDSPGroupControl*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPGroupControl(void *p) {
      return  p ? ::new((ROOT::TOperatorNewHelper*)p) ::TDSPGroupControl : new ::TDSPGroupControl;
   }
   static void *newArray_TDSPGroupControl(Long_t size) {
      return new ::TDSPGroupControl[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPGroupControl(void *p) {
      delete ((::TDSPGroupControl*)p);
   }
   static void deleteArray_TDSPGroupControl(void *p) {
      delete [] ((::TDSPGroupControl*)p);
   }
   static void destruct_TDSPGroupControl(void *p) {
      typedef ::TDSPGroupControl current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPGroupControl

//______________________________________________________________________________
void TDSPGroupGControl::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSPGroupGControl.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TQQGControl::Streamer(R__b);
      TDSPGroupControl::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, TDSPGroupGControl::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSPGroupGControl::IsA(), kTRUE);
      TQQGControl::Streamer(R__b);
      TDSPGroupControl::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSPGroupGControl::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSPGroupGControl.

      TClass *R__cl = TDSPGroupGControl::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fGroupControl", &fGroupControl);
      R__insp.Inspect(R__cl, R__parent, "*fComponentsListTreeItem", &fComponentsListTreeItem);
      TQQGControl::ShowMembers(R__insp, R__parent);
      TDSPGroupControl::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSPGroupGControl_IsA(const void *obj) {
      return ((::TDSPGroupGControl*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSPGroupGControl(void *p) {
      return  p ? new(p) ::TDSPGroupGControl : new ::TDSPGroupGControl;
   }
   static void *newArray_TDSPGroupGControl(Long_t size) {
      return new ::TDSPGroupGControl[size];
   }
   // Wrapper around operator delete
   static void delete_TDSPGroupGControl(void *p) {
      delete ((::TDSPGroupGControl*)p);
   }
   static void deleteArray_TDSPGroupGControl(void *p) {
      delete [] ((::TDSPGroupGControl*)p);
   }
   static void destruct_TDSPGroupGControl(void *p) {
      typedef ::TDSPGroupGControl current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSPGroupGControl

/********************************************************
* ControlsDict.cpp
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtableControlsDict();

extern "C" void G__set_cpp_environmentControlsDict() {
  G__add_compiledheader("TROOT.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("TDSPOperatorControl.h");
  G__add_compiledheader("TDSPOperatorGControl.h");
  G__add_compiledheader("TDSPGeneratorGControl.h");
  G__add_compiledheader("TDSPGroupControl.h");
  G__add_compiledheader("TDSPGroupGControl.h");
  G__cpp_reset_tagtableControlsDict();
}
class G__ControlsDictdOcpp_tag {};

void* operator new(size_t size,G__ControlsDictdOcpp_tag* p) {
  if(p && G__PVOID!=G__getgvp()) return((void*)p);
#ifndef G__ROOT
  return(malloc(size));
#else
  return(::operator new(size));
#endif
}

/* dummy, for exception */
#ifdef G__EH_DUMMY_DELETE
void operator delete(void *p,G__ControlsDictdOcpp_tag* x) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}
#endif

static void G__operator_delete(void *p) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}

void G__DELDMY_ControlsDictdOcpp() { G__operator_delete(0); }

extern "C" int G__cpp_dllrevControlsDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TDSPOperatorControl */
static int G__ControlsDict_152_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPOperatorControl *p=NULL;
   if(G__getaryconstruct()) p=new TDSPOperatorControl[G__getaryconstruct()];
   else p=::new((G__ControlsDictdOcpp_tag*)G__getgvp()) TDSPOperatorControl;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__ControlsDictLN_TDSPOperatorControl);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_152_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPOperatorControl::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_152_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPOperatorControl::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_152_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPOperatorControl::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_152_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPOperatorControl::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_152_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPOperatorControl*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_152_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPOperatorControl*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_152_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPOperatorControl*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_152_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPOperatorControl*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_152_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPOperatorControl::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_152_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPOperatorControl::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_152_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPOperatorControl::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_152_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPOperatorControl::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ControlsDict_152_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPOperatorControl *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPOperatorControl(*(TDSPOperatorControl*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__ControlsDictLN_TDSPOperatorControl);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPOperatorControl G__TTDSPOperatorControl;
static int G__ControlsDict_152_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPOperatorControl *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TDSPOperatorControl *)((G__getstructoffset())+sizeof(TDSPOperatorControl)*i))->~G__TTDSPOperatorControl();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TDSPOperatorControl *)(G__getstructoffset()))->~G__TTDSPOperatorControl();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPOperatorGControl */
static int G__ControlsDict_276_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPOperatorGControl *p=NULL;
   switch(libp->paran) {
   case 4:
      p = new TDSPOperatorGControl(
(const TGWindow*)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1])
,(UInt_t)G__int(libp->para[2]),(UInt_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TDSPOperatorGControl(
(const TGWindow*)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1])
,(UInt_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TDSPOperatorGControl((const TGWindow*)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1]));
      break;
   case 1:
      p = new TDSPOperatorGControl((const TGWindow*)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TDSPOperatorGControl[G__getaryconstruct()];
   else                    p=new TDSPOperatorGControl;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__ControlsDictLN_TDSPOperatorGControl);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_276_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPOperatorGControl::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_276_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPOperatorGControl::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_276_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPOperatorGControl::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_276_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPOperatorGControl::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_276_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPOperatorGControl*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_276_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPOperatorGControl*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_276_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPOperatorGControl*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_276_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPOperatorGControl*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_276_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPOperatorGControl::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_276_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPOperatorGControl::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_276_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPOperatorGControl::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_276_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPOperatorGControl::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ControlsDict_276_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPOperatorGControl *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPOperatorGControl(*(TDSPOperatorGControl*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__ControlsDictLN_TDSPOperatorGControl);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPOperatorGControl G__TTDSPOperatorGControl;
static int G__ControlsDict_276_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPOperatorGControl *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPOperatorGControl *)((G__getstructoffset())+sizeof(TDSPOperatorGControl)*i);
   else  delete (TDSPOperatorGControl *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPGeneratorGControl */
static int G__ControlsDict_277_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPGeneratorGControl *p=NULL;
   switch(libp->paran) {
   case 4:
      p = new TDSPGeneratorGControl(
(const TGWindow*)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1])
,(UInt_t)G__int(libp->para[2]),(UInt_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TDSPGeneratorGControl(
(const TGWindow*)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1])
,(UInt_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TDSPGeneratorGControl((const TGWindow*)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1]));
      break;
   case 1:
      p = new TDSPGeneratorGControl((const TGWindow*)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TDSPGeneratorGControl[G__getaryconstruct()];
   else                    p=new TDSPGeneratorGControl;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__ControlsDictLN_TDSPGeneratorGControl);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_277_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPGeneratorGControl::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_277_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPGeneratorGControl::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_277_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPGeneratorGControl::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_277_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPGeneratorGControl::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_277_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPGeneratorGControl*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_277_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPGeneratorGControl*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_277_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPGeneratorGControl*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_277_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPGeneratorGControl*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_277_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPGeneratorGControl::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_277_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPGeneratorGControl::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_277_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPGeneratorGControl::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_277_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPGeneratorGControl::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ControlsDict_277_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPGeneratorGControl *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPGeneratorGControl(*(TDSPGeneratorGControl*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__ControlsDictLN_TDSPGeneratorGControl);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPGeneratorGControl G__TTDSPGeneratorGControl;
static int G__ControlsDict_277_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPGeneratorGControl *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPGeneratorGControl *)((G__getstructoffset())+sizeof(TDSPGeneratorGControl)*i);
   else  delete (TDSPGeneratorGControl *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPGroupControl */
static int G__ControlsDict_354_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPGroupControl *p=NULL;
   if(G__getaryconstruct()) p=new TDSPGroupControl[G__getaryconstruct()];
   else p=::new((G__ControlsDictdOcpp_tag*)G__getgvp()) TDSPGroupControl;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__ControlsDictLN_TDSPGroupControl);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_354_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSPGroupControl*)(G__getstructoffset()))->GetListOfControls());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_354_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPGroupControl*)(G__getstructoffset()))->ExploreGroup();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_354_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPGroupControl*)(G__getstructoffset()))->SetObject((TDSPOperator*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_354_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPGroupControl*)(G__getstructoffset()))->PrintComponents();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_354_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPGroupControl*)(G__getstructoffset()))->Print();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_354_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPGroupControl::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_354_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPGroupControl::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_354_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPGroupControl::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_354_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPGroupControl::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_354_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPGroupControl*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_354_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPGroupControl*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_354_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPGroupControl*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_354_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPGroupControl*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_354_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPGroupControl::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_354_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPGroupControl::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_354_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPGroupControl::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_354_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPGroupControl::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ControlsDict_354_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPGroupControl *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPGroupControl(*(TDSPGroupControl*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__ControlsDictLN_TDSPGroupControl);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPGroupControl G__TTDSPGroupControl;
static int G__ControlsDict_354_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPGroupControl *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TDSPGroupControl *)((G__getstructoffset())+sizeof(TDSPGroupControl)*i))->~G__TTDSPGroupControl();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TDSPGroupControl *)(G__getstructoffset()))->~G__TTDSPGroupControl();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSPGroupGControl */
static int G__ControlsDict_355_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSPGroupGControl *p=NULL;
   switch(libp->paran) {
   case 4:
      p = new TDSPGroupGControl(
(const TGWindow*)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1])
,(UInt_t)G__int(libp->para[2]),(UInt_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TDSPGroupGControl(
(const TGWindow*)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1])
,(UInt_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TDSPGroupGControl((const TGWindow*)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1]));
      break;
   case 1:
      p = new TDSPGroupGControl((const TGWindow*)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TDSPGroupGControl[G__getaryconstruct()];
   else                    p=new TDSPGroupGControl;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__ControlsDictLN_TDSPGroupGControl);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_355_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPGroupGControl*)(G__getstructoffset()))->Print();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_355_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPGroupGControl*)(G__getstructoffset()))->SetObject((TDSPOperator*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_355_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TDSPGroupGControl*)(G__getstructoffset()))->ListTree((TGControlList*)G__int(libp->para[0]),(TGListTreeItem*)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TDSPGroupGControl*)(G__getstructoffset()))->ListTree((TGControlList*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TDSPGroupGControl*)(G__getstructoffset()))->ListTree();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_355_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPGroupGControl*)(G__getstructoffset()))->HandlePopup((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_355_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPGroupGControl*)(G__getstructoffset()))->Paint();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_355_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSPGroupGControl::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_355_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPGroupGControl::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_355_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSPGroupGControl::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_355_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSPGroupGControl::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_355_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSPGroupGControl*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_355_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPGroupGControl*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_355_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPGroupGControl*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_355_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSPGroupGControl*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_355_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPGroupGControl::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_355_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPGroupGControl::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_355_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSPGroupGControl::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ControlsDict_355_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSPGroupGControl::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ControlsDict_355_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSPGroupGControl *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSPGroupGControl(*(TDSPGroupGControl*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__ControlsDictLN_TDSPGroupGControl);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSPGroupGControl G__TTDSPGroupGControl;
static int G__ControlsDict_355_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSPGroupGControl *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSPGroupGControl *)((G__getstructoffset())+sizeof(TDSPGroupGControl)*i);
   else  delete (TDSPGroupGControl *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TDSPOperatorControl */

/* TDSPOperatorGControl */

/* TDSPGeneratorGControl */

/* TDSPGroupControl */

/* TDSPGroupGControl */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncControlsDict {
 public:
  G__Sizep2memfuncControlsDict() {p=&G__Sizep2memfuncControlsDict::sizep2memfunc;}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncControlsDict::*p)();
};

size_t G__get_sizep2memfuncControlsDict()
{
  G__Sizep2memfuncControlsDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceControlsDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ControlsDictLN_TDSPOperatorGControl))) {
     TDSPOperatorGControl *G__Lderived;
     G__Lderived=(TDSPOperatorGControl*)0x1000;
     {
       TQQObjectGControl *G__Lpbase=(TQQObjectGControl*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ControlsDictLN_TDSPOperatorGControl),G__get_linked_tagnum(&G__ControlsDictLN_TQQObjectGControl),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TQQGControl *G__Lpbase=(TQQGControl*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ControlsDictLN_TDSPOperatorGControl),G__get_linked_tagnum(&G__ControlsDictLN_TQQGControl),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQQObject *G__Lpbase=(TQQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ControlsDictLN_TDSPOperatorGControl),G__get_linked_tagnum(&G__ControlsDictLN_TQQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ControlsDictLN_TDSPOperatorGControl),G__get_linked_tagnum(&G__ControlsDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ControlsDictLN_TDSPOperatorGControl),G__get_linked_tagnum(&G__ControlsDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObjSender *G__Lpbase=(TQObjSender*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ControlsDictLN_TDSPOperatorGControl),G__get_linked_tagnum(&G__ControlsDictLN_TQObjSender),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ControlsDictLN_TDSPOperatorGControl),G__get_linked_tagnum(&G__ControlsDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQQObjectControl *G__Lpbase=(TQQObjectControl*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ControlsDictLN_TDSPOperatorGControl),G__get_linked_tagnum(&G__ControlsDictLN_TQQObjectControl),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TDSPOperatorControl *G__Lpbase=(TDSPOperatorControl*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ControlsDictLN_TDSPOperatorGControl),G__get_linked_tagnum(&G__ControlsDictLN_TDSPOperatorControl),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ControlsDictLN_TDSPGeneratorGControl))) {
     TDSPGeneratorGControl *G__Lderived;
     G__Lderived=(TDSPGeneratorGControl*)0x1000;
     {
       TDSPOperatorGControl *G__Lpbase=(TDSPOperatorGControl*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ControlsDictLN_TDSPGeneratorGControl),G__get_linked_tagnum(&G__ControlsDictLN_TDSPOperatorGControl),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TQQObjectGControl *G__Lpbase=(TQQObjectGControl*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ControlsDictLN_TDSPGeneratorGControl),G__get_linked_tagnum(&G__ControlsDictLN_TQQObjectGControl),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQQGControl *G__Lpbase=(TQQGControl*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ControlsDictLN_TDSPGeneratorGControl),G__get_linked_tagnum(&G__ControlsDictLN_TQQGControl),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQQObject *G__Lpbase=(TQQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ControlsDictLN_TDSPGeneratorGControl),G__get_linked_tagnum(&G__ControlsDictLN_TQQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ControlsDictLN_TDSPGeneratorGControl),G__get_linked_tagnum(&G__ControlsDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ControlsDictLN_TDSPGeneratorGControl),G__get_linked_tagnum(&G__ControlsDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObjSender *G__Lpbase=(TQObjSender*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ControlsDictLN_TDSPGeneratorGControl),G__get_linked_tagnum(&G__ControlsDictLN_TQObjSender),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ControlsDictLN_TDSPGeneratorGControl),G__get_linked_tagnum(&G__ControlsDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQQObjectControl *G__Lpbase=(TQQObjectControl*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ControlsDictLN_TDSPGeneratorGControl),G__get_linked_tagnum(&G__ControlsDictLN_TQQObjectControl),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TDSPOperatorControl *G__Lpbase=(TDSPOperatorControl*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ControlsDictLN_TDSPGeneratorGControl),G__get_linked_tagnum(&G__ControlsDictLN_TDSPOperatorControl),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ControlsDictLN_TDSPGroupControl))) {
     TDSPGroupControl *G__Lderived;
     G__Lderived=(TDSPGroupControl*)0x1000;
     {
       TQQObjectControl *G__Lpbase=(TQQObjectControl*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ControlsDictLN_TDSPGroupControl),G__get_linked_tagnum(&G__ControlsDictLN_TQQObjectControl),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ControlsDictLN_TDSPGroupGControl))) {
     TDSPGroupGControl *G__Lderived;
     G__Lderived=(TDSPGroupGControl*)0x1000;
     {
       TQQGControl *G__Lpbase=(TQQGControl*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ControlsDictLN_TDSPGroupGControl),G__get_linked_tagnum(&G__ControlsDictLN_TQQGControl),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TQQObject *G__Lpbase=(TQQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ControlsDictLN_TDSPGroupGControl),G__get_linked_tagnum(&G__ControlsDictLN_TQQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ControlsDictLN_TDSPGroupGControl),G__get_linked_tagnum(&G__ControlsDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ControlsDictLN_TDSPGroupGControl),G__get_linked_tagnum(&G__ControlsDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObjSender *G__Lpbase=(TQObjSender*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ControlsDictLN_TDSPGroupGControl),G__get_linked_tagnum(&G__ControlsDictLN_TQObjSender),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ControlsDictLN_TDSPGroupGControl),G__get_linked_tagnum(&G__ControlsDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TDSPGroupControl *G__Lpbase=(TDSPGroupControl*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ControlsDictLN_TDSPGroupGControl),G__get_linked_tagnum(&G__ControlsDictLN_TDSPGroupControl),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TQQObjectControl *G__Lpbase=(TQQObjectControl*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ControlsDictLN_TDSPGroupGControl),G__get_linked_tagnum(&G__ControlsDictLN_TQQObjectControl),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableControlsDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,
-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,
-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Version_t",115,-1,0,
-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TDSPOperatorControl */
static void G__setup_memvarTDSPOperatorControl(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ControlsDictLN_TDSPOperatorControl));
   { TDSPOperatorControl *p; p=(TDSPOperatorControl*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"i=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__ControlsDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPOperatorGControl */
static void G__setup_memvarTDSPOperatorGControl(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ControlsDictLN_TDSPOperatorGControl));
   { TDSPOperatorGControl *p; p=(TDSPOperatorGControl*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__ControlsDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPGeneratorGControl */
static void G__setup_memvarTDSPGeneratorGControl(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ControlsDictLN_TDSPGeneratorGControl));
   { TDSPGeneratorGControl *p; p=(TDSPGeneratorGControl*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__ControlsDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPGroupControl */
static void G__setup_memvarTDSPGroupControl(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ControlsDictLN_TDSPGroupControl));
   { TDSPGroupControl *p; p=(TDSPGroupControl*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__ControlsDictLN_TList),-1,-1,4,"fOperatorControls=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__ControlsDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSPGroupGControl */
static void G__setup_memvarTDSPGroupGControl(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ControlsDictLN_TDSPGroupGControl));
   { TDSPGroupGControl *p; p=(TDSPGroupGControl*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__ControlsDictLN_TDSPOperatorGControl),-1,-1,4,"fGroupControl=",0,"!");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__ControlsDictLN_TGListTreeItem),-1,-1,4,"fComponentsListTreeItem=",0,"!");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__ControlsDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarControlsDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTDSPOperatorControl(void) {
   /* TDSPOperatorControl */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ControlsDictLN_TDSPOperatorControl));
   G__memfunc_setup("TDSPOperatorControl",1896,G__ControlsDict_152_0_0,105,G__get_linked_tagnum(&G__ControlsDictLN_TDSPOperatorControl),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__ControlsDict_152_2_0,85,G__get_linked_tagnum(&G__ControlsDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__ControlsDict_152_3_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__ControlsDict_152_4_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__ControlsDict_152_5_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__ControlsDict_152_6_0,85,G__get_linked_tagnum(&G__ControlsDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__ControlsDict_152_7_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__ControlsDict_152_8_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ControlsDict_152_9_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__ControlsDict_152_0_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__ControlsDict_152_1_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__ControlsDict_152_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__ControlsDict_152_3_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPOperatorControl",1896,G__ControlsDict_152_4_1,(int)('i'),G__get_linked_tagnum(&G__ControlsDictLN_TDSPOperatorControl),-1,0,1,1,1,0,"u 'TDSPOperatorControl' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPOperatorControl",2022,G__ControlsDict_152_5_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPOperatorGControl(void) {
   /* TDSPOperatorGControl */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ControlsDictLN_TDSPOperatorGControl));
   G__memfunc_setup("TDSPOperatorGControl",1967,G__ControlsDict_276_0_0,105,G__get_linked_tagnum(&G__ControlsDictLN_TDSPOperatorGControl),-1,0,4,1,1,0,
"U 'TGWindow' - 10 NULL parent h - 'UInt_t' 0 150 w "
"h - 'UInt_t' 0 150 h h - 'UInt_t' 0 0 options",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__ControlsDict_276_2_0,85,G__get_linked_tagnum(&G__ControlsDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__ControlsDict_276_3_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__ControlsDict_276_4_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__ControlsDict_276_5_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__ControlsDict_276_6_0,85,G__get_linked_tagnum(&G__ControlsDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__ControlsDict_276_7_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__ControlsDict_276_8_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ControlsDict_276_9_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__ControlsDict_276_0_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__ControlsDict_276_1_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__ControlsDict_276_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__ControlsDict_276_3_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPOperatorGControl",1967,G__ControlsDict_276_4_1,(int)('i'),G__get_linked_tagnum(&G__ControlsDictLN_TDSPOperatorGControl),-1,0,1,1,1,0,"u 'TDSPOperatorGControl' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPOperatorGControl",2093,G__ControlsDict_276_5_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPGeneratorGControl(void) {
   /* TDSPGeneratorGControl */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ControlsDictLN_TDSPGeneratorGControl));
   G__memfunc_setup("TDSPGeneratorGControl",2058,G__ControlsDict_277_0_0,105,G__get_linked_tagnum(&G__ControlsDictLN_TDSPGeneratorGControl),-1,0,4,1,1,0,
"U 'TGWindow' - 10 NULL parent h - 'UInt_t' 0 150 w "
"h - 'UInt_t' 0 150 h h - 'UInt_t' 0 0 options",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__ControlsDict_277_2_0,85,G__get_linked_tagnum(&G__ControlsDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__ControlsDict_277_3_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__ControlsDict_277_4_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__ControlsDict_277_5_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__ControlsDict_277_6_0,85,G__get_linked_tagnum(&G__ControlsDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__ControlsDict_277_7_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__ControlsDict_277_8_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ControlsDict_277_9_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__ControlsDict_277_0_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__ControlsDict_277_1_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__ControlsDict_277_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__ControlsDict_277_3_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPGeneratorGControl",2058,G__ControlsDict_277_4_1,(int)('i'),
G__get_linked_tagnum(&G__ControlsDictLN_TDSPGeneratorGControl),-1,0,1,1,1,0,"u 'TDSPGeneratorGControl' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPGeneratorGControl",2184,G__ControlsDict_277_5_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPGroupControl(void) {
   /* TDSPGroupControl */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ControlsDictLN_TDSPGroupControl));
   G__memfunc_setup("TDSPGroupControl",1577,G__ControlsDict_354_0_0,105,G__get_linked_tagnum(&G__ControlsDictLN_TDSPGroupControl),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetListOfControls",1733,G__ControlsDict_354_2_0,85,G__get_linked_tagnum(&G__ControlsDictLN_TList),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ExploreGroup",1260,G__ControlsDict_354_3_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetObject",899,G__ControlsDict_354_4_0,121,-1,-1,0,1,1,1,0,"U 'TDSPOperator' - 0 - o",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PrintComponents",1587,G__ControlsDict_354_5_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Print",525,G__ControlsDict_354_6_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__ControlsDict_354_7_0,85,G__get_linked_tagnum(&G__ControlsDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__ControlsDict_354_8_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__ControlsDict_354_9_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__ControlsDict_354_0_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__ControlsDict_354_1_1,85,G__get_linked_tagnum(&G__ControlsDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__ControlsDict_354_2_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__ControlsDict_354_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ControlsDict_354_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__ControlsDict_354_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__ControlsDict_354_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__ControlsDict_354_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__ControlsDict_354_8_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPGroupControl",1577,G__ControlsDict_354_9_1,(int)('i'),G__get_linked_tagnum(&G__ControlsDictLN_TDSPGroupControl),-1,0,1,1,1,0,"u 'TDSPGroupControl' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPGroupControl",1703,G__ControlsDict_354_0_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSPGroupGControl(void) {
   /* TDSPGroupGControl */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ControlsDictLN_TDSPGroupGControl));
   G__memfunc_setup("TDSPGroupGControl",1648,G__ControlsDict_355_0_0,105,G__get_linked_tagnum(&G__ControlsDictLN_TDSPGroupGControl),-1,0,4,1,1,0,
"U 'TGWindow' - 10 NULL parent h - 'UInt_t' 0 150 w "
"h - 'UInt_t' 0 150 h h - 'UInt_t' 0 0 options",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Print",525,G__ControlsDict_355_2_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetObject",899,G__ControlsDict_355_3_0,121,-1,-1,0,1,1,1,0,"U 'TDSPOperator' - 0 - o",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ListTree",812,G__ControlsDict_355_4_0,121,-1,-1,0,2,1,1,0,
"U 'TGControlList' - 0 NULL list U 'TGListTreeItem' - 0 NULL parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("HandlePopup",1120,G__ControlsDict_355_5_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Paint",508,G__ControlsDict_355_6_0,121,-1,-1,0,0,1,1,0,"","*SIGNAL*",(void*)NULL,1);
   G__memfunc_setup("Class",502,G__ControlsDict_355_7_0,85,G__get_linked_tagnum(&G__ControlsDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__ControlsDict_355_8_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__ControlsDict_355_9_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__ControlsDict_355_0_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__ControlsDict_355_1_1,85,G__get_linked_tagnum(&G__ControlsDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__ControlsDict_355_2_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__ControlsDict_355_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ControlsDict_355_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__ControlsDict_355_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__ControlsDict_355_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__ControlsDict_355_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__ControlsDict_355_8_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TDSPGroupGControl",1648,G__ControlsDict_355_9_1,(int)('i'),G__get_linked_tagnum(&G__ControlsDictLN_TDSPGroupGControl),-1,0,1,1,1,0,"u 'TDSPGroupGControl' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSPGroupGControl",1774,G__ControlsDict_355_0_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncControlsDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalControlsDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcControlsDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__ControlsDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__ControlsDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__ControlsDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__ControlsDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__ControlsDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__ControlsDictLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__ControlsDictLN_TQObject = { "TQObject" , 99 , -1 };
G__linked_taginfo G__ControlsDictLN_TQObjSender = { "TQObjSender" , 99 , -1 };
G__linked_taginfo G__ControlsDictLN_TQQObject = { "TQQObject" , 99 , -1 };
G__linked_taginfo G__ControlsDictLN_TQQGControl = { "TQQGControl" , 99 , -1 };
G__linked_taginfo G__ControlsDictLN_TQQObjectControl = { "TQQObjectControl" , 99 , -1 };
G__linked_taginfo G__ControlsDictLN_TDSPOperatorControl = { "TDSPOperatorControl" , 99 , -1 };
G__linked_taginfo G__ControlsDictLN_TGWindow = { "TGWindow" , 99 , -1 };
G__linked_taginfo G__ControlsDictLN_TGListTreeItem = { "TGListTreeItem" , 99 , -1 };
G__linked_taginfo G__ControlsDictLN_TGControlList = { "TGControlList" , 99 , -1 };
G__linked_taginfo G__ControlsDictLN_TQQObjectGControl = { "TQQObjectGControl" , 99 , -1 };
G__linked_taginfo G__ControlsDictLN_TDSPOperatorGControl = { "TDSPOperatorGControl" , 99 , -1 };
G__linked_taginfo G__ControlsDictLN_TDSPGeneratorGControl = { "TDSPGeneratorGControl" , 99 , -1 };
G__linked_taginfo G__ControlsDictLN_TDSPOperator = { "TDSPOperator" , 99 , -1 };
G__linked_taginfo G__ControlsDictLN_TDSPGroupControl = { "TDSPGroupControl" , 99 , -1 };
G__linked_taginfo G__ControlsDictLN_TDSPGroupGControl = { "TDSPGroupGControl" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableControlsDict() {
  G__ControlsDictLN_TClass.tagnum = -1 ;
  G__ControlsDictLN_TBuffer.tagnum = -1 ;
  G__ControlsDictLN_TMemberInspector.tagnum = -1 ;
  G__ControlsDictLN_TObject.tagnum = -1 ;
  G__ControlsDictLN_TNamed.tagnum = -1 ;
  G__ControlsDictLN_TList.tagnum = -1 ;
  G__ControlsDictLN_TQObject.tagnum = -1 ;
  G__ControlsDictLN_TQObjSender.tagnum = -1 ;
  G__ControlsDictLN_TQQObject.tagnum = -1 ;
  G__ControlsDictLN_TQQGControl.tagnum = -1 ;
  G__ControlsDictLN_TQQObjectControl.tagnum = -1 ;
  G__ControlsDictLN_TDSPOperatorControl.tagnum = -1 ;
  G__ControlsDictLN_TGWindow.tagnum = -1 ;
  G__ControlsDictLN_TGListTreeItem.tagnum = -1 ;
  G__ControlsDictLN_TGControlList.tagnum = -1 ;
  G__ControlsDictLN_TQQObjectGControl.tagnum = -1 ;
  G__ControlsDictLN_TDSPOperatorGControl.tagnum = -1 ;
  G__ControlsDictLN_TDSPGeneratorGControl.tagnum = -1 ;
  G__ControlsDictLN_TDSPOperator.tagnum = -1 ;
  G__ControlsDictLN_TDSPGroupControl.tagnum = -1 ;
  G__ControlsDictLN_TDSPGroupGControl.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableControlsDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum(&G__ControlsDictLN_TClass);
   G__get_linked_tagnum(&G__ControlsDictLN_TBuffer);
   G__get_linked_tagnum(&G__ControlsDictLN_TMemberInspector);
   G__get_linked_tagnum(&G__ControlsDictLN_TObject);
   G__get_linked_tagnum(&G__ControlsDictLN_TNamed);
   G__get_linked_tagnum(&G__ControlsDictLN_TList);
   G__get_linked_tagnum(&G__ControlsDictLN_TQObject);
   G__get_linked_tagnum(&G__ControlsDictLN_TQObjSender);
   G__get_linked_tagnum(&G__ControlsDictLN_TQQObject);
   G__get_linked_tagnum(&G__ControlsDictLN_TQQGControl);
   G__get_linked_tagnum(&G__ControlsDictLN_TQQObjectControl);
   G__tagtable_setup(G__get_linked_tagnum(&G__ControlsDictLN_TDSPOperatorControl),sizeof(TDSPOperatorControl),-1,1280,(char*)NULL,G__setup_memvarTDSPOperatorControl,G__setup_memfuncTDSPOperatorControl);
   G__get_linked_tagnum(&G__ControlsDictLN_TGWindow);
   G__get_linked_tagnum(&G__ControlsDictLN_TGListTreeItem);
   G__get_linked_tagnum(&G__ControlsDictLN_TGControlList);
   G__get_linked_tagnum(&G__ControlsDictLN_TQQObjectGControl);
   G__tagtable_setup(G__get_linked_tagnum(&G__ControlsDictLN_TDSPOperatorGControl),sizeof(TDSPOperatorGControl),-1,62720,(char*)NULL,G__setup_memvarTDSPOperatorGControl,G__setup_memfuncTDSPOperatorGControl);
   G__tagtable_setup(G__get_linked_tagnum(&G__ControlsDictLN_TDSPGeneratorGControl),sizeof(TDSPGeneratorGControl),-1,62720,(char*)NULL,G__setup_memvarTDSPGeneratorGControl,G__setup_memfuncTDSPGeneratorGControl);
   G__get_linked_tagnum(&G__ControlsDictLN_TDSPOperator);
   G__tagtable_setup(G__get_linked_tagnum(&G__ControlsDictLN_TDSPGroupControl),sizeof(TDSPGroupControl),-1,1280,(char*)NULL,G__setup_memvarTDSPGroupControl,G__setup_memfuncTDSPGroupControl);
   G__tagtable_setup(G__get_linked_tagnum(&G__ControlsDictLN_TDSPGroupGControl),sizeof(TDSPGroupGControl),-1,62720,(char*)NULL,G__setup_memvarTDSPGroupGControl,G__setup_memfuncTDSPGroupGControl);
}
extern "C" void G__cpp_setupControlsDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupControlsDict()");
  G__set_cpp_environmentControlsDict();
  G__cpp_setup_tagtableControlsDict();

  G__cpp_setup_inheritanceControlsDict();

  G__cpp_setup_typetableControlsDict();

  G__cpp_setup_memvarControlsDict();

  G__cpp_setup_memfuncControlsDict();
  G__cpp_setup_globalControlsDict();
  G__cpp_setup_funcControlsDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncControlsDict();
  return;
}
class G__cpp_setup_initControlsDict {
  public:
    G__cpp_setup_initControlsDict() { G__add_setup_func("ControlsDict",(G__incsetup)(&G__cpp_setupControlsDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initControlsDict() { G__remove_setup_func("ControlsDict"); }
};
G__cpp_setup_initControlsDict G__cpp_setup_initializerControlsDict;

