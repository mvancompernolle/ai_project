///////////////////////////////////////////////////////////////////
// Automatically generated by xml2ulxr v1.7.5.
//
// xml2ulxr is part of Ultra Lightweight XML RPC for C++.
// See also http://ulxmlrpcpp.sourceforge.net
//
// Intended for manual and persistent changes 
/////////////////////////////////////////////////

//#define ULXR_UNICODE_ONLY_HELPERS
#include <ulxmlrpcpp/ulxmlrpcpp.h> // always first

#include <ulxmlrpcpp/ulxr_value.h>
#include "UlxrIdlTest_ulxr_client.h"

#include <ulxmlrpcpp/ulxr_response.h>
#include <ulxmlrpcpp/ulxr_requester.h>
#include <ulxmlrpcpp/ulxr_except.h>

#include "UlxrIdlTest_ulxr_names.h"

UlxrIdlTestClient::UlxrIdlTestClient
  (ulxr::Requester &in_requester, const ulxr::CppString &realm,
   const ulxr::CppString &user, const ulxr::CppString &pass)
   : requester(in_requester)
   , rpc_realm(realm)
   , rpc_user(user)
   , rpc_pass(pass)
   , callTo_first_url4_ovr4(ULXR_CALLTO_UlxrIdlTest_first_url4_ovr4)  // mapped to: void UlxrIdlTest::first_url4() (there are overloaded methods)
   , callTo_first_url4_ovr3(ULXR_CALLTO_UlxrIdlTest_first_url4_ovr3)  // mapped to: std::string * UlxrIdlTest::first_url4(int i) (there are overloaded methods)
   , callTo_first_url4_ovr2(ULXR_CALLTO_UlxrIdlTest_first_url4_ovr2)  // mapped to: std::string * UlxrIdlTest::first_url4(long int li) (there are overloaded methods)
   , callTo_first_url4_ovr1(ULXR_CALLTO_UlxrIdlTest_first_url4_ovr1)  // mapped to: const char * UlxrIdlTest::first_url4(float li) (there are overloaded methods)
   , callTo_first_url4_ovr0(ULXR_CALLTO_UlxrIdlTest_first_url4_ovr0)  // mapped to: wchar_t * const UlxrIdlTest::first_url4(double li) (there are overloaded methods)
   , callTo_constTest(ULXR_CALLTO_UlxrIdlTest_constTest)  // mapped to: std::string UlxrIdlTest::constTest() const
   , callTo_constRefTest(ULXR_CALLTO_UlxrIdlTest_constRefTest)  // mapped to: std::string & UlxrIdlTest::constRefTest() const
   , callTo_firstViewConst(ULXR_CALLTO_UlxrIdlTest_firstViewConst)  // mapped to: long int * UlxrIdlTest::firstViewConst() const
   , callTo_firstView(ULXR_CALLTO_UlxrIdlTest_firstView)  // mapped to: std::string * UlxrIdlTest::firstView()
   , callTo_nextView1(ULXR_CALLTO_UlxrIdlTest_nextView1)  // mapped to: std::wstring * UlxrIdlTest::nextView1(int i, long int * l, std::string & s, const bool * b, char c) const
   , callTo_nextView2(ULXR_CALLTO_UlxrIdlTest_nextView2)  // mapped to: std::basic_string<char> * UlxrIdlTest::nextView2(int i, long int l, std::string & s, bool * const b, char c) const
   , callTo_getNumObjects(ULXR_CALLTO_UlxrIdlTest_getNumObjects)  // mapped to: void UlxrIdlTest::getNumObjects(std::string s)
   , callTo_getObject(ULXR_CALLTO_UlxrIdlTest_getObject)  // mapped to: const std::basic_string<wchar_t> * UlxrIdlTest::getObject(const std::string & s)
   , callTo_getNumPages(ULXR_CALLTO_UlxrIdlTest_getNumPages)  // mapped to: int UlxrIdlTest::getNumPages(const std::wstring & s)
   , callTo_last_url4_ovr0(ULXR_CALLTO_UlxrIdlTest_last_url4_ovr0)  // mapped to: const std::string * UlxrIdlTest::last_url4() (there are overloaded methods)
   , callTo_last_url4_ovr1(ULXR_CALLTO_UlxrIdlTest_last_url4_ovr1)  // mapped to: std::string * UlxrIdlTest::last_url4(int i) (there are overloaded methods)
   , callTo_last_url4_ovr2(ULXR_CALLTO_UlxrIdlTest_last_url4_ovr2)  // mapped to: std::string * UlxrIdlTest::last_url4(long int li) (there are overloaded methods)
{
}


ulxr::MethodResponse
  UlxrIdlTestClient::sendCall(const ulxr::MethodCall &calldata) const
{
  ulxr::MethodResponse resp = requester.call(calldata, rpc_realm, rpc_user, rpc_pass);

  if (!resp.isOK())
  {
    ulxr::Struct st = resp.getResult();
    int ec = ulxr::Integer(st.getMember(ULXR_PCHAR("faultCode"))).getInteger();
    ulxr::CppString es = ulxr::RpcString(st.getMember(ULXR_PCHAR("faultString"))).getString();
    throw ulxr::RuntimeException(ec, es);
  }

  return resp;
}


UlxrIdlTestClient::~UlxrIdlTestClient()
{
}


